#,Project,Tracker,Parent task,Status,Priority,Subject,Author,Assigned To,Updated,Category,Target version,Start date,Due date,Estimated time,% Done,Created,Story points,Velocity based estimate,Position,Remaining (hours),Affected Flow version,Description
2408,TYPO3.Flow,Feature,"",Resolved,Should have,Automatic flushing of object configuration cache,Robert Lemke,Robert Lemke,2010-10-20 05:39,Object,1.0 alpha 1,2009-01-05,"","",100,2009-01-05 10:16,"","",1792750,"","",Similar to the automatic flushing of the Reflection Cache (or parts of it) the object configuration cache should be rebuilt whenever a class is modified - at least in the development context.
2444,TYPO3.Flow,Task,"",Rejected,Must have,Refactor Request -> Remove *ObjectNamePattern,Sebastian Kurfuerst,Sebastian Kurfuerst,2010-10-20 05:39,MVC,"",2009-01-11,"",5.00,0,2009-01-11 11:21,"","",12450,"","","We should refactor the MVC_Request, to move all logic out of it.

This means the following:
* Drop $controllerObjectNamePattern (and getters/setters for it)
* Drop $viewObjectNamePattern (and getters/setters for it)
* Presumably, a lot of other stuff can be removed as well due to that refacoring.
* Introduce a new $fullyQualifiedControllerObjectName (including setters/getters) which contains fully qualified Controller name, such as F3\MyPackage\MySubPackage\Controller\SomeController
* Analogous for $fullyQualifiedViewObjectName

The fullyQualifiedControllerName is being set by the MVC\Web\Routing\Router.
"
2454,TYPO3.Flow,Task,"",Resolved,Must have,Change license name in @license-tag to correct naming,Malte Jansen,Karsten Dambekalns,2010-10-20 05:39,"",1.0 alpha 1,2009-01-13,"",0.10,100,2009-01-13 10:13,"","",12600,"","","The License-Name in the @license Tag is wrong. The long header is correct.

The ""General"" is missing...

Just replace
@@license http://www.gnu.org/licenses/lgpl.html GNU Lesser Public License, version 3 or later@
with
@@license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License, version 3 or later@"
2481,TYPO3.Flow,Bug,"",Resolved,Should have,"Reflection-Service might crash, due to wrong exception",Malte Jansen,"",2010-10-20 05:39,Reflection,"",2009-01-19,"","",100,2009-01-19 06:46,"","",1783450,"","","http://forge.typo3.org/repositories/changes/package-flow3/trunk/Classes/Reflection/F3_FLOW3_Reflection_Service.php

on line 208:
@if ($this->initialized) throw new \F3\FLOW3\ReflectionException('The reflection service can only be initialized once.', 1232044696);@

must be: \F3\FLOW3\Reflection\Exception

(The Exception does not exist...)
"
2486,TYPO3.Fluid,Bug,"",Resolved,Must have,Template names not resolved correctly (file name case issue),Karsten Dambekalns,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-01-20,"","",0,2009-01-20 07:52,"","",2601850,"","","In r1769 I tried to fix a bug which I experienced, in r1773 I reverted the case-change to the template file names. Now, here is what the problem is:

When you call the XSD generation helper, you simply call http://.../fluid

# Since no controller and action is given, ""Default"" and ""index"" are used
# The template is resolved as "".../Default/index.html"", fine.

Now you fill in the form and press proceed.

# Controller and action are given, ""default"" and ""generatexsd"" are used
# The template is resolved as "".../default/generatexsd.html""
# The file lies in "".../Default/generateXSD.html"" and cannot be found, leading to Exception 1225709595

The FLOW3 MVC part circumvents the problem by using getCaseSensitiveObjectName() when looking for controller or view objects. Since the template is not registered with the object manager, this is of no help here, but a similar mechanism is needed.

*Note:* The problem can only be reproduced on a case-sensitive filesystem."
2505,TYPO3.Flow,Bug,"",Resolved,Must have,RequestHandler can not be changed from the package configuration,Christoph Blömer,Robert Lemke,2010-10-20 05:39,Configuration,"",2009-01-22,"","",100,2009-01-22 06:22,"","",1783400,"","","When trying to add or change the possible RequestHandler for a package, the new RequestHandler is not merged.
This is because the Package Manager is not initialized at that time.

A solution for changing the RequestHandler for a package from inside the package configuration is needed.

This is needed because of additional RequestMethods for the WebDAV protocol."
2506,TYPO3.Flow,Feature,"",Resolved,Should have,Automagic action argument registration,Robert Lemke,Robert Lemke,2010-10-20 05:39,MVC,1.0 alpha 1,2009-01-22,"","",70,2009-01-22 11:35,"","",1792700,"","","Currently arguments of a controller must be registered manually through the <pre>$this->arguments->addNewArgument()</pre> method.

In the future this should be possible per action and by just defining arguments as method arguments (and properly documenting them):

<pre>
/**
 * @param string $uuid
 * @param string $name 
 * @param string $description Description of blog posting
 */
public function updateAction($uuid, $name, $description) {
}
</pre>

How validation is configured requires, however, further research."
2508,TYPO3.Flow,Bug,"",Rejected,Should have,Object variables which obtain their value from Super Globals are not available in child classes,Christoph Blömer,Robert Lemke,2010-10-20 05:39,MVC,"",2009-01-23,"","",0,2009-01-22 23:31,"","",1783350,"","","When a class variable like $this->SERVER obtains the value from a super global like $_SERVER and the global variable is replaced by the SuperGlobalReplacement, the class variable can not be accessed from a child class."
2509,TYPO3.Flow,Feature,"",Closed,Should have,Mapping properties to complex object -> Part-Mappings,Sebastian Kurfuerst,"",2010-10-20 05:39,MVC,1.0 alpha 1,2009-01-23,"","",0,2009-01-23 05:58,"","",1792650,"","","Example: There is a ""Customer"" domain object with 10 properties.
In the View, we render a form to change two of these properties.
-> However, Data Mapping creates an object with all properties, but only two were submitted.

Somehow we need to make the actually sent properties accessible - to only map these to the target domain object then."
2510,TYPO3.Flow,Feature,"",Closed,Should have,Mapping complex objects -> Relations support,Sebastian Kurfuerst,"",2010-10-20 05:39,Property,"",2009-01-23,"","",0,2009-01-23 05:59,"","",1783300,"","","When mapping complex objects, currently relations are not supported. They are however really important :-) (needs to be done somehow in DomainObjectConverter)"
2511,TYPO3.Flow,Task,"",Resolved,Should have,Refactor Package\Meta to Package\MetaData,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Package,"",2009-01-23,"","",100,2009-01-23 07:30,"","",12850,"","","The metadata for a package is organized in the ""Meta"" class, following the ""MetaInterface"". This means we also have ""MetaReader"" and various member variables named according to this schema.

Now, a meta reader reads about reading and what a meta interface is is greek to me. :)

Thus it seems to be a good thing to rename that ""Meta"" to ""MetaData"" and adjust the following uses of the name as well."
2515,TYPO3.Flow,Task,"",Resolved,Must have,Inconsistent class names in sub namespaces,Robert Lemke,Robert Lemke,2010-10-20 05:39,"",1.0 alpha 1,2009-01-26,"","",100,2009-01-26 11:44,"","",12900,"","","In the current code base the naming of classes in sub namespaces is not consistent. After a short discussion we came up with the following rules:

 - The unqualified class name must be meant literally even without the namespace. 
 - The main purpose of namespaces is categorization and ordering

Thes rules prevent us from running into conflicts with reserved keywords.

h2. Bad examples:

<pre>
Fully qualified class name            Unqualified class name     Remarks
--------------------------------------------------------------------------------------------------------------------
\F3\FLOW3\Session\PHP                 PHP                        The class is not a representation of PHP!
\F3\FLOW3\Cache\Backend\File          File                       The class doesn't represent a file!
\F3\FLOW3\Session\Interface           Interface                  Not allowed, ""Interface"" is a reserved keyword
\F3\Foo\Controller\Default            Default                    Not allowed, ""Default"" is a reserved keyword
</pre>

h2. Good examples:

<pre>
Fully qualified class name            Unqualified class name     Remarks
--------------------------------------------------------------------------------------------------------------------
\F3\FLOW3\Session\PHPSession          PHPSession                 That's a PHP Session
\F3\FLOW3\Cache\Backend\FileBackend   FileBackend                A File Backend
\F3\FLOW3\Session\SessionInterface    SessionInterface           Interface for a session
\F3\Foo\Controller\DefaultController  DefaultController          The default controller
</pre>

h2. Edge cases:

<pre>
Fully qualified class name            Unqualified class name     Remarks
--------------------------------------------------------------------------------------------------------------------
\F3\FLOW3\Object\Manager              Manager                    If it's the only manager in that namespace, it's okay
\F3\Foo\Bar\Builder                   Builder                    If it's clear what the builder builds (Bar?), it's okay
\F3\FLOW3\Object\Builder              Builder                    Problem: There's a ""ConfigurationBuilder"" in the same
                                                                 namespace, therefore better rename the Builder to
                                                                 ObjectBuilder
\F3\FLOW3\Object\Factory              Factory                    As long as it is the only factory in that namespace, okay
\F3\FLOW3\MVC\ControllerInterface     ControllerInterface        Consequently the interface belongs to all the
                                                                 controllers in the Controller sub namespace
\F3\FLOW3\MVC\Controller\ControllerInterface                     Better
\F3\FLOW3\Cache\AbstractBackend       AbstractBackend            Same here: In reality this class belongs to the backends
\F3\FLOW3\Cache\Backend\AbstractBackend                          Better
</pre>

Scope of this ticket:
# Refactor class names which don't follow the above rules.
# -Add the above rules to the CGL.-
"
2524,TYPO3.Flow,Task,"",Resolved,Must have,Short filenames for class files,Robert Lemke,Robert Lemke,2010-10-20 05:39,"",1.0 alpha 1,2009-01-28,"","",100,2009-01-28 05:00,"","",13000,"","","The convention for names of class files is changed from 

<pre>
  F3_Package_SubPackage_SubSubPackage_UnqualifiedClassName.php
</pre>
to
<pre>
  UnqualifiedClassName.php
</pre>

See also:
http://lists.netfielders.de/pipermail/typo3-project-5_0-general/2009-January/001761.html
"
2536,TYPO3.Flow,Task,"",Resolved,Must have,Additions to coding guidelines,Robert Lemke,"",2010-10-20 05:39,- Documentation -,1.0 alpha 1,2009-01-30,"","",100,2009-01-30 06:02,"","",13050,"","","Add (and explain) the following rules to the CGLs:

1. Prefer strict comparisons whenever possible. Examples:
<pre>
   if ($template)             // BAD
   if (isset($template))      // GOOD
   if ($template !== NULL))   // GOOD
   if ($template !== ''))     // GOOD
   if (strlen($template) > 0) // BAD! strlen(""-1"") is greater than 0
   if (is_string($template) && strlen($template) >0) // BETTER

   if ($foo == $bar)          // BAD, avoid truthy comparisons
   if ($foo != $bar)          // BAD, avoid falsy comparisons
   if ($foo === $bar))        // GOOD
   if ($foo !== $bar))        // GOOD
</pre>

!trueFalse.jpg!

2. Order of methods:

 1. constructor
 2. injection methods
 3. initialization methods (including initializeObject())
 4. public methods
 5. protected methods
 6. private methods
 7. shutdown method(s)
 8. destructor

3. Avoid double-negation:

Instead of @exportSystemView(..., $noRecurse)@ use @exportSystemView(..., $recurse)@. It is more logical to pass TRUE if you want recursion instead of having to pass FALSE. In general, parameters negating things are a bad idea.
"
2556,TYPO3.Flow,Task,"",Resolved,Should have,Use only mock objects instead of the real object manager / factory in Routing tests,Robert Lemke,Bastian Waidelich,2010-10-20 05:39,MVC,"",2009-02-04,"","",100,2009-02-04 06:09,"","",13100,"","",Currently most of the tests of MVC/Web/Routing/* use real objects instead of mocked ones (especially in the RouteTest). This needs to be cleaned up.
2557,TYPO3.Flow,Bug,"",Resolved,Must have,Links rendered by the Router ignore application context,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 1,2009-02-04,"","",100,2009-02-04 06:18,"","",1792600,"","","If the application context is != production, the URL usually includes the index_*.php segment:

<pre>http://myhost/index_dev.php/foo/bar/baz</pre>

The script filename is, however, removed in rendered links which leads to a context switch:

<pre>http://myhost/foo/bar/baz</pre>
"
2558,TYPO3.Flow,Bug,"",Closed,Must have,Property Injection doesn't work with subclasses,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,Object,1.0 alpha 1,2009-02-04,"","",100,2009-02-04 07:29,"","",1792550,"","","A property flagged for property injection will only be injected in the class it has been defined, not in one of the subclasses:

<pre>
class Foo {
   
   /**
    * @var Baz
    * @inject
    */
   protected $baz;
}

class Bar extends Foo {
   
   public function doSomething() {
      $this->baz->doSomething()
   }
}

</pre>

... will result in a fatal error because $this->baz is not defined.
"
2580,TYPO3.Flow,Bug,"",Resolved,Must have,Crash in MVC-Controller,Malte Jansen,"",2010-10-20 05:39,MVC,"",2009-02-05,"","",100,2009-02-05 10:12,"","",1783250,"","","The function initializeAction() of the ActionController does not have the access to the to $this->view, because the first the function is called the view is not initilized.

The function is called twice 
1. while creating the object (after the injections) --> $this->view is empty
2. while callActionMethod() --> the view is initialized

_Expected result:_
The view is available in initializeAction().

_Solution:_
Rename initializeAction() to preAction().


Perhaps some postAction() would also be pretty useful."
2601,TYPO3.Flow,Bug,"",Resolved,Must have,canProcessRequest doesn't accept mocked requests,Robert Lemke,Robert Lemke,2010-10-20 05:39,MVC,1.0 alpha 1,2009-02-09,"","",100,2009-02-09 09:44,"","",1792500,"","",Currently the canProcessRequest() method only checks if the class name of the request 100% matches the class names specified in $this->supportedRequestTypes. Therefore sub classes of these (like mock web requests) are not accepted.
2602,TYPO3.Flow,Feature,"",Resolved,Should have,Automatically render the view if action returns nothing (NULL),Robert Lemke,Robert Lemke,2010-10-20 05:39,MVC,1.0 alpha 1,2009-02-10,"","",100,2009-02-10 08:57,"","",1792450,"","","To save even more typing while developing a controller, we can tell the action controller to automatically render a view if a) a view exists and b) the action method didn't return anything."
2603,TYPO3.Flow,Feature,"",Resolved,Must have,Implement magic findBy*() and findOneBy*() methods in the base repository,Robert Lemke,Robert Lemke,2010-10-20 05:39,Persistence,1.0 alpha 1,2009-02-10,"","",0,2009-02-10 12:34,"","",1792400,"","","The base Repository should provide some magic __call() method taking care of findBy*() and findOneBy*() method calls, returning the results of searches for a property called after the method:

<pre>
   $result1 = $repository->findByFoo('bar');
   $result2 = $repository->findOneByFoo('bar');
</pre>

$result1 will contain an array of all objects whose property 'foo' is 'bar'.
$result2 will contain the first object which matches a search for 'foo' == 'bar'.

"
2618,TYPO3.Flow,Bug,"",Rejected,Should have,Tweak/Improvment: ActionController,Malte Jansen,Robert Lemke,2010-10-20 05:39,MVC,"",2009-02-12,"","",0,2009-02-11 18:16,"","",1783200,"","","It's not really a bug, but a little tweak for the ActionController...

What about making the following function _final_? Than it cannot be overwritten...

@/**
 * Implementation of the arguments initilization in the action controller:
 * Automatically registers arguments of the current action
 *
 * Don't override this method - use initializeArguments() instead.
 *
 * @return void
 * @author Robert Lemke <robert@typo3.org>
 * @see initializeArguments()
 * @internal
 */
protected function initializeActionMethodArguments() {

}@"
2619,TYPO3.Flow,Bug,"",Resolved,Must have,Deprecated function in \FLOW3\Classes\AOP\PointcutSettingFilter,Malte Jansen,Robert Lemke,2010-10-20 05:39,AOP,"",2009-02-12,"","",100,2009-02-11 18:28,"","",1783150,"","","Following error is thrown while Testing:

_Deprecated: Function split() is deprecated in ~\Packages\Global\FLOW3\Classes\AOP\PointcutSettingFilter.php on line 122_
_Deprecated: Function split() is deprecated in ~\Packages\Global\FLOW3\Classes\AOP\PointcutSettingFilter.php on line 135_

Solution:

Use explode() or preg_split() instead..."
2621,TYPO3.Flow,Feature,"",Resolved,Must have,Support SPLObjectStorage as container for references to other persisted objects,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,Persistence,1.0 alpha 1,2009-02-12,"","",100,2009-02-12 05:09,"","",1792350,"","","Currently references to other objects must be stored in an array or as a single property:

<pre>
class Invoice {

   /**
    * @var array
    */
   protected $invoiceDetails = array();

   /**
    * @var Customer
    */
   protected $customer;
}

</pre>

But in many cases it makes sense to store objects in an SPLObjectStorage:

<pre>
class Blog {

   /**
    * @var \SPLObjectStorage
    */
   protected $posts;
}

</pre>

By using the SPLObjectStorage we can assure that no post can be added twice
to a blog.

The Persistence Manager should therefore support SPLObjectStorages
"
2630,TYPO3.Flow,Bug,"",Resolved,Must have,Fatal error: Call to undefined method SplObjectStorage::addAll(),Bastian Waidelich,"",2010-10-20 05:39,Persistence,"",2009-02-13,"","",100,2009-02-13 03:58,"","",1783100,"","","With an updated version of the FLOW3 distribution I'm getting a
<pre>
Fatal error: Call to undefined method SplObjectStorage::addAll() in Packages/Global/FLOW3/Classes/Persistence/Manager.php on line 193
</pre>
on every page.

Environment: Ubuntu, PHP 5.3.0alpha3, Dev- & Production-Context"
2669,TYPO3.Fluid,Feature,"",Closed,Could have,PDF version of the documentation,Fabien Udriot,"",2012-02-17 06:55,"","",2009-02-20,"","",0,2009-02-20 08:04,"","",2601800,"","","In the attachment, there is the PDF version of the documentation.

If you are interested by the script that makes the conversion DocBook -> PDF, let me know.

Cheers."
2683,TYPO3.Flow,Bug,"",Resolved,Should have,Advice can only be declared on public methods,Bastian Waidelich,Karsten Dambekalns,2010-10-20 05:39,AOP,"",2009-02-23,"","",100,2009-02-23 09:37,"","",1783050,"","","Advice can only be declared on public methods. This should work for protected methods, too."
2711,TYPO3.Flow,Task,"",Resolved,Should have,Refactor method names in configuration manager,Karsten Dambekalns,"",2010-10-20 05:39,Configuration,"",2009-02-25,"","",100,2009-02-25 14:40,"","",13400,"","","The methods getSpecialConfiguration() and loadSpecialConfiguration() seem to be misnamed. What is special about them? I guess they should be named simply without the special, so that we have ""settings"" and ""configuration"" in the manager."
2738,TYPO3.Flow,Feature,"",Closed,Should have,"Routing: Configurable appendix for ""formatless"" URIs",Karsten Dambekalns,Bastian Waidelich,2010-10-20 05:39,MVC,"",2009-03-02,"","",0,2009-03-02 05:36,"","",1783000,"","","It should be possible to create ""mycompany/about-us.html"" as well as ""mycompany/about-us/"" or even ""mycompany/about-us/index.html"". That is, if no trailing slash or filename would be generated, something configurable should happen instead.

See realurl's ""appendMissingSlash"" for it's equivalent."
2751,TYPO3.Flow,Bug,"",Resolved,Must have,Routing: generated links must keep index.php if needed,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 5,2009-03-03,"","",100,2009-03-03 09:18,"","",1798050,"","",URI generated must keep index.php if needed (e.g. if mod_rewrite is not available)
2765,TYPO3.Flow,Bug,"",Resolved,Must have,request path is not correctly determined  when FLOW3 isn't installed in webroot,Bastian Waidelich,Karsten Dambekalns,2010-10-20 05:39,MVC,"",2009-03-05,"","",100,2009-03-05 08:48,"","",1782950,"","","When FLOW3 is not installed in the htdocs root, it does not correctly determine the request path of the URI.
Example:
http://localhost/flow3/Public/
Instead of displaying the default view, FLOW3 tries to find the ""Public""-Controller in the ""flow3""-Package and throws a 404.

A temporary solution is to create a virtual host, so you can access FLOW3's root via
http://flow3/ (or the like)"
2815,TYPO3.Fluid,Feature,"",Resolved,Must have,Support for objects as values in hidden fields,Robert Lemke,Robert Lemke,2010-10-20 05:44,"",1.0.0 alpha 1,2009-03-10,"","",100,2009-03-10 11:12,"","",2603100,"","","Currently only types which can be casted to string are support as values in hidden form fields. However, it should be possible to use (domain) objects as values:

<pre>
	<f3:form method=""post"" action=""create"" object=""invoice"">
		<f3:form.textbox name=""properties[title]"" property=""title"" />
		<f3:form.textarea name=""properties[description]"" property=""description"" />
		<f3:form.hidden name=""properties[customer]"" value=""{customer}"" />
		<f3:form.submit>Create Invoice</f3:form.submit>
	</f3:form>
</pre>

Internally Fluid would convert the object into an identity array (not clear yet, if / when it becomes array('__uuid' => '1234...') or array('__identity' => array('title' => 'the title', 'number' => 234)) which then is converted back to an object by FLOW3's MVC framework on processing the request after the form has been submitted."
2816,TYPO3.Flow,Feature,"",Resolved,Must have,Implement redirect to action,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 1,2009-03-10,"","",100,2009-03-10 11:22,"","",1792300,"","","The Abstract Controller currently provides a method ""redirect"" which allows for redirecting to a specified URI. The more common requirement however is to redirect to a certain action / controller / package. Therefore redirect() should take the same (or at least similar) arguments like forward() and an additional method redirectToURI() should be implemented."
2817,TYPO3.Flow,Feature,"",Needs Feedback,Should have,Provide safeguard for preventing multiple submits of a form,Robert Lemke,"",2013-10-31 08:38,MVC,"",2009-03-10,"","",0,2009-03-10 11:31,"","",1782900,"","","We need a mechanism which prevents the user from accidentally submitting a form multiple times. This should be handled both on the client and on the server side.

On the client side a simple JavaScript will check if the form has been submitted and if so displays a message if the user tries to submit it a second time.

On the server side some hash which is unique to that rendered form should be checked to figure out if that particular form instance is already being processed."
2818,TYPO3.Flow,Feature,"",Closed,Should have,Provide safeguard for preventing multiple submits of a form,Robert Lemke,"",2010-10-20 05:39,MVC,"",2009-03-10,"","",0,2009-03-10 11:31,"","",1782850,"","","We need a mechanism which prevents the user from accidentally submitting a form multiple times. This should be handled both on the client and on the server side.

On the client side a simple JavaScript will check if the form has been submitted and if so displays a message if the user tries to submit it a second time.

On the server side some hash which is unique to that rendered form should be checked to figure out if that particular form instance is already being processed."
2819,TYPO3.Flow,Feature,"",Resolved,Must have,"View Helper ""Flash Message""",Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 1,2009-03-10,"","",100,2009-03-10 11:38,"","",1792250,"","","Provide a view helper which allows for handling ""flash messages"", i.e. a short message / chunk of HTML which transports information from one action to another.

Example: the createAction() successfully creates a Thing and submits the message ""Successfully created Thing."" to the view helper. Then a redirect to the indexAction() is carried out. The index view contains an area which displays a flash message, if any. In this case there's one: ""Sucessfully created Thing.""."
2824,TYPO3.Fluid,Bug,"",Resolved,Must have,TemplateView can't be easily extended,Bastian Waidelich,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-03-11,"","",0,2009-03-11 18:41,"","",2601750,"","","When using custom views that extend F3\Fluid\View\TemplateView the required cache backend is not properly initialized because FLOW3s dependency injection is active only for configured classes, not their subclasses.
First I thought this was a bug in the DI mechanism. Meanwhile I'm not sure anymore and I don't know, how other DI-frameworks handle this issue.

A solution would be to extract cache handling into an AOP aspect which is active for subclasses too. Patch follows."
2825,TYPO3.Flow,Feature,"",Resolved,Should have,Routing: Route Part options,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:39,MVC,1.0 alpha 1,2009-03-12,2009-03-16,2.00,100,2009-03-12 07:46,"","",1792200,"","","Route Parts need to be configurable. So that you can write
<pre>
MyRoute:
  uriPattern: {foo}
  routeParts:
    foo:
      options:
        caseSensitive: y
</pre>

Probably Route Part options should be inherited from global configuration."
2832,TYPO3.Flow,Feature,"",Resolved,Must have,"Implement a ""(String)Length Validator""",Robert Lemke,"",2010-10-20 05:39,Validation,1.0 alpha 1,2009-03-12,"","",100,2009-03-12 11:36,"","",1792150,"","","We need a validator which checks a minimum and / or maximum string length.
I suggest that the validator is just named ""LengthValidator""."
2851,TYPO3.Flow,Bug,"",Resolved,Must have,TextValidator is insecure,Jochen Rau,Andreas Förthner,2010-10-20 05:39,Validation,"",2009-03-16,"","",0,2009-03-16 07:13,"","",1782800,"","","The TextValidator is insecure. It filters an input string based on a black list only with ASCII chars:

if (!is_string($value) || preg_match('/<[\/]*[a-z,A-Z,0-9]*>/', $value)) {
[...]
}

XSS injections could be decoded e.g. in hexadecimal format. I propose the following solution:

if ($value !== filter_var($value, FILTER_SANITIZE_STRING)) {
[...]
}

-- jochen"
2852,TYPO3.Flow,Feature,"",Resolved,Should have,Improve viewObjectName determination,Bastian Waidelich,"",2010-10-20 05:39,MVC,1.0 alpha 1,2009-03-16,"","",100,2009-03-16 07:38,"","",1792100,"","","Currently _\F3\FLOW3\MVC\Controller\ActionController_ either calls _resolveViewObjectName()_ or uses _$this->viewObjectName_ to determine the view object name.
That means that you'll have to create a view for every action in your controller, or you set _$viewObjectName_ to a general view class. But you can't have both, e.g. use _F3\Fluid\View\TemplateView_ for all actions and your own views for ajax-requests (e.g. _@format = 'json'_).

A possible solution could be:
rename _$this->viewObjectName_ to _$this->defaultViewObjectName_ in _ActionController_ and always check, whether there exists a custom implementation first."
2853,TYPO3.Flow,Feature,"",Resolved,Should have,"Routing: @action, @format... should be settable via request arguments",Bastian Waidelich,Bastian Waidelich,2010-10-20 05:39,MVC,1.0 alpha 1,2009-03-16,"","",100,2009-03-16 07:46,"","",1792050,"","","Currently all ""@-arguments"" (@package, @subpackage, @controller, @action and @format) are checked only for ""route match results"". You can't set the action via _GET / _POST.
Imagine, you have a form with two submit buttons
<pre>
<button name=""@action1"">action 01</button>
<button name=""@action2"">action 02</button>
</pre>
IMO that should be possible.
TODOs for this feature:

1. check these arguments in the router: <pre>if ($request->hasArgument('@action')) {
	$request->setControllerActionName($request->getArgument('@action'));
}
...</pre>

2. modify URIHelper and make action-argument optional
"
2856,TYPO3.Flow,Bug,"",Resolved,Must have,Fatal error: Class 'F3\FLOW3\MVC\Controller\LogicException' not found,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:39,MVC,1.0 alpha 1,2009-03-16,"","",100,2009-03-16 12:15,"","",1792000,"","","Seems to be a missing slash in ""throw new LogicException"" in F3\FLOW3\MVC\Controller\Arguments.
We have to look for more of these missing slashes for SPL-Classes, I'm sure there are more!"
2957,TYPO3.Flow,Feature,"",Resolved,Must have,Errors and exceptions should be logged to system log,Karsten Dambekalns,Robert Lemke,2010-10-20 05:39,Error,1.0 alpha 1,2009-03-24,"","",100,2009-03-24 07:21,"","",1791950,"","",.
2974,TYPO3.Flow,Bug,"",New,Must have,Aspect / Proxy Cache is not emptied automatically if an interface used for introduction was modified,Robert Lemke,Robert Lemke,2011-10-21 07:20,AOP,"",2009-03-25,"","",0,2009-03-25 11:28,"","",1782750,"",FLOW3 1.0.0,"On modifying an interface which is used in an aspect for introduction, the whole proxy class cache must be flushed."
2979,TYPO3.Flow,Feature,"",Resolved,Must have,Implement replace() method for the base Repository,Robert Lemke,Robert Lemke,2010-10-20 05:39,Persistence,1.0 alpha 1,2009-03-26,"","",100,2009-03-26 08:39,"","",1791900,"","",The base Repository implementation should implement a method which allows for replacing an object which exists in the repository by another object. This method (or the methods called by this method) must take the identity map and uuid into account.
2982,TYPO3.Flow,Feature,"",Resolved,Must have,"Allow ""-"" as character for identifier in caching framework",Oliver Hader,Robert Lemke,2010-10-20 05:39,Cache,1.0 alpha 1,2009-03-26,"","",100,2009-03-26 13:05,"","",1791850,"","","The caching framework contains the allowed characters that can be used for identifiers.
Since this part was backported to TYPO3 4.3 there's an issue with using the caching framework on pages with negative page IDs (e.g. ""-1""). Therefore a identifier like ""pageId_-1"" would be defined which is not allowed.

In TYPO3 4.3 context this occurs in the context of workspaces/versioning.

The dash ""-"" is currently used in the file backend as separator."
2983,TYPO3.Fluid,Bug,"",Resolved,Should have,Create a LinkViewHelper for TYPO3 v4 Fluid,Sebastian Kurfuerst,Bastian Waidelich,2010-10-20 05:44,"","",2009-03-26,"","",100,2009-03-26 13:19,"","",2601700,"","","Currently, Fluid for TYPO3 v4 does not have the possibility to create links to other pages in TYPO3.
This needs to be fixed urgently..

Something like <f3:link action=""..."" controller=""...""></f3:link> should be possible.

Additionally, the functionality of TYPOLINK needs to be accessed as well (links to a given UID, PID; ...)"
3027,TYPO3.Flow,Bug,"",Resolved,Must have,Rev 2122 results in an Exeption when loading FLOW3 a second time after clearing the chache,Christoph Blömer,Robert Lemke,2010-10-20 05:39,Reflection,1.0 alpha 1,2009-04-02,"","",100,2009-04-02 16:19,"","",1791800,"","","In Development Context I get:
#1166550023: Object ""F3\WebDAV\MVC\RequestHandler_AOPProxy_Development"" is not registered. (More information)

F3\FLOW3\Object\Exception\UnknownObject thrown in file
C:\xampp\htdocs\FLOW3\Packages\Global\FLOW3\Classes\Object\Manager.php in line 242.

In Productin Context I get:
#1166550023: Object ""F3\WebDAV\MVC\RequestHandler_AOPProxy_Production"" is not registered. (More information)

F3\FLOW3\Object\Exception\UnknownObject thrown in file
C:\xampp\htdocs\FLOW3\Packages\Global\FLOW3\Classes\Object\Manager.php in line 242.

Do I need to configure the RequestHandler somehow to work again? Or is this a Bug introduced in this Revision?
"
3029,TYPO3.Flow,Bug,"",Resolved,Must have,Routing is not working correctly on all platforms,Thomas Fritz,Karsten Dambekalns,2010-10-20 05:40,MVC,1.0 alpha 8,2009-04-03,"","",100,2009-04-03 05:50,"","",1803500,"","","I am getting this error when i request any URL with a path part (http://flow3.local/testing , http://flow3.local/testpackage ,...). 
<pre>
Warning: Unknown: Filename cannot be empty in Unknown on line 0

Fatal error: Unknown: Failed opening required '' (include_path='.:/usr/share/php5:usr/share/php') in Unknown on line 0
</pre>

Platform:
Gentoo Linux. 2.6.27-gentoo-r7
Apache/2.2.10 (Unix) with mod_fcgid-2.2 _NOT_ mod_fastcgi-2
PHP 5.3beta1 as CGI/FastCGI
cgi.fix_pathinfo=1 in php.ini



Possible Solution/Workaround:

This part is causing the problem. Change .htaccess from:
<pre>
RewriteRule (.*) index.php/$1
</pre>

to:
<pre>
RewriteRule (.*) index.php
</pre>

...and get the routing information from REQUEST_URI.
Change F3\FLOW3\Utility\Environment#201:
<pre>
         public function getRequestURI() {
                 if (isset($this->SERVER['PATH_INFO'])) {
                         $requestURIString = $this->getRequestProtocol() . '://' . $this->getHTTPHost() . $this->SERVER['PATH_INFO'] . (strlen($this->SERVER['QUERY_STRING']) ? '?' . $this->SERVER['QUERY_STRING'] : '');
                 }
                 else if ($this->SERVER['REQUEST_URI']) {
                         $requestURIString = $this->getRequestProtocol(). '://' . $this->getHTTPHost() . $this->SERVER['REQUEST_URI'];
                 }
                 else {
                         $requestURIString = $this->getRequestProtocol() . '://' . $this->getHTTPHost() . '/';
                 }

                 $requestURI = new \F3\FLOW3\Property\DataType\URI($requestURIString);
                 return $requestURI;
         }
</pre>

"
3030,TYPO3.Flow,Feature,"",Resolved,Could have,Testing framework can send bug report to mailinglist,Thomas Fritz,Karsten Dambekalns,2010-10-20 05:39,Error,1.0 alpha 5,2009-04-03,"","",100,2009-04-03 06:29,"","",1798000,"","","After the test suites are completed and a test failed, ask the Developer if a detailed bug report should be send to the TYPO3 Mailinglist. Of course only if a failed test belongs a to a public package. If you have ever compiled php and did a make test you might actually know what i mean.

This behaviour could also expanded when an exception was thrown."
3034,TYPO3.Flow,Bug,"",Resolved,Should have,The Resolve Handler Resolver doesn't check if potential resolve handlers are registered objects,Robert Lemke,Robert Lemke,2010-10-20 05:39,MVC,1.0 alpha 1,2009-04-03,"","",100,2009-04-03 16:05,"","",1791750,"","","While resolving possible resolve handlers, a list of all classes implementing the ResolveHandlerInterface is compiled. However, it is not checked if these classes are really registered objects which leads to attempting to get objects by their proxy class name."
3041,TYPO3.Flow,Feature,"",Closed,-- undefined --,Caching Framework - ask for validity,Daniel Poetzinger,Robert Lemke,2010-10-20 05:39,Cache,1.0 alpha 5,2009-04-06,"","",0,2009-04-06 02:05,"","",1797950,"","","It woul be useful to ask the cache if it is still valid.

Background:
 If something critical is cached - that for example depends on external (unreliable) interfaces. 

This flow would be useful:
 - check if cache is valid
 - if not check if cached thing is available
  - not available - do nothing just use the (expired cache) again
  - available - flush cache and store new stuff...


Instead of (now):
 - cache is expired
 - cached object needs to be fetched
 - if not available - nothing can be used.

"
3065,TYPO3.Fluid,Bug,"",Resolved,Should have,ObjectFactory is unable to call t3lib_div::makeInstance.,Jochen Rau,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-04-09,"","",100,2009-04-09 15:36,"","",2601650,"","",ObjectFactory is unable to call t3lib_div::makeInstance. See attached image. 
3068,TYPO3.Fluid,Bug,"",Resolved,Must have,Fluid: TranslateViewHelper does only work once,Niels Pardon,Niels Pardon,2010-10-20 05:44,"","",2009-04-10,"","",100,2009-04-10 05:52,"","",2601600,"","","The TranslateViewHelper does only work once. If you put more than one translate tag in your template only the first gets translated.

By looking at the code I think that it gets even worse. The TranslateViewHelper will only work once per HTTP request. That means that only the first translate tag of the first loaded extension will get translated and the following translate tags won't.

The problem seems to be the initialization check. The TranslateViewHelper will not get initialized after the first instance and therefore the member variable $this->LOCAL_LANG which holds the locallang information is empty.

I would suggest to create a LanguageRegistry (a Singleton) which holds the locallang information once per extension. Where should something like this be put? extbase or fluid?"
3071,TYPO3.Fluid,Bug,"",Resolved,Should have,Allow objects implementing Iterator interface in each attribute of for view helper,Niels Pardon,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-04-10,"","",0,2009-04-10 13:16,"","",2601550,"","",I am currently plaing a bit around with porting the extension seminars to extbase and fluid. We already have our own Mappers and Models based on oelib. We are using a class tx_oelib_List which implements PHP's Iterator interface for e.g. M:M relations. Would be great if we could use an object implementing the Iterator interface with Fluid's for view helper.
3075,TYPO3.Fluid,Bug,"",Resolved,Must have,TranslateViewHelper: TypoScript override does not work,Niels Pardon,Jochen Rau,2010-10-20 05:44,"","",2009-04-11,"","",0,2009-04-11 09:11,"","",2601500,"","","The problem is that the configuration manager that is requested in the TranslateViewHelper has an empty array in $this->settings. So somehow the Singleton stuff is not working correctly as the confuiguration manager created in the dispatcher has the right configuration in $this->settings.

I couldn't find out the cause of the problem. Any help is appreciated."
3091,TYPO3.Flow,Feature,"",Resolved,Should have,"Support new method ""initializeXYAction"" in controllers",Robert Lemke,Robert Lemke,2010-10-20 05:39,MVC,1.0 alpha 1,2009-04-15,"","",100,2009-04-14 19:05,"","",1791700,"","","Controllers should check if a method ""initializeFooAction"" exists for an action ""foo"" and call it before the action ""fooAction"" is called. This method is supposed to replace the current ""initializeArguments"" method which should be removed."
3092,TYPO3.Flow,Feature,"",Resolved,Must have,Support annotation-based validation rules in controller actions,Robert Lemke,Robert Lemke,2010-10-20 05:39,MVC,1.0 alpha 1,2009-04-15,"","",100,2009-04-14 19:11,"","",1791650,"","","It should be possible to define additional validation rules for arguments of a controller action by declaring them in an annotation:
<pre>
/**
 * The foo action
 *
 * @param string $firstArgument This argument contains an email address
 * @param integer $secondArgument This argument contains a number
 * @param F3\Foo\Bar\Model\Baz $thirdArgument This argument is automatically validated by the rules defined in the specified model
 * @return void
 * @validate $firstArgument EmailAddress
 * @validate $secondArgument NumberRange(minimum = 5, maximum = 100)
 */
public function fooAction($firstArgument, $secondArgument, \F3\Foo\Bar\Model\Baz $thirdArgument) {
}
</pre>
"
3093,TYPO3.Flow,Feature,"",Resolved,Must have,Implement annotation based validation rules for models,Robert Lemke,Robert Lemke,2010-10-20 05:39,Validation,1.0 alpha 1,2009-04-15,"","",100,2009-04-14 19:24,"","",1791600,"","","Make these @validate annotations work in a model:

<pre>
	/**
	 * The blog's name. Also acts as the identifier.
	 *
	 * @var string
	 * @validate Alphanumeric, StringLength(minimum = 3, maximum = 50)
	 * @identity
	 */
	protected $name = '';

	/**
	 * A short description of the blog
	 *
	 * @var string
	 * @validate Text, StringLength(maximum = 150)
	 */
	protected $description = '';

</pre>"
3121,TYPO3.Flow,Bug,"",Resolved,Should have,canProcessRequest is not called in ActionControllers,Bastian Waidelich,"",2010-10-20 05:39,MVC,"",2009-04-17,"","",100,2009-04-17 09:03,"","",1782700,"","","It seems, canProcessRequest() is never called in Action Controllers, so CLI-Controllers can be called through the browser currently.
In processRequest() of \F3\FLOW3\MVC\Controller\ActionController s.th. like
<pre>if (!$this->canProcessRequest($request)) throw new \F3\FLOW3\MVC\Exception\UnsupportedRequestType(...)</pre>
is missing. Maybe it is possible to add a <pre>parent::processRequest($request, $response)</pre> instead, as there is quite some duplicated code in both Classes."
3122,TYPO3.Fluid,Bug,"",Resolved,Must have,ViewHelper arguments are not properly passed to render() method,Bastian Waidelich,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-04-17,"","",0,2009-04-17 11:36,"","",2601450,"","","If a ViewHelper registers different arguments than it accepts in the render()-method, arguments are not properly injected:
<pre>
class MyViewHelper extends \F3\Fluid\Core\TagBasedViewHelper {
	@param string $someArgument
	public function render($someArgument) {...}
}
</pre>

In this example $someArgument will have the value of the ""additionalAttributes""-argument that was registered in the parent ViewHelper."
3130,TYPO3.Flow,Bug,"",Resolved,Should have,ValidatorResolver does not work for float/numeric/mixed typed method arguments,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:39,Validation,1.0 alpha 1,2009-04-18,"","",0,2009-04-18 11:44,"","",1791550,"","","While implementing view helpers for Fluid I'm struggling with validation of the view helper arguments:

<pre>
/**
 * @param float $value The value to format
 */
public function render($value) {
}
</pre>

leads to the exception:
<pre>No validator found for argument name ""value"" with type ""float""</pre>

The same for @param numeric and probably some more.

Additionally, we should be able to skip the ""XSS-Filter"" in some cases..:
<pre>
<f3:form.textarea value=""Some 'Test'"" />
</pre>

leads to the exception:
<pre>Validation for argument name ""value"" in view helper ""F3\Fluid\ViewHelpers\Form\TextareaViewHelper"" FAILED. Expected type: ""string""; Given: ""string"".</pre>

internally, the error message is
<pre>
The given subject was not a valid text (contained XML tags). Got: ""Some 'Test'""
</pre>

Maybe
<pre>
@param mixed
</pre>
should be possible to allow to skip validation (Raw).."
3152,TYPO3.Flow,Bug,"",Resolved,Must have,The Reflection does not recognize changes in class files,Robert Lemke,Robert Lemke,2010-10-20 05:39,Reflection,1.0 alpha 1,2009-04-22,"","",100,2009-04-22 10:44,"","",1791500,"","","If a class file is changed in development context, the Reflection Service should re-reflect that class and store the new information. However, currently these changes are not detected and the cache must be flushed manually."
3153,TYPO3.Flow,Feature,"",New,Should have,Support of action based filter rules defined by annotation.,Robert Lemke,"",2015-01-25 12:23,MVC,"",2009-04-22,"","",0,2009-04-22 11:15,"","",1782650,"","","Similar to #3092 there should be a way to declare additional filter rules for the arguments of an action method:

<pre>
/**
 * @param string $theArgument
 * @filter $theArgument LowerCase, Trim
 */
public function theAction($theArgument) {
}
</pre>"
3240,TYPO3.Flow,Bug,"",Resolved,Must have,AOP cache is not emptied if class file is deleted,Robert Lemke,Robert Lemke,2010-10-20 05:39,Monitor,1.0 alpha 2,2009-05-07,"","",100,2009-05-07 08:24,"","",1795350,"","","I'm not 100% sure but this needs to be checked: If a class file is deleted or moved to a different namespace, the AOP Framework still tries to execute the cached proxy code. Maybe that's a bug in the File Monitor?"
3274,TYPO3.Flow,Bug,"",Resolved,Must have,Persistance session is not of scope prototype,Bastian Waidelich,Karsten Dambekalns,2010-10-20 05:39,Persistence,1.0 alpha 1,2009-05-12,"","",100,2009-05-12 09:03,"","",1791450,"","","Probably \F3\FLOW3\Persistence\Session should be a prototype cause there is an annotation ""@prototype"" in the code.
That should be ""@scope prototype"" and a test should be added."
3275,TYPO3.Flow,Bug,"",Resolved,Must have,ValidatorResolver can't parse validator arguments containing round brackets,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,Validation,1.0 alpha 2,2009-05-12,"","",100,2009-05-12 09:10,"","",1795300,"","","Currently validation arguments defined in @validate annotations cannot contain round brackets ')' because they'd be interpreted as the end of an argument expression. Additionally they can't contain commas and probably not even equal signs.

Make sure that either special characters can be escaped or that the values of the validation arguments have to be put into quotes.

Especially important for the RegularExpressionValidator."
3276,TYPO3.Flow,Feature,"",Resolved,Should have,Support Conjunction and Disjunction Composite validators,Robert Lemke,Christopher Hlubek,2010-10-20 05:39,Validation,1.0 alpha 1,2009-05-12,"","",100,2009-05-12 09:15,"","",1791400,"","","The ChainValidator should be replaced by two new validators: the ConjunctionValidator and the DisjunctionValidator. Both new validators are composite validators (consisting of a number of sub validators). The ConjunctionValidator combines validation results with AND, while the DisjunctionValidator uses OR."
3278,TYPO3.Flow,Bug,"",Resolved,Must have,Resource manager doesn't publish files without extension,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,Utility,1.0 alpha 5,2009-05-12,"","",100,2009-05-12 12:42,"","",1797900,"","","If a file to be published doesn't have an extension (""MyPage"" instead of ""MyPackage.html""), the resource publisher throws:

#1: Notice: Undefined index: extension in /Users/Shared/Sites/dev/flow3/forge/Packages/Global/FLOW3/Classes/Utility/FileTypes.php line 425 "
3287,TYPO3.Fluid,Bug,"",Resolved,Must have,add @internal annotations,Sebastian Kurfuerst,Sebastian Kurfuerst,2010-10-20 05:44,"",1.0.0 alpha 1,2009-05-14,"","",100,2009-05-14 06:22,"","",2603050,"","",add @internal annotations
3288,TYPO3.Fluid,Bug,"",Resolved,Should have,ViewHelper fine tuning,Sebastian Kurfuerst,Bastian Waidelich,2010-10-20 05:44,"",1.0.0 alpha 1,2009-05-14,"","",100,2009-05-14 06:25,"","",2603000,"","","- add correct documentation
- rename and move LinkViewHelpers
  link.*
  uri.*
  link -> link.action
  uri -> uri.action 
- *Do we want shortcuts?*
"
3289,TYPO3.Fluid,Feature,"",Resolved,Must have,view context,Sebastian Kurfuerst,"",2010-10-20 05:44,"",1.0.0 alpha 1,2009-05-14,"","",100,2009-05-14 06:27,"","",2602950,"","","we need a view context to pass information from controller to view
TODO: Naming!"
3290,TYPO3.Fluid,Bug,"",Resolved,Must have,add ViewHelperContext,Sebastian Kurfuerst,Sebastian Kurfuerst,2010-10-20 05:44,"",1.0.0 alpha 1,2009-05-14,"","",100,2009-05-14 06:27,"","",2602900,"","","add ViewHelperContext
- getView
- getRequest
- addVariables, ..."
3291,TYPO3.Fluid,Feature,"",Needs Feedback,Should have,Cacheable viewhelpers,Sebastian Kurfuerst,"",2012-11-29 11:00,"","",2009-05-14,"","",0,2009-05-14 06:27,"","",2601350,"","",we need a concept for cacheable viewhelpers
3292,TYPO3.Fluid,Bug,"",Resolved,Should have,viewhelper backend support,Sebastian Kurfuerst,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,"",2009-05-14,"","",100,2009-05-14 06:28,"","",2601300,"","",we need support for using viewhelpers in BE
3293,TYPO3.Fluid,Feature,"",Resolved,Should have,support for legacy TypoScript (with . at end),Sebastian Kurfuerst,"",2010-10-20 05:44,"",1.0.0 alpha 3,2009-05-14,"","",100,2009-05-14 06:37,"","",2603900,"","","I HATE IT!!! I just entered 20 lines, but now I will just solve the bug..."
3294,TYPO3.Fluid,Bug,"",Resolved,Should have,Introduce reflection cache,Sebastian Kurfuerst,"",2010-10-20 05:44,Core,1.0,2009-05-14,"","",100,2009-05-14 06:38,"","",2603550,"","",Introduce reflection cache
3295,TYPO3.Fluid,Bug,"",Resolved,Should have,implement shorthand syntax,Sebastian Kurfuerst,Sebastian Kurfuerst,2010-10-20 05:44,"",1.0.0 alpha 1,2009-05-14,"","",100,2009-05-14 06:40,"","",2602850,"","",example: {f:date()} - the () are mandatory
3296,TYPO3.Fluid,Bug,"",Resolved,Must have,override templatePath,Sebastian Kurfuerst,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-05-14,"","",100,2009-05-14 06:46,"","",2601250,"","",override templatePath with TypoScript
3297,TYPO3.Fluid,Feature,"",Closed,Should have,flash message,Sebastian Kurfuerst,"",2010-10-20 05:44,"",1.0.0 alpha 1,2009-05-14,"","",0,2009-05-14 06:47,"","",2602800,"","",implement flash message
3298,TYPO3.Fluid,Bug,"",Resolved,Should have,"""if"" expression language",Sebastian Kurfuerst,Sebastian Kurfuerst,2010-10-20 05:44,Core,1.0.0 alpha 2,2009-05-14,"","",100,2009-05-14 07:04,"","",2603500,"","","""if"" expression language - we need some expression language for IF"
3302,TYPO3.Flow,Feature,"",Resolved,Must have,"Implement a ""Controller Context""",Robert Lemke,Christopher Hlubek,2010-10-20 05:39,MVC,1.0 alpha 1,2009-05-14,"","",100,2009-05-14 10:44,"","",1791350,"","","We need a new class ""ControllerContext"" which contains contextual information about a controller:

 * the request object
 * the response object
 * arguments
 * argumentsMappingResults
 * the URI Builder instance

The ControllerContext is a property of the AbstractController. 

ActionController->initializeView() should inject the ControllerContext into the view. The request should not be injected anymore (therefore the view needs to be refactored)."
3303,TYPO3.Flow,Task,"",Resolved,Should have,Rename URIHelper to URIBuilder,Robert Lemke,Bastian Waidelich,2010-10-20 05:39,MVC,1.0 alpha 1,2009-05-14,"","",100,2009-05-14 10:53,"","",15700,"","","Refactor:

old: \F3\FLOW3\MVC\View\Helper\URIHelper 
new: \F3\FLOW3\MVC\Web\Routing\URIBuilder

"
3305,TYPO3.Flow,Feature,"",Accepted,Must have,Unmodified objects retrieved from a repository should not be validated in the controller,Robert Lemke,Robert Lemke,2014-03-04 08:51,MVC,"",2009-05-14,"","",0,2009-05-14 11:45,"","",1782600,"","",Unmodified objects retrieved from a repository should not be validated in the controller
3306,TYPO3.Flow,Feature,"",Accepted,Should have,Flush routes cache automatically on class file modifications,Robert Lemke,Robert Lemke,2013-05-06 06:34,MVC,"",2009-05-14,"","",0,2009-05-14 12:42,"","",1782550,"","","If a class containing a route part handler is changed, we also need to flush the routes cache because other routes might match now."
3311,TYPO3.Fluid,Task,"",Closed,Should have,Refactor Unit tests,Bastian Waidelich,"",2011-05-05 12:28,"","",2009-05-15,"","",0,2009-05-15 05:24,"","",15750,"","",One unit test should only depend on *one* concrete class. All dependencies must be mocked or put in fixtures to avoid sideeffects and to reduce the adaption work that is needed when changing class/method signatures.
3312,TYPO3.Flow,Feature,"",Needs Feedback,Should have,Allow for easy logging by annotations,Robert Lemke,Robert Lemke,2010-10-20 05:39,Log,"",2009-05-15,"","",0,2009-05-15 05:36,"","",1782500,"","","For debugging but also other purposes, it would be nice to be able to log a method call by just adding an annotation to it.

This logs any call of the method into the SystemLogger with severity level ""DEBUG"" and stores the argument values in the additionalData arg:
<pre>
/**
 * A method
 * 
 * @param string $someArgument
 * @return string 
 * @log before
public function myMethod($someArgument) {
   ...
}
</pre>

This is identical:
<pre>
/**
 * A method
 * 
 * @param string $someArgument
 * @return string 
 * @log before (logger = SystemLogger)
public function myMethod($someArgument) {
   ...
}
</pre>

Here the method invokation is logged to a logger with identifier ""MyLog"", with severity WARNING
<pre>
/**
 * A method
 * 
 * @param string $someArgument
 * @return string 
 * @log before (logger = MyLog, severity = WARNING)
public function myMethod($someArgument) {
   ...
}
</pre>

This logs the method call with a custom message:
<pre>
/**
 * A method
 * 
 * @param string $someArgument
 * @return string 
 * @log before (message = ""Called my method with $someArgument"")
public function myMethod($someArgument) {
   ...
}
</pre>

This logs the method call and the returning:
<pre>
/**
 * A method
 * 
 * @param string $someArgument
 * @return string 
 * @log around
public function myMethod($someArgument) {
   ...
}
</pre>

So basically you have the same types like for AOP advices:

 * @log before
 * @log after
 * @log afterReturning
 * @log afterThrowing
 * @log around

"
3317,TYPO3.Fluid,Feature,"",Resolved,Must have,AbstractFormViewHelper must be adjusted to be able to namespace arguments,Bastian Waidelich,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-05-15,"","",100,2009-05-15 10:33,"","",2601200,"","",see http://forge.typo3.org/issues/show/3316
3322,TYPO3.Flow,Task,"",Closed,Should have,Use mocked objects instead of real ones in the RouteTest,Robert Lemke,"",2010-10-20 05:39,MVC,1.0 alpha 2,2009-05-15,"","",0,2009-05-15 15:59,"","",15800,"","",The testcase for F3\FLOW3\MVC\Web\Routing\Route currently uses the real Object Manager and Object Factory for testing. Should be converted to mocks.
3337,TYPO3.Flow,Feature,"",Resolved,Should have,Allow to count lazy-loaded objects without fetching them from the persistence layer,Bastian Waidelich,Karsten Dambekalns,2010-10-20 05:39,Persistence,"",2009-05-16,"","",100,2009-05-16 05:04,"","",1782450,"","","It should be possible to count objects in a repository without the need to actually fetch and initialize them.
It would be useful to be able to call <pre>count($blog->posts);</pre> without actually fetching all posts."
3339,TYPO3.Fluid,Bug,"",Resolved,Must have,TagBuilder->setContent should not escape HTML,Sebastian Kurfuerst,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-05-16,"","",100,2009-05-16 06:18,"","",2601150,"","",TagBuilder->setContent should not escape HTML
3359,TYPO3.Fluid,Bug,"",Resolved,Should have,Restructure Class structure in Fluid Core,Sebastian Kurfuerst,Sebastian Kurfuerst,2010-10-20 05:44,"",1.0.0 alpha 1,2009-05-18,"","",100,2009-05-18 03:29,"","",2602750,"","","I propose to change the Fluid Core classes like that:

Core/
	ViewHelper/
		Facets/
		AbstractViewHelper
		TagBasedViewHelper
		TagBuilder
		ViewHelperContext
		ViewHelperException?
		ViewHelperInterface
		ViewHelperArguments -> Arguments?
	Parser/
		SyntaxTree/
		ParsedTemplateInterface
		ParsingException?
		ParsingState
		TemplateParser

This changes the following public API classes:
Core\TemplateParser -> Core\Parser\TemplateParser.

"
3368,TYPO3.Flow,Task,"",Resolved,Should have,Move setArgumentsFromRawRequestData() from Router to RequestBuilder,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:39,MVC,1.0 alpha 1,2009-05-18,"","",100,2009-05-18 17:32,"","",16000,"","","That method currently doesn't really do anything Routing-related, so it should be moved from
<pre>F3\FLOW3\MVC\Web\Routing\Router</pre>
to
<pre>F3\FLOW3\MVC\Web\RequestBuilder</pre>"
3370,TYPO3.Flow,Feature,"",Resolved,Must have,Add lifetime parameter to set method of cache frontend,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Cache,1.0 alpha 1,2009-05-19,"","",100,2009-05-19 06:15,"","",1791300,"","","The cache frontends do not have a parameter for the lifetime, add it."
3373,TYPO3.Flow,Task,"",Resolved,Must have,Check the fixpermissions script,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,"",1.0 alpha 1,2009-05-19,"","",100,2009-05-19 06:57,"","",16050,"","","The fixpermissions.sh script might not work completely anymore and needs to be updated.
Please also rename it to ""setfilepermissions.sh""
"
3374,TYPO3.Flow,Task,"",Rejected,Could have,Support dedicated package versions per context,Robert Lemke,Karsten Dambekalns,2012-11-07 05:40,Package,"",2009-05-19,"","",0,2009-05-19 07:02,"","",16100,"","","It should be possible to run different versions of a package depending on the application context. This would allow anyone to test new versions in dev context before staging it to production.

As already discussed, the directory structure should be:

/myhome/Packages/Local/Blog/Development/
/myhome/Packages/Local/Blog/Production/

etc.

It should still be possible to have only one version for all contexts:

/myhome/Packages/Local/Blog/

If there are context specific versions or not can be detected by checking for the existence of the Meta/Package.xml"
3375,TYPO3.Flow,Bug,"",Resolved,Must have,PATH_INFO is empty using fastcgi / Windows,Robert Lemke,Karsten Dambekalns,2010-10-20 05:40,MVC,1.0 alpha 8,2009-05-19,"","",100,2009-05-19 07:07,"","",1803450,"","","During the T3DD09 someone said that some parts of the routing don't work properly when using fastcgi (on Windows?) because PATH_INFO is always empty on that platform.

Please verify this and check how it can be solved."
3376,TYPO3.Flow,Feature,"",Resolved,Must have,Implement a more attractive and informative default view,Robert Lemke,Robert Lemke,2010-10-20 05:39,MVC,1.0 alpha 1,2009-05-19,"","",100,2009-05-19 07:11,"","",1791250,"","","The FLOW3 default view should contain more helpful information such as:

 - what you can do next
 - a link to the test runner so you can run all tests
 - a link to online tutorials (next steps, how to create a package etc.)
 - a link to the wiki / releas notes
 - a link to the issue tracker
 - a link to the mailing list
"
3377,TYPO3.Flow,Task,"",Resolved,Must have,Move the manual to a DocBook subdirectory,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,- Documentation -,1.0 alpha 1,2009-05-19,"","",100,2009-05-19 07:15,"","",16150,"","","Currently the manual is located in
<pre>
FLOW3/Documentation/Manual/en/
</pre>
This should be changed to
<pre>
FLOW3/Documentation/Manual/DocBook/en/
FLOW3/Documentation/Manual/HTML/en/
FLOW3/Documentation/Manual/PDF/en/
</pre>
to allow for more formats which will be generated automatically during packaging."
3379,TYPO3.Flow,Task,"",Resolved,Must have,Write installation instructions for Windows,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,- Documentation -,1.0 alpha 1,2009-05-19,"","",100,2009-05-19 08:28,"","",16200,"","",We need some instructions for installing FLOW3 on Windows. Please add these instructions to the FLOW3 DocBook manual.
3380,TYPO3.Flow,Task,"",Resolved,Must have,Write installation instructions for MacOS,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,- Documentation -,1.0 alpha 1,2009-05-19,"","",100,2009-05-19 08:29,"","",16250,"","",We need some instructions for installing FLOW3 on Mac OS X. Please add these instructions to the FLOW3 DocBook manual.
3381,TYPO3.Flow,Task,"",Resolved,Must have,Write installation instructions for Debian,Robert Lemke,Andreas Förthner,2010-10-20 05:39,- Documentation -,1.0 alpha 1,2009-05-19,"","",100,2009-05-19 08:29,"","",16300,"","",We need some instructions for installing FLOW3 on Debian. Please add these instructions to the FLOW3 DocBook manual.
3382,TYPO3.Flow,Feature,"",Resolved,Should have,Make Fluid the default templating engine in FLOW3,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 1,2009-05-19,"","",100,2009-05-19 08:39,"","",1791200,"","","Fluid should be the default templating engine in FLOW3. Therefore we need to

- use the Fluid template view as the standard view in the controllers:
<pre>
	/**
	 * Use Fluid as the default template engine
	 * @var string
	 */
	protected $defaultViewObjectName = 'F3\Fluid\View\TemplateView';

	/**
</pre>
- add Fluid to the dependencies of the FLOW3 package"
3385,TYPO3.Fluid,Feature,"",Resolved,Must have,Add method to check for template availability,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:44,"",1.0.0 alpha 1,2009-05-19,"","",100,2009-05-19 10:42,"","",2602700,"","",It must be possible to ask Fluid\TemplateView if it could resolve a template file for the current controller context.
3394,TYPO3.Fluid,Task,"",Resolved,Should have,Adjust PHPDoc Comment of ImageViewHelper,Susanne Moog,Bastian Waidelich,2010-10-20 05:44,"","",2009-05-20,"","",0,2009-05-20 09:09,"","",16450,"","","At a first glance it's not logical that the width and height are expected to be strings whereas maxWidth etc. are expected to be integer values. The PHPDoc comment should better explain, that you can enter image manipulating values into width and height. I'm not really sure about the exact text, but I attached a patch that in my opinion makes it a bit clearer."
3398,TYPO3.Flow,Task,"",Resolved,Should have,Are methods in CLI\Request still used?,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 1,2009-05-20,"","",100,2009-05-20 13:16,"","",16500,"","","In the CLI Request I currently find these functions:

<pre>
	/**
	 * Sets the arguments given to this request.
	 *
	 * @param array $arguments
	 * @return void
	 * @author Karsten Dambekalns <karsten@typo3.org>
	 */
	public function setCLIArguments(array $arguments) {

	/**
	 * Returns the arguments given to the request.
	 *
	 * @return array
	 * @author Karsten Dambekalns <karsten@typo3.org>
	 */
	public function getCLIArguments() {
</pre>

Are they still in use? Why do we need special arguments for CLI?"
3400,TYPO3.Flow,Task,"",Resolved,Must have,Is FLOW3\Utility\GenericCollection obsolete?,Robert Lemke,Bastian Waidelich,2010-10-20 05:39,Utility,1.0 alpha 1,2009-05-20,"","",100,2009-05-20 13:50,"","",16550,"","",Is FLOW3\Utility\GenericCollection obsolete? It seems like a SPLObjectStorage can be used instead - or at least the GenericCollection could use one.
3401,TYPO3.Flow,Feature,"",Resolved,Must have,Object validation errors don't have a reasonable structure,Christopher Hlubek,Christopher Hlubek,2010-10-20 05:39,Validation,"",2009-05-20,"","",100,2009-05-20 15:32,"","",1782400,"","","When validating properties of objects with validators, the errors must be nested just like the properties that were validated.

If this is not the case, validation errors cannot be assigned to single properties in after doing the validation. This is needed for the very simple case of displaying input fields with errors in the frontend."
3404,TYPO3.Flow,Bug,"",Resolved,Should have,Refactor ControllerContext to be built only before passing it to the View,Sebastian Kurfuerst,Bastian Waidelich,2010-10-20 05:39,MVC,1.0 alpha 1,2009-05-21,"","",100,2009-05-21 05:05,"","",1791150,"","","$this->controllerContext should not be available in the Controller, but just be passed on to the View.

There is one question remaining: Should the URIHelper / URIBuilder get this whole object, or just the Request object?

Greets,
Sebastian"
3412,TYPO3.Fluid,Bug,"",Resolved,Should have,ViewHelperNode.php -> convertArgumentValue() -- wrong handling of integers and booleans,Susanne Moog,Bastian Waidelich,2010-10-20 05:44,Core,"",2009-05-22,"","",100,2009-05-22 02:51,"","",2601050,"","","If you enter in some fluid if condition a parameter that is a true boolean like TRUE it gets converted to FALSE by the convertArgumentValue(). Same happens if the value is an integer != 0, it's still evaluated to false. Attached patch fixes it for me."
3413,TYPO3.Fluid,Feature,"",Resolved,Could have,Handing the settings over to the view,Susanne Moog,Sebastian Kurfuerst,2010-10-20 05:44,Core,1.0.0 alpha 2,2009-05-22,"","",100,2009-05-22 02:53,"","",2603450,"","",Hand over $this->settings to the view so it is accessible by {settings} in the template.
3415,TYPO3.Flow,Bug,"",Resolved,Could have,Sorting of $classNamesToReflect in the reflection Service might cause PHP error,Irene Höppner,Karsten Dambekalns,2010-10-20 05:39,Reflection,1.0 alpha 5,2009-05-22,"","",100,2009-05-22 03:56,"","",1797850,"","","In the method F3\FLOW3\Reflection\reflectEmergedClasses() the $classNamesToReflect-array is being sorted before it's being traversed.

Thus packages like FLOW3CGL are reflected before the FLOW3 package (i guess that's the reason..). If these ""earlier"" packages are buggy, they don't run into an exception, but cause a PHP Error:

""PHP Fatal error:  Class 'F3\\FLOW3\\Error\\Exception' not found in /var/www/FLOW3/Packages/Local/FLOW3CGL/Classes/Model/MessageQueue.php on line 78""

"
3433,TYPO3.Flow,Bug,"",Resolved,Must have,Routes in packages are overruled by global configuration,Christopher Hlubek,Robert Lemke,2010-10-20 05:39,MVC,1.0 alpha 1,2009-05-24,"","",100,2009-05-24 04:08,"","",1791100,"","","In the current implementation the route configuration is first loaded from all packages, then overwritten or appended by the global configuration. When matching the routes, the configured routes are matched in reverse order.

# Packages
## Global packages
## Local packages
# Global configuration
# Global context dependent configuration

Since the default routes are in the global configuration, a package cannot put a new route after the default routes or overwrite them. So the route configuration in packages is currently pretty useless and will not be applied. *This is not inituitive.*

There has to be a prioritization at a later stage, but for now it should suffice to have the default routes in the FLOW3 package and an empty global routes configuration. But a problem that arises with this solution is, that the route order will be bound to the order of the packages when loading the configuration. But as local packages come last, the behaviour would be more intuitive."
3434,TYPO3.Flow,Bug,"",Resolved,Should have,getPackageMetaData() will throw an exception,Christopher Hlubek,Christopher Hlubek,2010-10-20 05:39,Package,"",2009-05-24,"","",100,2009-05-24 04:44,"","",1782350,"","","When using the package manager to get a package and read the metadata there will be an exception. The metadata reader is not injected properly, because package objects are not created using the object factory and the metadata reader is not injected."
3435,TYPO3.Flow,Feature,"",Resolved,Should have,A package should be able to return it's documentations,Christopher Hlubek,Christopher Hlubek,2010-10-20 05:39,Package,"",2009-05-24,"","",100,2009-05-24 06:49,"","",1782300,"","","The whole documentation for packages lies in the package's @Documentation@ directory. For each single documentation (e.g. _Manual_) there is a subfolder in this directory. In these documentation directories are folders for formats and finally different languages.

The package should have an object model that reflects this structure."
3441,TYPO3.Flow,Task,"",Resolved,Should have,Routing: Don't process routes in reverse order,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:39,MVC,1.0 alpha 1,2009-05-24,"","",100,2009-05-24 17:25,"","",16750,"","","Currently routes are processed from bottom to top.
We decided to change that as it seems to be more intuitive to work off routes from top to bottom.
It should be enough to remove the array_reverse calls in \F3\FLOW3\Web\Routing\Router."
3443,TYPO3.Fluid,Bug,"",Resolved,Should have,Unreachable code in TemplateView,Bastian Waidelich,Sebastian Kurfuerst,2010-10-20 05:44,Core,1.0.0 alpha 3,2009-05-25,"","",100,2009-05-25 06:04,"","",2603850,"","","line 246 in F3\Fluid\View\TemplateView can never be reached as there is a return before that:

<pre>
		return $parsedTemplate->render($renderingContext);
		
		
		// TODO -> Never executed???
		if ($sectionToRender !== NULL) {
			$sections = $partial->getVariableContainer()->get('sections');
			if(!array_key_exists($sectionToRender, $sections)) {
				throw new \F3\Fluid\Core\RuntimeException('The given section does not exist!', 1227108983);
			}
			$syntaxTree = $sections[$sectionToRender];
		} else {
			$syntaxTree = $partial->getRootNode();
		}
		$syntaxTree->setRenderingContext($renderingContext);
		return $syntaxTree->evaluate();
</pre>"
3451,TYPO3.Flow,Bug,"",Resolved,Must have,LazyLoadingProxy must mark property as clean after activation,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Persistence,1.0 alpha 1,2009-05-25,"","",100,2009-05-25 09:50,"","",1791050,"","","Make sure we mark the property as clean after setting it on the parent in _loadRealInstance(), so it is not considered dirty because of the activation/replacement..."
3457,TYPO3.Flow,Task,"",Resolved,Must have,Write Routing documentation,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:39,- Documentation -,1.0 alpha 1,2009-05-25,"","",0,2009-05-25 11:31,"","",17000,"","",Add section about routing to FLOW3 documentation
3463,TYPO3.Flow,Bug,"",Closed,Must have,Short option names for CLI calls do not work anymore,Karsten Dambekalns,"",2011-04-08 06:39,MVC,"",2009-05-25,"","",0,2009-05-25 17:58,"","",1782250,"","",Sometime during the argument registration changes in the past weeks short option names for CLI calls got broken. Using long option names works.
3466,TYPO3.Flow,Task,"",Resolved,Must have,Update / move GPL.txt file in FLOW3 distribution,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,- Documentation -,1.0 alpha 1,2009-05-26,"","",100,2009-05-26 08:15,"","",17100,"","","Currently there's a GPL.txt file (containing GPL v2 text) in the FLOW3 distribution's main directory. Remove that.

In Packages/Global/FLOW3/Documentation/ there are two COPYING files - do we need the on about GPL v3? Can we rename the file containing the LGPL v3 text to ""License.txt"" ?
"
3467,TYPO3.Flow,Feature,"",Resolved,Could have,Implement meaningful / helpful default view for Production context,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 5,2009-05-26,"","",100,2009-05-26 14:19,"","",1797800,"","",In the production context we should display some meaningful information about how to configure FLOW3 to run in a different context (by setting ENV in .htaccess for example) and that only in Development context caches are flushed automatically etc.
3477,TYPO3.Flow,Bug,"",Resolved,Must have,Objects added to a (persistence) repository don't have have a uuid,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,Persistence,1.0 alpha 1,2009-05-27,"","",100,2009-05-27 05:04,"","",1791000,"","","Newly created objects which are added to a repository don't have a uuid before they are persisted:

<pre>
	/**
	 * @param \F3\Releazr\Domain\Model\Release $newRelease
	 * @return string
	 */
	public function createAction(\F3\Releazr\Domain\Model\Release $newRelease) {
		$this->releaseRepository->add($newRelease);
		$this->redirect('show', NULL, NULL, array('release' => $newRelease));
	}
</pre>

The redirect in the above example doesn't work because the URI needs to know the UUID of $newRelease which yet doesn't exist.

Solution: Let the (release) repository create a UUID and let the CR take that UUID as a hint for later persistence."
3479,TYPO3.Fluid,Feature,"",Resolved,Should have,Implement ViewHelperVariableContainer,Sebastian Kurfuerst,Sebastian Kurfuerst,2010-10-20 05:44,Core,1.0.0 alpha 1,2009-05-27,"","",100,2009-05-27 05:54,"","",2602650,"","",Implement ViewHelperVariableContainer
3480,TYPO3.Fluid,Bug,"",Resolved,Must have,SelectViewHelper creates multiple select field by default,Robert Lemke,Sebastian Kurfuerst,2010-10-20 05:44,ViewHelpers,1.0.0 alpha 1,2009-05-27,"","",100,2009-05-27 05:59,"","",2602600,"","","This Fluid HTML

<pre>
<f:form.select property=""versionNumber"" options=""{nextPossibleVersions}"" />
</pre>

is rendered as 

<pre>
<select name=""newRelease[versionNumber][]"">
<option value=""0"">1.0.0-alpha1</option>
<option value=""1"">1.0.0-beta1</option>
</select>
</pre>

even though I didn't specify a ""multiple"" argument. This is not what I'd expect."
3481,TYPO3.Fluid,Bug,"",New,Should have,Use ViewHelperVariableContainer in PostParseFacet,Sebastian Kurfuerst,"",2011-10-21 07:37,Core,"",2009-05-27,"","",0,2009-05-27 06:05,"","",2601000,"",FLOW3 1.0.0,Currently TemplateVariableContainer is used
3487,TYPO3.Flow,Feature,"",Resolved,Must have,Add FLOW3_AOP_Proxy_hasProperty to AOP proxies,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,AOP,1.0 alpha 2,2009-05-27,"","",100,2009-05-27 07:28,"","",1795250,"","",This is need to resolve #3486
3488,TYPO3.Flow,Bug,"",Resolved,Must have,Parameters of actions which have a name containing uppercase characters are not automatically registered,Robert Lemke,"",2010-10-20 05:39,MVC,1.0 alpha 1,2009-05-27,"","",100,2009-05-27 08:25,"","",1790950,"","","Automatic parameter registration works for the regular CRUD actions:

<pre>
public function createAction($myParameter) 
</pre>

but doesn't work if there's an uppercase character in the action name:

<pre>
public function createFooAction($myParameter)
public function createMyBarAction($myParameter)
</pre>

This is due to case conversion problems in the Action Controller and finally fails in this line:

<pre>
	protected function initializeActionMethodArguments() {
		$methodParameters = $this->reflectionService->getMethodParameters(get_class($this), $this->actionMethodName);
</pre>

because $this->actionName contains for example ""createmybarAction"""
3507,TYPO3.Flow,Task,"",Resolved,Must have,Apply new conventions for naming of Domain Models and Repositories,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,"",1.0 alpha 2,2009-05-29,"","",100,2009-05-29 03:49,"","",17150,"","","The naming conventions for domain models, validators and repositories should change to the following scheme:

<pre>
\F3
  \Blog
    \Domain
      \Model
        Blog
        CommentInterface
        AbstractComment
        GoodComment
        Badcomment
      \Repository
        BlogRepository
        PostRepository
      \Validator
        BlogValidator
        EverythingFineValidator
</pre>

This probably requires changes in the resolving mechanism for validators and repositories.
Make sure that also substructures are supported:

<pre>
    \Domain
      \Model
        \Content
          ContentInterface
          AbstractContent
          Page
          Text  
        Site
        StructureNode
      \Repository   
        \Content
          PageRepository
        SiteRepository
        StructureNodeRepository
</pre>

Document the new conventions in the manual."
3513,TYPO3.Flow,Bug,"",Resolved,Must have,Created logfiles are read-only for either command line user or web user,Robert Lemke,Robert Lemke,2010-10-20 05:39,Log,1.0 alpha 1,2009-05-29,"","",100,2009-05-29 05:04,"","",1790900,"","","The logfiles created by the FileBackend automatically are owned by the current user running the script - that may be the webserver's user if FLOW3 is accessed from the web or another user if called from the command line. The problem is that whoever runs FLOW3 first, owns the log file and the default access rights are something like <pre>-rw-r--r-</pre>. If the other user tries to run FLOW3, it will fail because it can't write to the log file.

Therefore we should set the access rights to <pre>-rw-rw---</pre> upon creating the file. This should happen in the open() method of the FileBackend."
3519,TYPO3.Flow,Bug,"",Resolved,Should have,"typo: Misspelling of ""successful"" (was: sucessful)",Steffen Gebert,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 1,2009-05-29,"","",100,2009-05-29 10:43,"","",1790850,"","","sucessful(ly) -> successful(ly)

Greets
Steffen"
3525,TYPO3.Fluid,Feature,"",Resolved,Should have,"translateViewHelper and key=""LLL:EXT:lang/locallang_core.xml:show_item.php.table"" ",Susanne Moog,Bastian Waidelich,2010-10-20 05:44,"","",2009-06-01,"","",100,2009-06-01 10:35,"","",2600950,"","","The translateViewHelper should be able to resolve referenced paths to external lang files given in the form key=""LLL:EXT:lang/locallang_core.xml:show_item.php.table"". "
3529,TYPO3.Flow,Bug,"",Resolved,Must have,Detection of new objects in argument handling fails,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 1,2009-06-01,"","",100,2009-06-01 16:24,"","",1790800,"","","The symptom is @#1237305720: Argument ""newBlog"": Querying the repository for the specified object was not successful.@

When looking closer it turns out that on the first error all is well, but when submitting a second time, the exception is thrown. The reason is, that we rely on a new object to not have an UUID. But with the resolution of #3477 all entities get an UUID upon creation - boom."
3532,TYPO3.Flow,Bug,"",Resolved,Should have,Package Manager creates new packages at wrong location,Tim Eilers,Karsten Dambekalns,2010-10-20 05:39,Package,1.0 alpha 1,2009-06-01,"","",100,2009-06-01 17:56,"","",1790750,"","","(The used OS was Debian Lenny)

Perhaps i did something wrong, but i just followed the instructions of the Welcome package and entered 
<pre>
./flow3 package create MyPackage
</pre>

I expected my package somewhere under the Packages subfolder, but it was created at / ( /MyPackage/ ).

If it is works-as-designed please close this bug, but point me to the option where i can control the folder where the package will be created.

If it is a bug it should be fixed and create a package in the Local subfolder of the Packages subfolder."
3534,TYPO3.Flow,Bug,"",Resolved,Must have,File permission issues,Tim Eilers,Robert Lemke,2010-10-20 05:39,Core,1.0 alpha 3,2009-06-02,"","",100,2009-06-02 05:48,"","",1796300,"","","There are still some file persmission issues, which won't kill you, but are not perfectly clean in sense of security and beautiness:

* package manager creates 777-ed folders
* setfilepermissions.sh gives group write permission to some folders. this maybe fine on MacOS but not on some Linux environments. i think this was done for the logfile problem, but it isnt needed anymore
* setting folder and file permissions should be mentioned in documentation, because it is not everywhere possible to run the setfilepermissions.sh script. it should also cover situations where it is not possible to ""chown"" to webserver user (then set the needed folders to write permission for others aka 777 or 757) or special suexec/fastcgi environments (then changing anything isn't needed at all!).
* Public/Resources needs webservers write permission (perhaps that is already fixed)
* there are rare cases where the CLI user is not root, that should be no problem at the moment, but always kept in mind...
* Data/Temporary is 777-ed at the moment, too. it has to, since both CLI and Web requests create some hash-named folders. perhaps this could be changed to CLI/Web subfolders like it was done for the Logfiles?"
3535,TYPO3.Flow,Bug,"",Resolved,Should have,Temoprary files no longer end up in Data/Temporary,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Environment,1.0 alpha 1,2009-06-02,"","",100,2009-06-02 08:06,"","",1790700,"","",Since the introduction of initializeEnvironment() in F3\FLOW3 the temporary directory base is no longer set to the value given in the configuration (because new is used and the configuration would not be available anyway).
3537,TYPO3.Flow,Bug,"",Resolved,Must have,Subroute placeholders appear in URL if no replaced,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Configuration,1.0 alpha 2,2009-06-02,"","",100,2009-06-02 14:12,"","",1795200,"","","From IRC:
after deleting the welcome package i get strange subroutes for e.g. documentation ""http://flow3-alpha1.local/%3Cwelcomesubroutes%3E?packageKey=FLOW3&documentationName=Manual&language=en&%40action=index&%40controller=Standard&%40package=DocumentationBrowser"""
3544,TYPO3.Flow,Bug,"",Resolved,Must have,CLI logs end up in the Web folder due to bug in Utility\Environment,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Environment,1.0 alpha 2,2009-06-03,"","",100,2009-06-03 02:31,"","",1795150,"","","CLI logs end up in the same folder as Web logs, due to a bug introduced with r2525 (which fixed #3535)."
3550,TYPO3.Flow,Bug,"",Closed,Should have,Uncaught FLOW3 Exception in FileBackend on Windows,David Bruehlmeier,"",2010-10-20 05:39,Cache,"",2009-06-03,"","",0,2009-06-03 13:05,"","",1782200,"","","When starting the 1.0.0-alpha1 welcome screen, an ""Uncaught FLOW3 Exception"" is shown (see below). The exception stays even when reloading the page.

My environment:
* PHP 5.3.0RC1
* Apache/2.2.11 (Win32)
* Windows XP Professional Service Pack 3

<pre>
Uncaught FLOW3 Exception
#1: Warning: touch() [function.touch]: Unable to create file D:/Server/localhost/FLOW3-1.0.0-alpha1/Data/Temporary/5775c602eb68e9f81ff2ed205a288533/default/Cache/Development/Tags/%CLASS%F3_DocumentationBrowser_RoutePartHandlers_FileRoutePartHandler/FLOW3_Reflection^F3_DocumentationBrowser_RoutePartHandlers_FileRoutePartHandler because No such file or directory in D:\Server\localhost\FLOW3-1.0.0-alpha1\Packages\Global\FLOW3\Classes\Cache\Backend\FileBackend.php line 183 (More information)

F3\FLOW3\Error\Exception thrown in file
D:\Server\localhost\FLOW3-1.0.0-alpha1\Packages\Global\FLOW3\Classes\Error\ErrorHandler.php in line 98.
</pre>"
3551,TYPO3.Fluid,Bug,"",Resolved,Should have,HtmlViewHelper outputs htmlspecialchared code,Joerg Schoppet,Sebastian Kurfuerst,2010-10-20 05:44,Core,1.0.0 alpha 2,2009-06-03,"","",100,2009-06-03 13:51,"","",2603400,"","","Hi,

using the HtmlViewHelper at least in typo3 4.3 the output is always htmlspecialchared.

Adding:
@$value = htmlspecialchars_decode($value);@

after line 71 of Tx_Fluid_ViewHelpers_Format_HtmlViewHelper

solve this problem. But I don't know if this is the wanted way."
3559,TYPO3.Flow,Task,"",Resolved,Could have,Get rid of state in Package.xml files,Karsten Dambekalns,Robert Lemke,2010-10-20 05:39,Package,1.0 alpha 2,2009-06-04,"","",100,2009-06-04 04:21,"","",17350,"","","*Theory:*

The state in Package.xml is redundant (should be in the version number) and will cause inconsistencies over time (just look at the number of extension in TER being beta although stable for years). We should get rid of it."
3560,TYPO3.Flow,Feature,"",Resolved,Should have,Display meaningful error message if temporary path would be too long for OS,Robert Lemke,Bastian Waidelich,2010-10-20 05:39,Utility,1.0 alpha 3,2009-06-04,"","",100,2009-06-04 04:27,"","",1796250,"","","Certain setups (Windows ...) don't allow long path names. If FLOW3 is installed somewhere deep in the file structure, the path + file name for the caches and temp directory can become too long.

Currently this results in an exception thrown when trying to write to that directory (see #3550) but this could be checked earlier, when the temp directory is created in Utility\Environment. A meaningful error message would help to configure FLOW3 correctly."
3567,TYPO3.Flow,Task,"",Resolved,Could have,Define FLOW3_SAPITYPE constant in bootstrap,Bastian Waidelich,"",2010-10-20 05:39,Environment,"",2009-06-04,"","",100,2009-06-04 13:26,"","",17400,"","","IMO global constants are as bad as global variables. So I'm happy there are only 4 constants needed yet in FLOW3.
They're all defined in FLOW3-bootstrap - except FLOW3_SAPITYPE, that's defined in the constructor of F3\FLOW3\Utility\Environment if it hasn't been defined before.
Attached patch fixes this. But maybe \F3\FLOW3\Utility\Environment::getSAPIType() could be a static method too so we wouldn't need to instantiate it at all and could move the Constant-definition up to the other three defines()..."
3568,TYPO3.Flow,Bug,"",Resolved,Should have,PHP version check comes too late on non-namespaced PHP versions,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,"",1.0 alpha 2,2009-06-04,"","",100,2009-06-04 16:59,"","",1795100,"","","Using FLOW3 on PHP < 5.3 ends with a fatal error about an illegal input character (backspace). There is a version check in FLOW3.php, but it comes too late: The parsing is done before any execution, so the backslash in Public/index.php causes a fatal error (as would any backslashes in FLOW3.php)."
3569,TYPO3.Flow,Bug,"",Resolved,Should have,setfilepermissions.sh: with non-writable Temporary folder caches end up elsewhere (CLI mode),Karsten Dambekalns,Robert Lemke,2010-10-20 05:39,Core,1.0 alpha 2,2009-06-04,"","",0,2009-06-04 17:17,"","",1795050,"","","Just had weird fatal errors in CLI mode, and it turned out the cache was in /tmp/ instead of Data/Temporary/ - because the latter was not writable. setfilepermissions.sh set owner and group, but the folder needs to be writable also for the CLI user (analog to the Logs folder)."
3580,TYPO3.Flow,Feature,"",New,Must have,Create an administration panel for the FLOW3 Development context,Robert Lemke,"",2011-10-13 09:21,MVC,"",2009-06-05,"","",0,2009-06-05 04:31,"","",1782150,"","","We need some kind of admin panel which is (can be) displayed on the page rendered by FLOW3 and provides some useful information to the developer. That could be:

* Information about caches, ability to flush certain caches
* Information about routing (which route matched etc.)
* Memory consumption / parse time
* Tail of certain logs ?

The graphical design and code architecture should allow for third party packages to plugin to the panel for providing custom functionality.

Before this ticket can be close we need (solved in separate tickets - please create some):

* A UI concept and after that, an actual design
* A rough concept for the implementation
* The actual implementation"
3581,TYPO3.Flow,Feature,"",Resolved,Must have,Site lock / code cache flushing mechanism,Robert Lemke,Robert Lemke,2010-10-20 05:39,Cache,1.0 alpha 2,2009-06-05,"","",100,2009-06-05 04:36,"","",1795000,"","","We need a concept and implementation for flushing critical caches like the code caches.

In order to flush the code caches, we need to completely lock the application so that no requests come through while the php classes are deleted or rebuilt (which obviously would lead to some fatal error). This locking mechanism should be as simple as the bootstrap checking for the presence of a file (like FLOW3_SITE_LOCK)."
3582,TYPO3.Flow,Task,"",Closed,Should have,Concurrency stress test,Robert Lemke,Robert Lemke,2010-10-20 05:39,- Testing -,1.0 alpha 2,2009-06-05,"","",100,2009-06-05 04:42,"","",17550,"","","Currently we have only few experience with multiple concurrent users accessing FLOW3 at the same time. This ticket is about testing the behavior of FLOW3 when running simultaneous requests.

What we especially need to find out is

* how FLOW3 reacts if caches are empty
* how FLOW3 reacts in production context if caches are filled (theoretically shouldn't be a problem at all)
* if accessing FLOW3 in development context has any side effects on the Production context (shouldn't ...)
* how FLOW3 scales performance wise

Try to detect any race conditions so we can make them atomic.
"
3583,TYPO3.Flow,Task,"",Closed,Must have,Profiling of persistence framework / CR,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,Persistence,1.0 alpha 2,2009-06-05,"","",0,2009-06-05 04:59,"","",17600,"","",We need to have an intensive profiling session for figuring out where the weaknesses currently are regarding speed of persistence.
3584,TYPO3.Flow,Task,"",Resolved,Must have,Write a getting started tutorial,Robert Lemke,Robert Lemke,2010-10-20 05:39,- Documentation -,1.0 alpha 3,2009-06-05,"","",100,2009-06-05 05:09,"","",17650,"","","Especially for the welcome package but also in general we need some getting started tutorial which explains the first steps for creating a new package, controller, fluid template, persist stuff etc."
3585,TYPO3.Flow,Major Feature,"",New,Should have,Implement support for value objects,Robert Lemke,"",2013-02-20 08:45,"","",2009-06-05,"","",0,2009-06-05 05:12,"","",1782100,"","","Currently value objects are not truly supported as such - but we want that.
This ticket consists of several sub tasks (see related issues)"
3586,TYPO3.Flow,Feature,"",Resolved,Could have,Assure that value objects are immutable,Robert Lemke,Karsten Dambekalns,2010-10-20 05:40,Persistence,1.0 alpha 8,2010-03-16,"",1.00,100,2009-06-05 05:17,"","",1803400,"","","The concept of value objects is that they are solely identified by their value and that if two value objects have the same value, they are considered identical. This allows for sharing the same instance of a value object among other objects - but only if the value doesn't change afterwards.

Make sure that value objects are immutable. Properties of a value object should only be set through the constructor. To enforce that we could intercept any potential setters and throw an exception if they are called."
3587,TYPO3.Flow,Feature,"",New,Could have,Enforce validation rules for value objects already in constructor,Robert Lemke,"",2010-10-20 05:39,Validation,"",2009-06-05,"","",0,2009-06-05 05:21,"","",1782050,"","","Because the values of a value object can't be changed after instantiation, we should assure that only valid value objects exist. This should be done by validating the constructor arguments already in the constructor.

The validation mechanism should be introduced by some aspect (@around the constructor) and throw an exception if validation fails."
3588,TYPO3.Flow,Feature,"",Accepted,Should have,Support value objects in the Object Factory,Robert Lemke,Robert Lemke,2010-10-20 05:39,Object,"","","",12.00,0,2009-06-05 05:24,"","",1782000,"","","The Object Factory should have special support for value objects.

Value objects are in fact a mixture of protoype and singleton - although multiple instances of a class may exist, we should only create one instance with the same constructor arguments. The Object Factory (and Object Manager) should return an existing value object if a new one with exactly the same arguments (properties) is requested."
3592,TYPO3.Fluid,Feature,"",Resolved,Should have,Alias view helper for setting template variables,Christopher Hlubek,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,1.0.0 alpha 2,2009-06-05,"","",100,2009-06-05 09:56,"","",2603350,"","","There should be an alias view helper that can set variables in the template.

The following use cases should be supported:

<pre>
<f:alias value=""{foo.bar.baz}"" as=""x"">
{x.name}
</f:alias>
<f:alias map=""{x: foo.bar.baz, y: foo.bar.baz.name}"">
{x.name} or {y}
</f:alias>
</pre>
"
3595,TYPO3.Fluid,Feature,"",Closed,Should have,Convert integer types to boolean for if viewhelper,Balisky Christophe,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,1.0.0 alpha 2,2009-06-06,"","",0,2009-06-06 03:13,"","",2603300,"","","Hello, after wndeirng why certain if conditions didn't work in my flow templates, i figures out it was because it didn't convert interger values to boolean correctely. I suggest modifiying the convertArgumentValue method in the Tx_Fluid_Core_SyntaxTree_ViewHelperNode accordingly. Positive integer values superior to 0 are considered true all others are false.

	/**
	 * Convert argument strings to their equivalents. Needed to handle strings with a boolean meaning.
	 * 
	 * @param mixed $value Value to be converted
	 * @param string $type Target type
	 * @return mixed New value
	 * @author Sebastian Kurfürst <sebastian@typo3.org>
	 * @author Bastian Waidelich <bastian@typo3.org>
	 * @todo re-check boolean conditions
	 */
	protected function convertArgumentValue($value, $type) {
		//echo ""<br>$value - $type"";
		if ($type === 'boolean') {
			if (is_string($value)) {
				//echo ""string"";
				return (strtolower($value) !== 'false' && !empty($value));
			}
			if (is_array($value) || (is_object($value) && $value instanceof Countable)) {
				//echo ""array"";
				return count($value) > 0;
			}
			if (is_object($value)) {
					//echo ""object"";
				return TRUE;
			}

			//----> NEW CODE
			if (is_integer($value)) {
				//echo ""integer"";
				return $value > 0;
			}
			// END NEW CODE ---->

			return FALSE;
		}
		return $value;
	}"
3616,TYPO3.Flow,Feature,"",Resolved,Must have,Implement Accounts/UserManagement,Andreas Förthner,Andreas Förthner,2010-10-20 05:39,Security,1.0 alpha 3,2009-06-08,"","",0,2009-06-08 16:04,"","",1796200,"","","We need a general concept how to store users, their assigned roles and custom user identity information. The default implementation should store the users in the Content Repository, but there must be support for external IdentityProviders like an LDAP directory."
3617,TYPO3.Flow,Bug,"",Closed,Should have,AOP exception + fatal error using libssh2,Alexander Buch,Karsten Dambekalns,2010-10-20 05:39,"",1.0 alpha 3,2009-06-08,"","",0,2009-06-08 16:11,"","",1796150,"","","OK here is a strange one:
I'm currently writing a server-administration tool with FLOW3. As I want to connect to other systems as well, I make use of the libssh2 library (http://www.php.net/manual/en/book.ssh2.php).
So my first simple step was basically this:

<pre>
$connection = ssh2_connect('localhost', 22);
ssh2_auth_none($connection, 'myuser');
</pre>

I did this in the StandardController of my package, that i just kickstarted before, so there is nothing in between. The result of this is a RuntimeException somewhere out of the AOP stuff when rendering the View (I guess) [attached that result].
---
It's getting even stranger, when I put the result of the authentication method into a variable like this:

<pre>
$connection = ssh2_connect('localhost', 22);
$supportedAuthenticationMethods = ssh2_auth_none($connection, 'myuser');
</pre>

This results in a fatal error:
<pre>
Fatal error: Call to a member function getVariableContainer() on a non-object in /var/www/localhost/htdocs/flow3/Packages/Global/Fluid/Classes/View/TemplateView.php on line 171
</pre>

As this stuff of course doesnt belong the StandardController (DDD), I put it into its own class => Same result

BTW: I'm using PHP 5.3_RC2, FLOW3_alpha1 and head-revision of libssh2 on a Gentoo 64bit Linux system.
"
3618,TYPO3.Flow,Feature,"",Closed,Should have,Extended ACL possibilities,Andreas Förthner,Andreas Förthner,2010-10-20 05:39,Security,"",2009-06-08,"","",0,2009-06-08 16:16,"","",1781950,"","","Currently ACLs only cover PHP methods as resources. In the future we will need some more functionality like:

* read/write/add/delete persisted domain objects (covered by the JCR Security package)
* add constraints to ACL entries, to authorize based on: object attributes, security context/user attributes, method parameters(?) (maybe this can also be integrated in the privilege definitions)
* automatic query rewriting (a query should only return accessible objects: perhaps already covered by the JCR Security package)
* ResourceManager integration (files)"
3619,TYPO3.Flow,Feature,"",New,Should have,Implement System Policy Support/System Security,Andreas Förthner,Andreas Förthner,2012-05-21 10:15,Security,"",2009-06-08,"","",0,2009-06-08 16:19,"","",1811050,"","","There should be something like a system policy or general system security, that is always enforced and cannot be circumvented. We will need a concept for that."
3620,TYPO3.Flow,Feature,"",Closed,Should have,Implement a request stack,Andreas Förthner,Andreas Förthner,2011-08-04 08:53,MVC,1.0 beta 2,2010-03-08,"",14.00,10,2009-06-08 16:22,"","",1811000,"","",Intercepted requests (e.g. because of a security exception) should be pushed on the stack. After resolving the problem the request should be popped from the stack again and restarted or resumed.
3621,TYPO3.Flow,Feature,"",New,Should have,Implement dynamic firewall filter registration,Andreas Förthner,Andreas Förthner,2012-05-21 10:15,Security,"",2009-06-08,"","",0,2009-06-08 16:25,"","",1810950,"","",This is e.g. needed to support transparent encryption and decryption of request arguments.
3622,TYPO3.Flow,Feature,"",Resolved,Must have,Implement an access view helper,Andreas Förthner,Andreas Förthner,2010-10-20 05:39,Security,1.0 alpha 4,2009-06-08,"","",0,2009-06-08 16:29,"","",1796750,"","","This view helper should expect a resource as argument and render its subnodes only, if the current user has access to the given resource."
3623,TYPO3.Flow,Feature,"",Resolved,Should have,Implement authentication providers,Andreas Förthner,Andreas Förthner,2012-01-27 10:40,Security,"",2009-06-08,"","",0,2009-06-08 16:31,"","",1781900,"","","We should have at least the following:

* generic Username/Password (refactor the existing ones)
* HTTP Basic/Digest
* LDAP"
3624,TYPO3.Flow,Task,"",Resolved,Should have,Write documentation for the security framework,Andreas Förthner,Andreas Förthner,2010-10-20 05:39,Security,1.0 alpha 5,2009-06-08,2009-06-29,"",100,2009-06-08 16:32,"","",17750,"","",.
3633,TYPO3.Flow,Bug,"",Closed,Must have,Local packages path is guessed wrong,Christopher Hlubek,Christopher Hlubek,2010-10-20 05:39,Package,"",2009-06-09,"","",0,2009-06-09 12:51,"","",1781850,"","","A wrong path for local packages (""Packages/Local"") will be used by the package manager if the Global diretcory is linked to another FLOW3 installation.

This means, that new packages will not be created in the local ""Packages/Local"" directory, but in the global install. And - worse - packages will not be found in the local directory.

We should change the guessing algorithm, so that it doesn't rely on the location of the FLOW3 package for the Local package directory."
3635,TYPO3.Fluid,Bug,"",Closed,Must have,Fluid: SelectViewHelper always appends the select-field's name with [],Marcel Rosenberger,Bastian Waidelich,2010-10-20 05:44,"","",2009-06-09,"",0.00,0,2009-06-09 13:14,"","",2600900,"","","The name for a select-field will always be appended by [] whether the field is multiple or not.

<pre>
<f:form.select name=""mySelectField"" options=""{0: 'no', 1: 'yes'}"" value=""0"" />
</pre>

will result to

<pre>
<select name=""mySelectField[]"">
    <option value=""0"" selected=""selected"">no</option>
    <option value=""1"">yes</option>
</select>
</pre>

Note: mySelectField[] instead of mySelectField

The included file is a suggestion to fix the bug."
3639,TYPO3.Flow,Feature,"",Resolved,Should have,Active packages should be saved in a configuration file,Christopher Hlubek,Christopher Hlubek,2010-10-20 05:39,Package,1.0 alpha 2,2009-06-10,"","",100,2009-06-10 04:12,"","",1794950,"","","To activate and deactivate packages, a list of active packages must be saved.

This should be done by providing writeback support for the YAML configuration source and dedicated methods for the package states in the configuration manager."
3649,TYPO3.Flow,Feature,"",Resolved,Must have,Caches should be flushed on package version number changes,Robert Lemke,Robert Lemke,2010-10-20 05:39,Cache,1.0 alpha 2,2009-06-12,"","",100,2009-06-12 05:30,"","",1794900,"","","Usually when upgrading from one FLOW3 version to another the user will experience a PHP fatal error because some interfaces (or other code parts) changed which are not compatible with cached code (eg. the AOP proxy classes). Therefore we need a new cache which stores information about all active packages - as a start that could be simply the version number or even a hash of all version numbers. On initializing the cache framework, this information should be compared with the actual values and if they don't match all caches should be flushed."
3650,TYPO3.Flow,Feature,"",Resolved,Should have,AOP proxies support classes implementing an interface declaring a __construct() signature,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,AOP,1.0 alpha 2,2009-06-12,"","",100,2009-06-12 06:26,"","",1794850,"","","Currently AOP proxy classes add a few parameters to the constructor in order to inject the Object Manager and the Object Factory. The drawback is however that such a constructor won't be compatible to a possible interface which declared a certain constructor signature.

The Adviced and Empty Constructor Builder (and the Proxy Class Template) should be modified in a way that the parameters of a __construct() method are identical to that of the target class. 

* One way to do that is to *not* call parent::__construct() in the proxy's constructor but save the passed arguments temporarily. The constructor returns without any further action.

* The Object Manager and Object Factory can be injected either through a injectFLOW3_AOP_Proxy_ObjectManager() method or by annotating the property $FLOW3_AOP_Proxy_ObjectManager with some @inject annotation.

* The parent constructor is called after all dependencies have been injected and the AOP proxy class has been prepared. That could be before or right at the beginning of initializeObject().

The question is what consequences it would have if the constructor of the target class actually is called after all inject methods.

"
3651,TYPO3.Fluid,Bug,"",Resolved,Should have,Call to a member function getBackend() on a non-object,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:44,"","",2009-06-12,"","",100,2009-06-12 14:37,"","",2600850,"","","When setting an object as value in View Helpers extending Tx_Fluid_ViewHelpers_Form_AbstractFormViewHelper, a fatal error is thrown.
<pre>
<f:form.textbox value=""{someObject}"" />
</pre>
->
<pre>
Fatal error: Call to a member function getBackend() on a non-object in [TYPO3ROOT]\typo3conf\ext\fluid\Classes\ViewHelpers\Form\AbstractFormViewHelper.php on line 84
</pre>

Reason:
Some left overs from the Fluid backport:
<pre>
if (is_object($this->arguments['value']) && NULL !== $this->persistenceManager->getBackend()->getUUIDByObject($this->arguments['value'])) {
	$name .= '[__identity]';
}
</pre>

This should rather be something like:
<pre>
if (is_object($this->arguments['value']) && is_callable(array($this->arguments['value'], 'getUid'))) {
	$name .= '[uid]';
}
</pre>
as in renderHiddenIdentityField() of the FormViewHelper.
"
3657,TYPO3.Fluid,Bug,"",Resolved,Should have,<f:form.select does not allow to specify selectedValue,Marcel Rosenberger,Bastian Waidelich,2010-10-20 05:44,"","",2009-06-14,"","",0,2009-06-13 18:19,"","",2600800,"","","The following code from documentation does not work:
<pre>
<f:form.select name=""paymentOptions"" options=""{payPal: 'PayPal International Services', visa: 'VISA Card'}"" selectedValue=""visa"" />
</pre>

Error:
<pre>
PHP Fatal error:  Uncaught exception 'Tx_Fluid_Core_Parser_Exception' with message 'Argument ""selectedValue"" 
was not registered.' in typo3\sysext\fluid\Classes\Core\Parser\TemplateParser.php:402
</pre>"
3661,TYPO3.Fluid,Feature,"",Resolved,Should have,<f:form.checkbox   and    <f:form.radio  missing?!,Marcel Rosenberger,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,"",2009-06-14,"","",100,2009-06-13 18:56,"","",2600750,"","","It would be nice to have <f:form.checkbox and <f:form.radio available in a Fluid-Template.
<input type=""radio"" name=...> is possible but one can't take advantage of arguments like options=""{myarray}"" and property=""..."" as possible with the <f:form.select ViewHelper."
3676,TYPO3.Fluid,Bug,"",Resolved,Must have,SelectViewHelper should automatically use the persistence manager to determine the UID of an object,Sebastian Kurfuerst,Karsten Dambekalns,2010-10-20 05:44,Core,1.0.0 alpha 3,2009-06-15,"","",100,2009-06-15 17:00,"","",2603800,"","","It'd be very nice if the SelectViewHelper would work together with the persistence manager, so lists of objects are correctly added."
3699,TYPO3.Flow,Bug,"",Resolved,Should have,Misleading error message when calling inactive package,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 3,2009-06-18,"","",100,2009-06-18 08:25,"","",1796100,"","","When trying to use an inactive package you currently get a ""404 Not Found - No controller could be resolved which would match your request.""

It would be awesome to get a hint at package activation, the message should inform about the package not being available/active. After all that's different from the package being available but the controller not.
"
3702,TYPO3.Fluid,Feature,"",Resolved,Should have,Inline notation should expect object-parameters by default,Bastian Waidelich,Sebastian Kurfuerst,2010-10-20 05:44,Core,"",2009-06-18,"","",100,2009-06-18 11:00,"","",2600700,"","","Currently the syntax
<pre>
{f:debug(settings)}
</pre>
will cast the argument to a string.
To use objects as parameters in inline syntax, you'll have to write:
<pre>
{f:debug('{settings}')}
</pre>

It would be nice if it worked like this:
'foo'/""foo"" => 'foo'
foo => {foo}
123 => 123


Question: What happens with named parameters?
I think, the following would be consistent:
<pre>
{f:debug(settings, title='string')}
{f:debug(settings, title=123)}
{f:debug(settings, title=settings.title)}
</pre>"
3714,TYPO3.Fluid,Story,"",Rejected,Could have,Add advanced validation of ViewHelper arguments,Sebastian Kurfuerst,Christian Müller,2011-05-05 12:29,Core,"",2009-06-21,"","",100,2009-06-21 05:03,"","",2600650,"","","We should add a feature to support the @validate annotation inside the ViewHelper render() method comment.

See the ActionController for the code which needs to be included in AbstractViewHelper, and make sure to refactor it to a central place."
3715,TYPO3.Kickstart,Bug,"",Resolved,Must have,Kickstarter generates invalid Repositories,Bastian Waidelich,Karsten Dambekalns,2010-10-20 05:48,"",1.0.0 alpha 5,2009-06-21,"","",0,2009-06-21 09:33,"","",2740350,"","","Generated Repository classes (""Kickstart Generator generateRepository"") creates classes with ""@scope"" and ""@entity"" annotations."
3717,TYPO3.Fluid,Feature,"",Resolved,Should have,"""Designators"" for Form view helper",Bastian Waidelich,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,"",2009-06-22,"","",90,2009-06-22 05:51,"","",2600600,"","","* FormViewHelper needs a new argument ""designator"" / ""namespace""
* Extbase will set the default value for this argument to ""tx_extensionname_pluginname""
* All Form view helpers inside a form will inherit this namespace

so:
<pre>
<f:form>
	<f:form.textbox name=""firstName"" />
</f:form>
</pre>
gets
<pre>
<form action=""..."">
	<input type=""text"" name=""tx_extensionname_pluginname[firstName]"" value="""" />
</form>
</pre>
and
<pre>
<f:form object=""{customer}"">
	<f:form.textbox property=""firstName"" />
	<f:form.textbox name=""foo"" />
</f:form>
</pre>
gets
<pre>
<form action=""..."">
	<input type=""hidden"" name=""tx_extensionname_pluginname[customer][uid]"" value=""123"" />
	<input type=""text"" name=""tx_extensionname_pluginname[customer][firstName]"" value=""Kasper"" />
	<input type=""text"" name=""tx_extensionname_pluginname[foo]"" value="""" />
</form>
</pre>
and finally
<pre>
<f:form object=""{customer}"" namespace=""tx_ttnews"">
	<f:form.textbox property=""firstName"" />
	<f:form.textbox name=""foo"" />
</f:form>
</pre>
gets
<pre>
<form action=""..."">
	<input type=""hidden"" name=""tx_ttnews[customer][uid]"" value=""123"" />
	<input type=""text"" name=""tx_ttnews[customer][firstName]"" value=""Kasper"" />
	<input type=""text"" name=""tx_ttnews[foo]"" value="""" />
</form>
</pre>

Problem: namespace/designator can't be set to """" because then the default value would be used.. So it wouldn't be possible to output:
<pre>
<input type=""text"" name=""id"" value=""123"" />
</pre>"
3725,TYPO3.Fluid,Feature,"",New,Could have,CSS Engine,Sebastian Kurfuerst,Christian Müller,2014-04-03 07:24,ViewHelpers,"",2009-06-22,"","",0,2009-06-22 15:09,"","",2600550,"","","It would be great to have a CSS engine like lesscss, or integrate css cacheer.

http://lesscss.org/index.html
http://www.shauninman.com/archive/2008/05/30/check_out_css_cacheer

This idea was originally proposed by Jens Hoffmann, and I think it can be fully realized as ViewHelpers.

Greets,
Sebastian"
3726,TYPO3.Flow,Bug,"",Resolved,Must have,Links with arguments don't work without routes,Irene Höppner,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 2,2009-06-22,"","",100,2009-06-22 16:38,"","",1794800,"","","If you set an action link with fluid that uses arguments, it generates a URL like this:
http://blog.flow3.local:81/blog/post/index?blog=c31c5c59-d440-49df-a369-6a48ce29d84f
(as long as no routes are defined)

This results in an error:
An error occurred while trying to call F3\Blog\Controller\PostController->indexAction(). Error: Validation errors for argument ""blog"" 

If you add [__identity] to the get-var, everything is fine:
http://blog.flow3.local:81/blog/post/index?blog[__identity]=c31c5c59-d440-49df-a369-6a48ce29d84f

What i found out till now is, that in the validation-objects \F3\FLOW3\MVC\Controller\Argument::getValue() returns the uuid, but not an object...."
3728,TYPO3.Flow,Feature,"",New,Should have,Support arrays of objects as controller arguments,Sebastian Kurfuerst,"",2013-11-16 11:34,MVC,"",2009-06-23,"","",0,2009-06-23 02:12,"","",1781800,"","","Sometimes, you need to receive a variable number of objects of a given type as argument in the controller.

It would be nice to have a syntax like:

/**
 * @param F3\Blog\Post[] $posts An array of posts
 */
public function changeAction(array $posts) {
// do something with the list of posts here.
}

So, the general question is: How do we edit multiple items of the same type (or later, of different types) at the same time?

Greets,
Sebastian"
3730,TYPO3.Flow,Bug,"",Resolved,Should have,Signal Slot Dispatcher does not check if slot class is a registered object,Robert Lemke,Robert Lemke,2010-10-20 05:39,SignalSlot,1.0 alpha 2,2009-06-23,"","",100,2009-06-23 05:51,"","",1794750,"","","If a slot class is not registered as an object at the Object Manager, the Object Manager throws a not very meaningful exception. The dispatcher should check if the object is valid."
3733,TYPO3.Flow,Bug,"",Resolved,Should have,Site should be unlocked by Exception Handler,Robert Lemke,Robert Lemke,2010-10-20 05:39,Core,1.0 alpha 2,2009-06-23,"","",100,2009-06-23 09:43,"","",1794700,"","","If the site was locked and during that run FLOW3 crashes with some exception, the lock is not removed which results in a locked site for a minute (according to the constant in the LockManager).

The exception handler should remove the lock file if the current run locked the site."
3735,TYPO3.Flow,Bug,"",Resolved,Must have,randomizeArrayOrder() does not randomize...,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Utility,1.0 alpha 2,2009-06-23,"","",100,2009-06-23 10:12,"","",1794650,"","","randomizeArrayOrder() (added with r114) uses array_rand(), which does not randomize if as many ""random"" keys are requested as the source array contains. So, it's broken plus it is useless - use shuffle() instead."
3736,TYPO3.Flow,Feature,"",Resolved,Must have,Implement support for Directory status monitoring,Robert Lemke,Robert Lemke,2010-10-20 05:39,Monitor,1.0 alpha 2,2009-06-23,"","",100,2009-06-23 10:19,"","",1794600,"","",Currently the File Monitor and the ModificationTimeStrategy only support file monitoring. Implement support for whole directories.
3740,TYPO3.Flow,Feature,"",Resolved,Must have,Implement a Static Object Container,Karsten Dambekalns,Robert Lemke,2010-10-20 05:40,Object,1.0 alpha 8,2010-01-28,"",52.00,100,2009-06-24 04:37,"","",1803350,"","","As work on #3583 showed, object creation takes a lot more time than desired. Especially autowiring is a good target for further work.

What would mostly solve the speed issues would be a static object container, i.e. automatically generated PHP code which contains all the wiring ? hardcoded."
3742,TYPO3.Flow,Bug,"",Resolved,Must have,getObjectConfigurations() returns original objects,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Object,1.0 alpha 5,2009-06-24,"","",100,2009-06-24 05:30,"","",1797750,"","","getObjectConfigurations() currently returns the original configuration objects, which allows to alter those circumventing the setters intended. It must return cloes instead."
3755,TYPO3.Flow,Task,"",New,Must have,Concurrency stress testing and cache mechanism,Robert Lemke,"",2010-10-20 05:39,- Testing -,"",2009-06-25,"","",0,2009-06-25 03:36,"","",18000,"","","After the first experiences and results from #3582 we need to do some more thorough stress testing to identify race conditions in FLOW3, especially in the caching mechanism. We need to assure that especially the code caches cannot be built multiple times simultaneously which currently is seems to be not always the case."
3790,TYPO3.Flow,Feature,"",Resolved,Should have,Generic error action and validation errors for current request,Christopher Hlubek,Christopher Hlubek,2010-10-20 05:39,MVC,1.0 alpha 2,2009-06-28,"","",100,2009-06-28 12:31,"","",1794550,"","","The user shouldn't have to write a custom error action (altough it should still be possible) for handling argument mapping errors in the @ActionController@.

A generic @errorAction@ should forward to the last action and set the argument mapping errors in the request (I propose @$request->getErrors()@ for accessing the errors, but this must be discussed). The errors can then be retrieved in the form view helpers and special view helpers for rendering error messages."
3791,TYPO3.Fluid,Feature,"",Resolved,Should have,View helper for resource URIs,Christopher Hlubek,Christopher Hlubek,2010-10-20 05:44,ViewHelpers,1.0.0 alpha 2,2009-06-28,"","",100,2009-06-28 13:08,"","",2603250,"","","The public resources in a project should be easier accessible with the help of a new view helper. The view helper should simply take a filename and an optional package key. The current package key should be taken as a default.

So including an image from the public resources could look like:

<pre>
<img src=""{f:uri.resource 'images/flow3-logo.gif'}"" alt=""FLOW3 logo"" />
</pre>"
3792,TYPO3.Fluid,Bug,"",Closed,Should have,Special tag attributes for form view helpers are missing (e.g. size),Christopher Hlubek,Christopher Hlubek,2010-10-20 05:44,ViewHelpers,"",2009-06-28,"","",100,2009-06-28 13:13,"","",2600500,"","","Form input elements can have a lot of HTML attributes e.g. for the size or maxlength. These are missing for the @TextareViewHelper@ and @TextboxViewHelper@. So currently no size can be set for text input fields! Apart from standard attributes, there are also proprietary attribues (e.g. for auto completion), that should be supported."
3793,TYPO3.Fluid,Feature,"",Resolved,Should have,CSS class for errors in form view helpers,Christopher Hlubek,Christopher Hlubek,2010-10-20 05:44,ViewHelpers,"",2009-06-28,"","",100,2009-06-28 13:30,"","",2600450,"","",Form view helpers should automatically add a CSS class if an error for the property exists. The name of this class should be overridable.
3795,TYPO3.Flow,Bug,"",Resolved,Must have,Arguments in AbstractController are not cleared after forward,Christopher Hlubek,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 2,2009-06-29,"","",100,2009-06-28 18:17,"","",1794500,"","",The arguments object is created in the constructor of the @AbstractController@ class. After a forward the existing controller will be reused (controller is a singleton) and the old arguments object will be used. This leads to strange validation errors for argument mapping.
3801,TYPO3.Flow,Bug,"",Resolved,Must have,ValidatorResolver doesn't accept custom validator classes as validator name,Christopher Hlubek,Christopher Hlubek,2010-10-20 05:39,Validation,1.0 alpha 2,2009-06-29,"","",100,2009-06-29 13:28,"","",1794450,"","","When trying to implement a new Validator for URLs I stumbled upon a problem in the ValidatorResolver: it is currently not possible to add custom validators (not based on the model) e.g. for an E-Mail or URL. It should be possible to add a class name, but the Regexp doesn't allow for backslashes in the pattern."
3802,TYPO3.Fluid,Feature,"",Resolved,Should have,View helper for form errors,Christopher Hlubek,Christopher Hlubek,2010-10-20 05:44,ViewHelpers,1.0.0 alpha 2,2009-06-29,"","",100,2009-06-29 16:39,"","",2603200,"","",There should be a view helper to display errors for a form or for the whole action. It should iterate over all error messages just like a special for view helper. Additionally it should be possible to specifiy a property for which errors should be displayed.
3806,TYPO3.Flow,Bug,"",Resolved,Must have,Persistence fails when objects and/or lazy loading are involved...,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Persistence,1.0 alpha 2,2009-06-30,"","",100,2009-06-30 09:25,"","",1794400,"","","The fix for #3451 in r2591 has some side effects - even after adding something to a proxied SplObjectStorage it is not marked as dirty, thus the content is no longer persisted.

* activating a lazy loading proxy multiple times (as can happen if it is handed out without being activated first) marks it clean in the parent multiple times
* memorizeCleanState() needs to clone objects not just copy them, so comparison later makes sense
* isDirty() must not use strict comparison on objects - a clone is never same, but can only be equal
"
3814,TYPO3.Fluid,Bug,"",Resolved,Must have,whitespaces at the end of FormViewHelper.php,Benno Weinzierl,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-07-01,"","",100,2009-07-01 11:22,"","",2600400,"","","In file:
root  / fluid  / trunk  / Classes  / ViewHelpers  / FormViewHelper.php 

please remove whitespaces after closing php-tag"
3815,TYPO3.Flow,Bug,"",Closed,Must have,F3\FLOW3\Monitor\FileMonitorTest fails on Windows with alpha2,David Bruehlmeier,"",2010-10-20 05:39,Monitor,"",2009-07-01,"","",0,2009-07-01 15:51,"","",1781750,"","","Failure in detectChangesEmitsDirectoryChangedSignalAndMemorizesDirectoryIfDirectoryHasNotBeenMonitoredPreviously
Detail
E:\Sources\FLOW3_1.0.0-alpha2\Packages\Global\PHPUnit\Resources\PHP\PHPUnit\Framework\Assert.php:1487
Failed asserting that <boolean:false> is true.

Environment:
* Windows XP Professional Service Pack 3
* PHP Version 5.3.0 (final)
* Apache 2.2.11"
3823,TYPO3.Flow,Bug,"",Resolved,Must have,"FileMonitor does not fix ""windows"" paths",Bastian Waidelich,Robert Lemke,2010-10-20 05:39,Monitor,1.0 alpha 3,2009-07-02,"","",100,2009-07-02 13:00,"","",1796050,"","","Several FileMonitorTests fail on Windows due to backslashes in pathes.
Attached patch fixes the issue for me."
3837,TYPO3.Flow,Bug,"",Resolved,Must have,Objects added to a repository are not found if repository doesn't follow naming conventions,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,Persistence,1.0 alpha 3,2009-07-07,"","",100,2009-07-07 04:14,"","",1796000,"","","We have a model called \F3\TYPO3\Domain\Model\Structure\Site and a repository called \F3\TYPO3\Domain\Repository\SiteRepository.

_Note that the repository doesn't follow the naming conventions ? it should rather be called \F3\TYPO3\Domain\Repository\Structure\SiteRepository._

If a Site object is added to the (first) repository, it will be sucessfully stored in the CR. However, executing findAll() on the repository won't return any object because the repository's createQuery() method assumes the correct (second) repository name. This is a good thing but should also be enforced while adding objects.

Solution:
Define the model class name during construction / initialization of the repository and use that name everywhere in the repository functions to check objects passed to the repository against it."
3846,TYPO3.Flow,Feature,"",Resolved,Should have,Enforce validation before persisting model objects,Robert Lemke,Karsten Dambekalns,2010-10-20 05:40,Persistence,1.0 alpha 8,2010-03-02,"",8.00,100,2009-07-08 03:06,"","",1803300,"","","If there are validation rules defined for a (domain model) object, they should be enforced before actually persisting the object. This includes the property validation rules as well as the (custom) validation rules for the whole object.

Later we also need to think of optimizations in this regard, e.g. if a property is not dirty and the object was reconstituted, there's no need to validate it again.
"
3852,TYPO3.Flow,Feature,"",Resolved,Should have,Implement removeAll() for Repository,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,Persistence,1.0 alpha 5,2009-07-09,"","",100,2009-07-09 04:34,"","",1797700,"","","The \F3\FLOW3\Persistence\Repository class should provide a removeAll() method which allows to flush / truncate / ... the given repository.

Would it make sense to also have a removeBy() method? If so ... open another ticket."
3861,TYPO3.Fluid,Feature,"",Resolved,Should have,Backport fluids f:form:errors feature,Nikolas Hagelstein,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-07-09,"","",100,2009-07-09 12:13,"","",2600350,"","",nothing more to say :).
3864,TYPO3.Flow,Feature,"",Resolved,Should have,Implement filtering for log messages,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,Log,1.0 alpha 5,2009-07-10,"","",100,2009-07-10 04:12,"","",1797650,"","",Currently all severities are always logged. It should be possible to define filters per backend so only certain log entries are written.
3881,TYPO3.Flow,Task,Task #27561: Complete documentation,Resolved,Should have,Complete documentation about MVC,Robert Lemke,"",2012-08-16 16:35,- Documentation -,"",2011-06-20,"",0.00,100,2009-07-13 05:08,"","",18350,0.00,"",The documentation about MVC is still fragmentary and needs to be completed (and updated).
3882,TYPO3.Flow,Task,Task #27561: Complete documentation,Resolved,Should have,Document the Signal Slot features,Robert Lemke,Karsten Dambekalns,2011-06-22 06:07,- Documentation -,"",2009-07-13,"","",100,2009-07-13 05:09,"","",18400,"","",FLOW3's Signal and Slot features are currently undocumented.
3883,TYPO3.Flow,Task,"",Resolved,Must have,Mark all public API with @api tags,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,- Documentation -,1.0 alpha 3,2009-07-13,"","",100,2009-07-13 05:12,"","",18450,"","",The blacklisting approach with @internal tags is too error-prone and tedious to implement. We should go for a white list approach instead and mark all functions / methods which are part of the public (supported) API with an @api tag.
3933,TYPO3.Flow,Feature,"",Resolved,Must have,"Support typed parameters for class schemata, persistence, validation",Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 3,2009-07-17,"","",100,2009-07-17 08:39,"","",1795950,"","","When a domain model contains an array member variable and expects objects (of a certain kind) in that array, this can currently not be validated automatically. Additionally request parameters cannot be mapped from UUIDs to objects in such cases (because the class schema knows only about the array type).

Solution: Implement typed array using a syntax inspired by Java's Generics so that class schemata can find out about the intended contents of an array:
<pre>
	/**
	 * @var array<\F3\Blog\Domain\Model\Post>
	 */
	protected $relatedPosts = array();
</pre>
That would limit $relatedPosts to values of type \F3\Blog\Domain\Model\Post."
3934,TYPO3.Flow,Task,"",Resolved,Should have,Move class schema handling from Persistence to Reflection,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Persistence,1.0 alpha 3,2009-07-17,"","",100,2009-07-17 08:43,"","",18750,"","",The use and scope of class schemata has outgrown the Persistence scope; thus it should be moved to Reflection.
3945,TYPO3.Flow,Bug,"",Closed,Should have,Cannot redeclare PackageInterface ,Dmitry ,Karsten Dambekalns,2010-10-20 05:39,Core,"",2009-07-18,"","",0,2009-07-18 14:33,"","",1781700,"","","I'm not sure who (FLOW3 or APC) is wrong. But I got error with APC.

[apc-error] Cannot redeclare class f3\flow3\package\packageinterface in <path>\Flow3\Distribution\trunk\Packages\Framework\FLOW3\Classes\Core\Bootstrap.php on line 28.

Configuration:
OS: Windows XP SP3
Apache: 2.2.11
PHP: php-5.3.0-Win32-VC9-x86.zip
APC: php_apc-trunk-20090717-5.3-vc9-x86.zip
"
3950,TYPO3.Flow,Feature,"",Resolved,Should have,Package Manager should warn about duplicate packages,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,Package,1.0 alpha 5,2009-07-21,"","",100,2009-07-21 05:08,"","",1797600,"","","Currently it is possible to use the same package key multiple times within the Packages/* directories, for example:

<pre>
Packages/
   Application/
      Blog/
   Framework/
   Shared/
      Blog/
</pre>

The behavior is undefined. We should throw an exception instead to warn about multiple occurrences of a package key."
3955,TYPO3.Flow,Feature,"",Resolved,Must have,Implement limit and ordering for persistence queries,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Persistence,1.0 alpha 3,2009-07-22,"","",100,2009-07-22 04:12,"","",1795900,"","","This needs to be possible:
<pre>
return $query->matching($query->equals('blog', $blog))->setOrderings(array('date' => \F3\FLOW3\Persistence\QueryInterface::ORDER_ASCENDING))->setLimit($limit)->execute();
</pre>"
3956,TYPO3.Flow,Feature,"",Resolved,Could have,Implement a Count Validator,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,Validation,1.0 alpha 5,2009-07-22,"","",100,2009-07-22 04:15,"","",1797550,"","","For the blog (and other apps) we need a Count Validator:

<pre>
/**
  * @var \SplObjectStorage<F3\Blog\Domain\Model\Category>
  * @validate Count(atLeast = 1)
  */
protected $categories;
</pre>

The validate should be able to count everything implementing the Countable interface."
3969,TYPO3.Fluid,Bug,"",Closed,Won't have this time," ""Fatal error: Objects used as arrays.."" with PHP 5.2.0",Thomas Waggershauser,Jochen Rau,2010-10-20 05:44,"","",2009-07-23,"","",0,2009-07-23 11:39,"","",2600300,"","","I spend some time now, to understand this error:

Fatal error: Objects used as arrays in post/pre increment/decrement  
must return values by reference in /Users/air/Sites/ 
typo3_src-4.3.0alpha3/typo3/sysext/fluid/Classes/ViewHelpers/Form/ 
SelectViewHelper.php on line 148

It seems to be a php-problem, but I don't really understand, what this  
has to do with references :(

This issue occured using php 5.2.0, after update to 5.2.9, it worked.

-

This is not supposed to be like this, cause TYPO3 only requires 5.2.0 IIRC.

It's something that can be fixed quite easily, e.g. from
foreach ($this->arguments['options'] as $domainObject) {

to

$options = $this->arguments['options']
foreach ($options as $domainObject) {"
3977,TYPO3.Flow,Bug,"",Rejected,Should have,TextValidator is insecure,Robert Lemke,"",2012-03-13 08:13,Validation,"","","",6.00,20,2009-07-24 09:33,"","",1781650,"",FLOW3 1.0.0,"The TextValidator currently allows strings like
<pre>
%3cspan style=""color: #BBBBBB;""%3ea nice text%3c/span%3e
</pre>

It seems like we can't solve this completely with filter_var because then characters like percent, semikolon, quotes etc. can't be used in a text. In general the test case lacks realistic string which should pass the validator."
3985,TYPO3.Fluid,Bug,"",Resolved,Must have,f:form.textbox is not usable anymore without wrapping an f:form element ,Steffen Ritter,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,"",2009-07-27,"","",100,2009-07-27 04:40,"","",2600250,"","","Hi,
you have been able to use ViewHelper form.textbox as standalone to create an input field.
Since some time (cannot say revision) this is not possible anymore. The ViewHelper tries to access something of the parent Object (formName).

If there is no form wrapped a Fatal error will be raised.

"
3987,TYPO3.Fluid,Task,"",Resolved,Must have,Inconsistent attribute naming in Form view helper,Robert Lemke,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,1.0,2009-09-05,2009-09-05,"",100,2009-07-27 05:27,"","",18900,"","","The action link view helper uses the following attributes for specifying the action:
<pre>
   <f:link.action action=""show"" controller=""Post"" package=""Blog"" ...
</pre>
The form view helper, however, uses other attribute names:
<pre>
   <f:form action=""create"" controllerName=""Comment"" packageName=""Blog"" subpackageName=""Foo"">
</pre>
That is not only incosistent with the link view helper but also in general (we never use ""packageName"" but only ""packageKey"").

Please rename the attributes as follows:

controllerName -> controller
packageName -> package
subpackageName -> subpackage

Note that names like ""controller"", ""package"" etc. should only be used for attributes in Fluid templates. We make the exception there to provide shorter names for the users. Generally in PHP code we'd rather use ""controllerName"", ""packageKey"" etc.
"
3989,TYPO3.Flow,Feature,"",Resolved,Should have,Generate PackageStates.yaml if it doesn't exist,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,Package,1.0 alpha 5,2009-07-27,"","",100,2009-07-27 05:52,"","",1797500,"","",The package manager should generated the PackageStates.yaml file if it doesn't exist. In this case all available packages should be listed as active (if that is possible according to their constraints).
3990,TYPO3.Flow,Feature,"",Resolved,Should have,"Allow arbitrary names and locations for ""Web"" directory",Robert Lemke,"",2010-10-20 05:39,Core,1.0 alpha 3,2009-07-27,"","",100,2009-07-27 06:03,"","",1795850,"","","Currently the public directory must be called ""Web"" and reside on directory below FLOW3's root directory.

More specifically the bash script requires the directory to be called ""Web"" because it calls ./Web/index.php. Other parts of FLOW3 seem not to rely on the name because it is not hardcoded.

What's fixed though is the fact that the bootstrap must be accessible via ../Packages/Framework/FLOW3/Scripts/FLOW3.php. Even if the require statement in the index.php script would be adjusted to another structure, the bootstrap would still rely on this relative path.

Unfortunately this doesn't match the reality at most hosters. The following structure (and others) must equally be possible:
<pre>
/var/www/foo/bar/
   myApp/
      Configuration/
      Data/
      Packages/
         Framework/
            FLOW3/
          ...
   log/
   tmp/
   htdocs/
      Resources/
          Packages/
             ...
      .htaccess
      index.php
</pre>

So: Make sure that FLOW3 works with arbitrary names for the Web directory and arbitrary relative paths between Web and the FLOW3.php script."
3994,TYPO3.Fluid,Bug,"",Resolved,Must have,Viewhelpers are instanciated multiple times in ViewHelperNode,Bastian Waidelich,Sebastian Kurfuerst,2010-10-20 05:44,Core,"",2009-07-27,"","",100,2009-07-27 06:36,"","",2600200,"","","In the evaluate() method of \F3\Fluid\Core\Parser\SyntaxTree\ViewHelperNode there is
<pre>
$viewHelper = $objectFactory->create($this->viewHelperClassName);
</pre>

The viewhelper should be stored in a private/protected field to be able to do
<pre>
if ($this->viewHelper === NULL) {
	$this->viewHelper = $objectFactory->create($this->viewHelperClassName);
}
</pre>

This will increase performance and make it possible to store private values in view helpers."
3997,TYPO3.Fluid,Feature,"",Resolved,Should have,Enable bulk assignment of template variables,Robert Lemke,Bastian Waidelich,2010-10-20 05:44,Core,1.0.0 alpha 3,2009-07-27,"","",100,2009-07-27 08:54,"","",2603750,"","","Currenly TemplateView::assign() expects two arguments: the key and the value of the variable to assign. When lots of variables are assigned this is not convenient - a signature for bulk assignments would help.

Enhance assign() so that if the first argument is an array, the function assumes that it is an array of keys and values which will be assigned. In that case the second argument must not be set (and if so, results in an exception).

<pre>

$this->view->assign('foo', 'bar');
$this->view->assign('baz', 'quux');

// same as:

$this->view->assign(array('foo' => 'bar', 'baz' => 'quux');

</pre>"
4013,TYPO3.Flow,Bug,"",Resolved,Should have,Argument handling in RESTController doesn't work correctly,Christoph Blömer,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 5,2009-07-28,"","",100,2009-07-28 05:38,"","",1797450,"","","The RESTController is inherited from the ActionController. Therefore the ArgumentHandling should work as intended.

The problem is due to the following code of the RESTController class.
<pre>
public function processRequest(\F3\FLOW3\MVC\RequestInterface $request, \F3\FLOW3\MVC\ResponseInterface $response) {
    $this->arguments->addNewArgument('id', 'UUID', FALSE);
    parent::processRequest($request, $response);
}
</pre>
Adding an argument in this code portion results in an shift of all arguments of a called method. The value for the 1st argument is now shifted to the second argument.

If addNewArgument is removed from that code it works as intended.

A possible solution would be to move that line into the initializeAction method. The argument is then added to the end of the argument array and not to the beginning.

But actually it also shouldn't be passed to the method if it is not required or specified by the method.
"
4027,TYPO3.Fluid,Bug,"",Resolved,Should have,options-argument of the SelectViewHelper should not be optional,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,1.0.0 alpha 3,2009-07-28,"","",100,2009-07-28 14:05,"","",2603700,"","",The SelectViewHelper expects $this->arguments['options'] to be an array. A Select field without options wouldn't make sense anyways. So the options-argument should be required.
4028,TYPO3.Fluid,Bug,"",Resolved,Must have,Email Uri Helper creates a link tag instead of an URI,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,1.0.0 alpha 3,2009-07-28,"","",100,2009-07-28 14:17,"","",2603650,"","","\F3\Fluid\ViewHelpers\Uri\EmailViewHelper actually does the same as \F3\Fluid\ViewHelpers\Link\EmailViewHelper - creating a link tag.. Funny, that no one complained about it yet. A classical copy & paste bug."
4051,TYPO3.Fluid,Bug,"",Resolved,Must have,TagBuilder is not resetted when a view helper is initialized multiple times,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:44,Core,1.0.0 alpha 4,2009-07-29,"","",100,2009-07-29 07:46,"","",2603950,"","","Since r2895 ViewHelpers that belong to the same ViewHelperNode (inside loops) are only instantiated once. This leads to the side-effect, that $this->tag points to the same reference.
If a tag attribute is set it won't be resetted when initialize() is called.

Example:
<pre>
<f:for each=""{0:1, 1:2, 2:3, 3:4}"" as=""foo"">
	<f:link.action class=""{f:if('odd' condition='{foo} % 2')}"">{foo}</f:link.action>
</f:for>
</pre>

Expected result:
<pre>
<a class=""odd"" href=""viewhelpertest/standard"">1</a>
<a href=""viewhelpertest/standard"">2</a>
<a class=""odd"" href=""viewhelpertest/standard"">3</a>
<a href=""viewhelpertest/standard"">4</a>
</pre>

Actual result:
<pre>
<a class=""odd"" href=""viewhelpertest/standard"">1</a>
<a class=""odd"" href=""viewhelpertest/standard"">2</a>
<a class=""odd"" href=""viewhelpertest/standard"">3</a>
<a class=""odd"" href=""viewhelpertest/standard"">4</a>
</pre>

Solution:
Reset TagBuilder instance in initialize()

And we should check, whether there are more side-effects!"
4063,TYPO3.Fluid,Bug,"",Resolved,Must have,CObjectViewHelper erases field data in TypoScript,Christian Zenker,Bastian Waidelich,2010-10-20 05:44,"","",2009-07-29,"","",100,2009-07-29 13:37,"","",2600150,"","","If no cObj is handed, CObjectViewHelper uses cObj from the GLOBALS-array. But this way it erases all data in this cObj that might be used later on in TypoScript.

Example

<pre>
page {
    10 < plugin.tx_myext
    headerData = TEXT
    headerData {
        # will be empty
        field = title
        wrap = <title>|</title>
    }
}

</pre>


The appended bugfix creates a new cObj if none is supported, but I'm not sure, if this is the best solution.
Maybe the parser could support one, or maybe it already does...?"
4082,TYPO3.Flow,Bug,"",Resolved,Must have,FLOW3 uses wrong Packages path via CLI if directories are symlinked,Robert Lemke,Robert Lemke,2010-10-20 05:39,Core,1.0 alpha 3,2009-07-31,"","",100,2009-07-31 05:54,"","",1795800,"","","The paths for scanning directories for packages is currently determined by some relative path to the (real path) of the FLOW3 package. If Packages/Framework/ is in reality a symlink to some other FLOW3 installation (which must be possible), the back path leads to that installation - the wrong Packages path. This is only the case in CLI mode because when access from the web, the path is determined relatively to the Web directory (which is another problem, see #3990).
"
4084,TYPO3.Flow,Feature,"",Resolved,Should have,Make the application context accessible by a read-only setting,Robert Lemke,Robert Lemke,2010-10-20 05:39,Configuration,1.0 alpha 3,2009-07-31,"","",100,2009-07-31 07:28,"","",1795750,"","","In certain areas of FLOW3 it would come handy if the current application context could be retrieved from FLOW3's settings.
Therefore the configuration manager could set ""FLOW3.core.context"" automatically to the current application context."
4085,TYPO3.Flow,Bug,"",Resolved,Must have,Package Manager does not ignore files in directory Packages/,Robert Lemke,Robert Lemke,2010-10-20 05:39,Package,1.0 alpha 3,2009-07-31,"","",100,2009-07-31 07:34,"","",1795700,"","",If there are files in the directory Packages/ the package manager will cause a fatal error because it doesn't distinguish between files and directories while iterating over them.
4088,TYPO3.Flow,Task,"",Closed,Could have,Check maximum allowed path length only when creating of cache files failed,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:39,Cache,"",2009-07-31,"","",0,2009-07-31 09:38,"","",19500,"","","Currently we're checking the length of each cache file that is generated in the caching FileBackend.
It might be possible to do that check only if touch() returned FALSE to avoid the (small) performance loss due to the many strlen() calls.

This has to be tested and profiled."
4091,TYPO3.Flow,Bug,"",Resolved,Must have,F3\FLOW3\Utility\Files::getUnixStylePath() creates invalid paths on windows,Irene Höppner,Karsten Dambekalns,2010-10-20 05:39,Utility,1.0 alpha 3,2009-07-31,"","",100,2009-07-31 12:06,"","",1795650,"","","C:\h\flow3\intranet\Web

becomes

C://h/flow3/intranet/Web/

Windows doesn't like the // and fails to create directories later.

"
4118,TYPO3.Flow,Bug,"",Resolved,Must have,Package Manager does not clear the code cache on activating / deactivating packages,Robert Lemke,Robert Lemke,2011-08-23 05:26,Package,1.0 beta 1,2009-08-03,"","",100,2009-08-03 06:56,"","",1781600,"","","When packages are activated and especially when they are deactivated, the package manager must assure that all code caches are flushed."
4146,TYPO3.Flow,Feature,"",Accepted,Should have,Support typed parameters for validation,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Validation,"","","",8.00,50,2009-08-04 13:09,"","",1781550,"","",Following up on #3933 validation should make use of typed parameters...
4149,TYPO3.Flow,Bug,"",Resolved,Should have,Link to exceptions wiki page not working anymore,Peter Beernink,Robert Lemke,2010-10-20 05:39,Error,"",2009-08-05,"","",0,2009-08-05 02:49,"","",1781500,"","","Due to the recent reinstall of the wiki.typo3.org website, the links to the explanation of an uncaught exception are not working anymore.

The redirect currently goes to http://wiki.typo3.org/Exception<exceptionID>. 
This should be http://wiki.typo3.org/index.php/Exception<exceptionID>."
4160,TYPO3.Flow,Bug,"",Resolved,Must have,"MVC Controller Argument $dataType should NOT be set to ""Text"" by default",Sebastian Kurfuerst,Sebastian Kurfuerst,2010-10-20 05:39,MVC,1.0 alpha 5,2009-08-05,"","",0,2009-08-05 16:56,"","",1797400,"","","MVC Controller Argument $dataType should NOT be set to ""Text"" by default. Instead, it would be a lot better to throw an exception if the data type could not be determined.

Just imagine somebody writing the following:
<pre>
 * param array $bla
</pre>
He will only notice that he forgot the @ if the system throws an exception at him. Else, it could sometimes work, and sometimes not...

Greets,
Sebastian"
4166,TYPO3.Flow,Feature,"",Resolved,Must have,Allow disabling validation for action arguments,Robert Lemke,Robert Lemke,2010-10-20 05:39,MVC,1.0 alpha 3,2009-08-06,"","",100,2009-08-06 05:01,"","",1795600,"","","In situations where a knowingly incomplete / invalid argument needs to be passed to an action, for example an edit action, it is necessary to disable validation for a single or multiple arguments. This should be possible by calling a disableValidation() method on the argument object or by adding a @dontvalidate $argumentName annotation to an action method."
4167,TYPO3.Flow,Feature,"",Resolved,Must have,Implement an update() method for the base repository,Robert Lemke,Robert Lemke,2010-10-20 05:39,Persistence,1.0 alpha 3,2009-08-06,"","",100,2009-08-06 05:08,"","",1795550,"","","The base repository (\F3\FLOW3\Persistence\Repository) should provide an update() method which allows for convenient updates of an existing object.

The update method expects one argument which is a not-yet persisted clone of the original object. The fact that it is a clone of the original is important because only then it has the same UUID like the original object. If the object is not a clone, you must use replace() instead.

Calling update() will check the uuid of the given object, fetch the currently persisted object with the same uuid, will disconnect the existing object from the repository and persistence framework and connect the new object instead."
4168,TYPO3.Flow,Bug,"",Resolved,Must have,Rules added with @validate will replace existing validation rules,Robert Lemke,Robert Lemke,2010-10-20 05:39,MVC,1.0 alpha 3,2009-08-06,"","",100,2009-08-06 05:15,"","",1795500,"","","A @validate annotation placed in an action method's comment should add new validation rules to the existing base validation of an argument.
However, it currently replaces existing rules.

The following code currently leads to disabling validation for the $blog argument which should not be possible by a @validate annotation:

<pre>
	/**
	 * Edits an existing blog
	 *
	 * @param \F3\Blog\Domain\Model\Blog $blog The blog to be edited. This might also be a clone of the original blog already containing modifications if the edit form has been submitted, contained errors and therefore ended up in this action again.
	 * @return string Form for editing the existing blog
	 * @validate $blog Raw
	 */
	public function editAction(\F3\Blog\Domain\Model\Blog $blog) {
		$this->view->assign('blog', $blog);
	}
</pre>
"
4169,TYPO3.Flow,Task,"",Resolved,Should have,Add CGL rules for annotations,Bastian Waidelich,Karsten Dambekalns,2010-10-20 05:39,- Documentation -,1.0 alpha 5,2009-08-06,"","",100,2009-08-06 06:15,"","",20000,"","","Since annotations are part of the code in FLOW3, we should add some more rules in the CGL documentation.
E.g. it would be good to have a list of _all_ annotations used in FLOW3 (including @aspect eg).

And it should be stated which annotations are required in which cases.

Additionally the order of annotation tags varies from class to class currently. My suggestion for a defined order is

*For classes:*
<pre>
@version
@license
</pre>

*For constructor and methods in classes:*
<pre>
// parameters/return type
@param
@return
// validation
@validate
@dontvalidate
// authors (we might get rid of this?)
@author
// API related
@api
@since
@deprecated
// additional annotations
@see
@todo
</pre>

*For test cases:*
<pre>
@test
@dataProvider
@expectedException
@author
</pre>

What am I missing?"
4170,TYPO3.Fluid,Bug,"",Resolved,Must have,Form Viewhelper creates hidden identity field even for new objects,Robert Lemke,Robert Lemke,2010-10-20 05:44,ViewHelpers,1.0.0 alpha 3,2009-08-06,"","",100,2009-08-06 08:05,"","",2603600,"","","Every entity has a uuid, no matter if it's new, reconstituted or clone of a reconstituted object.

Earlier the form view helper only rendered the hidden identity field for objects which were not new. However that stood in the way for implementing the new edit mechanism which should expects that the identity of a clone is also render, although a clone is ""new"".

We need a check which assures that the identity field is render for objects being new and clone but nor for object being new and not a clone."
4202,TYPO3.Fluid,Feature,"",Resolved,Should have,"Add ""absolute"" argument to action link viewhelpers",Bastian Waidelich,Bastian Waidelich,2010-10-20 05:44,"","",2009-08-09,"","",100,2009-08-09 14:36,"","",2600100,"","","Since r2914 Fluid supports to generate absolute links/URIs by setting the argument $absolute. This is useful for news feeds or email templates for example.
This feature needs to be backported."
4207,TYPO3.Fluid,Feature,"",Resolved,Should have,Make action argument optional in ActionViewHelpers,Jeff Segars,Bastian Waidelich,2010-10-20 05:44,"","",2009-08-10,"","",100,2009-08-09 19:36,"","",2600050,"","","The action view helpers for links and URIs both require the action argument. These view helpers may be used to generate links within the same action and templates may be shared across actions via partials. Thus, it would be helpful for the action to be an option argument like the controller and other arguments."
4218,TYPO3.Fluid,Feature,"",Resolved,Should have,"Support for properties of nested objects using ""property""-argument",Marcel Rosenberger,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-08-10,"","",100,2009-08-10 11:06,"","",2600000,"","","Hi all,

it would be great to be able to use the ""property""-argument to specify values for nested objects. Here is an example:

Given a class ?Club? and a class ?User?. The Club has a property ?user? that references a User-Object.

Club->user = User-Object

With Fluid I want to provide a formular for editing the Club-Object AND User-Object (inside the Club-Object) simultaneously. What I am trying to do is something like:

<pre>
<f:form
	method=""post""
	controller=""Club""
	action=""mailChanges""
	name=""updatedClub""
	object=""{club}""
	arguments=""{club : club}"">

<p>Clubname: <f:form.textbox property=""name"" /></p>
<p>Responsible for Club: <f:form.textbox property=""user.name"" /></p>

[...submit...]

</form>
</pre>

When the formular is submitted the club's name and the name for the responsible should be changed."
4221,TYPO3.Flow,Feature,"",Resolved,Should have,Implement CLI controller for Cache Manager,Robert Lemke,Robert Lemke,2010-10-20 05:39,Cache,1.0 alpha 3,2009-08-10,"","",100,2009-08-10 11:58,"","",1795450,"","","The ./flow3 bash script already supports a command ""./flow3 cache flush"", however this is not yet implemented as a controller for the Cache Manager."
4230,TYPO3.Fluid,Feature,"",Resolved,Should have,Create ViewHelpers for Backend Modules,Steffen Kamper,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,"",2009-08-12,"","",100,2009-08-12 05:08,"","",2599950,"","","Creating backend modules should be very simple. I started with creating these viewhelpers and grouped them by category.
This grouping needs a patch in fluid as the directory level resolved by fluid is limited to one level.

To show you the way i used them here is my template (now all used in blog_example)
<pre>
{namespace blog=Tx_BlogExample_ViewHelpers}<blog:be.startPage pageTitle=""{title}"" jumpToUrl=""true"" extJs=""true"" />    
<form action="""" method=""post"" enctype=""multipart/form-data"">
<div class=""typo3-fullDoc"">
	<!-- Page header with buttons, path details and csh -->
	<div id=""typo3-docheader"">
		<div id=""typo3-docheader-row1"">
			<div class=""buttonsleft"">
				<div class=""buttongroup"">
					<blog:be.buttons.csh table=""_MOD_web_func"" />
					<blog:be.buttons.save />
				</div>
			</div>
			<div class=""buttonsright"">
				<div class=""buttongroup"">
					<blog:be.buttons.shortcut setList=""{setKeys}"" />
				</div>
			</div>
		</div>
		<div id=""typo3-docheader-row2"">
			<div class=""docheader-row2-left"">
				<div class=""docheader-funcmenu"">
					<blog:be.menus.functionMenu modMenu=""{modMenu}"" key=""{modMenuKey}"" />
					<blog:be.menus.functionMenu modMenu=""{submodMenu}"" key=""{submodMenuKey}"" />
				</div>
			</div>
			<div class=""docheader-row2-right"">
				<blog:be.status.pagePath />
				<blog:be.status.pageInfo />
			</div>
		</div>
	</div>
	<!-- Content of module, for instance listing, info or editing -->
	<div id=""typo3-docbody"">
		<div id=""typo3-inner-docbody"">
		 	<h1>{title}</h1>
			<p>Welcome in the OldStyle backend module!<br />Looks like Standard, but is an Extbase driven module :)</p>	
			
		</div>
	</div>
</div>
</form>
<blog:be.endPage />  
</pre>

attached is a patch for blog_example to show you how they will work"
4231,TYPO3.Fluid,Bug,"",Resolved,Must have,[Fluid] Only one level is possible for directories in ViewHelpers,Steffen Kamper,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-08-12,"","",100,2009-08-12 05:09,"","",2599900,"","","Fluid only resolves one level in Tx_Fluid_Core_Parser_TemplateParser::resolveViewHelperName

Change it to infinetive does the attached patch "
4268,TYPO3.Flow,Task,"",Rejected,Must have,"handle model-attributes, that are not of type string, but user-input",Irene Höppner,"",2011-08-04 02:50,MVC,"","","",6.00,0,2009-08-18 12:41,"","",20300,6.00,"","I'm not sure, if this is a problem or something, I just didn't understand yet...

We have some attribute (""orderdate"") in the model that is of type \DateTime and we want the user to add a date for that in the new-/edit-forms.

What we did and what happened:

h2. 1. Added the attribute + getter-/setter-method to the model class and an input-field to new.html:

<pre>
/**
 *
 * @var \DateTime
 */
protected $orderdate = '';

/**
 *
 * @param \DateTime $orderdate
 * @return void
 */
public function setOrderdate(\DateTime $orderdate) {
	$this->orderdate = $orderdate;
}

/**
 *
 * @return \DateTime
 */
public function getOrderdate() {
	return $this->orderdate;
}
</pre>

<pre>
<label for=""orderdate"">Orderdate</label><br />
<f:form.textbox property=""orderdate"" id=""orderdate"" />
</pre>

*Result:* Exception: Catchable Fatal Error: Argument 1 passed to F3\Blog\Domain\Model\Blog::setOrderdate() must be an instance of DateTime, string given in C:\Programme\xampp\htdocs\flow3\blog\Packages\Application\Blog\Classes\Domain\Model\Blog.php line 127

h2. 2. Removed the type hint from the setter:

<pre>
/**
 *
 * @param \DateTime $orderdate
 * @return void
 */
public function setOrderdate($orderdate) {
	$this->orderdate = $orderdate;
}
</pre>
*Result*: Exception: 1244465558: Expected property of type DateTime, but got string

h2. 3. Added a validator the the attribute:

<pre>
/**
 *
 * @var \DateTime
 * @validate DateTime
 */
protected $orderdate = '';
</pre>

*Result*: error-message:
orderdate: The given subject was not a valid DateTime. Got: ""string""

*But*: We get that message, no matter what we entered into the input-field.

h2. 4. Created the \DateTime-object in the setter, if the parameter is of type string:

<pre>
/**
 *
 * @param \DateTime $orderdate
 * @return void
 */
public function setOrderdate($orderdate) {
	if (is_string($orderdate)) {
		$orderdate = new \DateTime($orderdate);
	}
	$this->orderdate = $orderdate;
}
</pre>

*Result*: Cool, works - as long as the string in the input-form has a proper format like yyyy-mm-dd.
Otherwise another exception: DateTime::__construct() [datetime.--construct]: Failed to parse time string (fgsdfasdfa) at position 0 (f): The timezone could not be found in the database

Ok, could check the string for a proper format in the setter... but we need the same check for several attributes in several classes...

h2. 5. What about writing our own validator?

Doesn't help because the setter comes first and needs a correct string already to create the datetime-object. Same exception like above.


h2. 6. Entered the orderdate-field to edit.html

<pre>
<label for=""orderdate"">Orderdate</label><br />
<f:form.textbox property=""orderdate"" id=""orderdate"" />
</pre>

*Result*: Exception: Warning: htmlspecialchars() expects parameter 1 to be string, object given in C:\Programme\xampp\htdocs\flow3\blog\Packages\Framework\Fluid\Classes\Core\ViewHelper\TagBuilder.php line 161

Added some short hand Fluid-syntax helps in that case:

<pre>
<label for=""orderdate"">Auftragsdatum:<br />
<f:form.textbox property=""orderdate"" value=""{f:format.date('{job.orderdate}' format='d.m.Y')}"" />(Format: dd.mm.yyyy)<br />
</pre>


h2. Conclusion:

There has to be done some conversion between the strings coming from html-forms and attributes of the model that are not of type string. Before that conversion the strings probably have to be validated. 
No idea where to do that best :-)."
4276,TYPO3.Flow,Task,"",Resolved,Should have,Release Notes still points to alpha2,Duo ,"",2010-10-20 05:39,- Documentation -,"",2009-08-20,"","",0,2009-08-19 23:26,"","",20400,"","","The release note wiki page linked from http://flow3.typo3.org/download/ is still pointing to the alpha2 release page and not the alpha3 release page.

http://wiki.typo3.org/index.php/FLOW3_1.0.0_alpha2

should be

http://wiki.typo3.org/index.php/FLOW3_1.0.0_alpha3"
4277,TYPO3.Fluid,Feature,"",Resolved,Must have,Putting form fields in a partial causes error,Irene Höppner,Sebastian Kurfuerst,2010-10-20 05:44,ViewHelpers,"",2010-06-18,2010-06-18,"",100,2009-08-20 04:15,"","",2599850,"","","You often have the same form-fields in a new-template like in an edit-template. So I would like to put them into a partial which is used in the new-form and in the edit-form.
The form-tag itself would stay in the different templates.

So a partial could look like this:

<pre>
<label for=""titel"">Titel/Tätigkeit:</label><br />
<f:form.textbox property=""titel"" size=""70"" id=""titel"" /><br />
<label for=""personentage"">Personentage:</label><br />
<f:form.textbox property=""personentage"" size=""5"" id=""personentage"" /><br />
</pre>

Being included like this:
<pre>
<f:form method=""post"" action=""createOhneProjekt"" object=""{newAuftrag}"" name=""newAuftrag"">
	<f:form.hidden name=""kunde"" value=""{kunde}"" />
		<f:render partial=""auftragNewEditFormPart"" arguments=""{newAuftrag: newAuftrag}""/>	
	<f:form.submit value=""Auftrag Anlegen"" />
</f:form>
</pre>

This results to the exception: *#1243325768: No value found for key ""F3\Fluid\ViewHelpers\FormViewHelper->formName""* "
4279,TYPO3.Flow,Feature,"",Resolved,Should have,setfilepermissions.sh should give a hint on from where to call it,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,Core,1.0 alpha 4,2009-08-20,"","",100,2009-08-20 05:44,"","",1796700,"","",setfilepermissions.sh only works if the current directory is the FLOW3 root path. The script should give a clear hint on how to use it if directories like ./Packages or ./Data don't exist.
4280,TYPO3.Welcome,Bug,"",Resolved,Should have,Welcome screen should warn if context != Development,Robert Lemke,Karsten Dambekalns,2010-10-20 05:48,"",1.0.0 alpha 4,2009-08-20,"","",100,2009-08-20 05:55,"","",2739900,"","","The steps mentioned on the welcome screen only work if FLOW3 runs in Development context (because the caches are not flushed automatically in Production context).

There should be a warning if FLOW3 runs in Production context."
4287,TYPO3.Fluid,Bug,"",Resolved,Must have,Missing reference in ext_autoload.php,Xavier Perseguers,"",2010-10-20 05:44,"","",2009-08-21,"",0.00,100,2009-08-21 02:45,"","",2599800,"","","Index: ext_autoload.php
===================================================================
--- ext_autoload.php    (revision 1123)
+++ ext_autoload.php    (working copy)
@@ -38,6 +38,7 @@
     'tx_fluid_core_viewhelper_facets_postparseinterface' => $extensionClassesPath . 'Core/ViewHelper/Facets/PostParseInterface.php',
     'tx_fluid_service_docbookgenerator' => $extensionClassesPath . 'Service/DocbookGenerator.php',
     'tx_fluid_view_templateview' => $extensionClassesPath . 'View/TemplateView.php',
+    'tx_fluid_view_templateviewinterface' => $extensionClassesPath . 'View/TemplateViewInterface.php',
     'tx_fluid_viewhelpers_aliasviewhelper' => $extensionClassesPath . 'ViewHelpers/AliasViewHelper.php',
     'tx_fluid_viewhelpers_baseviewhelper' => $extensionClassesPath . 'ViewHelpers/BaseViewHelper.php',
     'tx_fluid_viewhelpers_cobjectviewhelper' => $extensionClassesPath . 'ViewHelpers/CObjectViewHelper.php', "
4328,TYPO3.Flow,Feature,"",Resolved,Must have,Throw exception when Repository->update() is called with a non-clone,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Persistence,1.0 alpha 5,2009-08-26,"","",100,2009-08-26 03:23,"","",1797350,"","","From the FLOW3 IRC channel:
_wenn ich zum beispiel einen string ändern will muss ich ja $folder->setTitle(Text) anwenden und dann das repository->update($folder)_

This misunderstanding needs to be circumvented, a message should be given."
4333,TYPO3.Flow,Feature,"",Resolved,Should have,Implement log rotation,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,Log,1.0 alpha 5,2009-08-26,"","",100,2009-08-26 06:01,"","",1797300,"","",The Log framework should be able to rotate logs after x days or if the log file reaches a certain size and keep a defined number of old log files.
4357,TYPO3.Fluid,Bug,"",Resolved,Must have,A selected object in a form could not be persisted,Jochen Rau,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-08-27,"","",100,2009-08-27 06:08,"","",2599750,"","","Adding a new Blog results in a fatal error:

<pre>
Catchable fatal error:
Argument 1 passed to Tx_BlogExample_Domain_Model_Blog::setAdministrator() must be an instance of
Tx_BlogExample_Domain_Model_Administrator, string given in 
/Users/jocrau/Documents/typoplanet/htdocs/dev/typo3conf/ext/blog_example/Classes/Domain/Model/Blog.php on line 169
</pre>"
4380,TYPO3.Fluid,Feature,"",Resolved,Should have,Implement an ifRole view helper,Andreas Förthner,Andreas Förthner,2010-10-20 05:44,ViewHelpers,"",2009-08-28,"","",0,2009-08-28 10:39,"","",2599700,"","",Analog to the ifAccess view helper the ifRole view helper should render it's contents only if the current user has the specified role(s).
4381,TYPO3.Flow,Bug,"",Resolved,Must have,Resource should be considered as denied if no ACL entry is configured,Andreas Förthner,Andreas Förthner,2010-10-20 05:39,Security,1.0 alpha 4,2009-08-28,"","",100,2009-08-28 10:45,"","",1796650,"","",Currently those resources are ignored in the policy...
4405,TYPO3.Flow,Feature,"",Resolved,Should have,EmptyView is misleading,Bastian Waidelich,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 5,2009-08-31,"","",100,2009-08-31 07:59,"","",1797250,"","","When no template is found, FLOW3 uses \F3\FLOW3\MVC\View\EmptyView as view (see ActionController::resolveView()).
Instead we should use the NotFoundView that was introduced in r2888 to display a more meaningful error to the user.

So instead of:
<pre>
if ($viewObjectName === FALSE) $viewObjectName = 'F3\FLOW3\MVC\View\EmptyView';
</pre>

something like
<pre>
if ($viewObjectName === FALSE) {
	$view = $this->objectManager->getObject('F3\FLOW3\MVC\View\NotFoundView');
	$view->assign('errorMessage', 'dummdidumm');
}
</pre>

Then EmptyView could be removed I guess.."
4406,TYPO3.Flow,Feature,"",Resolved,Must have,Implement caching mechanism for configuration files,Robert Lemke,Robert Lemke,2010-10-20 05:39,Configuration,1.0 alpha 4,2009-08-31,"","",100,2009-08-31 09:40,"","",1796600,"","","Currently the YAML configuration files are parsed on each request. They should rather be compiled into one fast-to-include PHP file, at least in production context."
4407,TYPO3.Flow,Bug,"",Resolved,Should have,flow3 script cannot flush caches,Robert Lemke,Robert Lemke,2011-04-15 15:58,Cache,1.0 beta 1,2009-08-31,"","",100,2009-08-31 11:28,"","",1810900,"","","When trying to flush all caches with the flow3 command line script, FLOW3 does instead of flushing the caches output an error message:

<pre>
404 Not Found

No controller could be resolved which would match your request.
</pre>
"
4409,TYPO3.Flow,Bug,"",Closed,Should have,@inject comment property isn't working,ziyad saeed,Karsten Dambekalns,2010-10-20 05:39,Object,1.0 alpha 3,2009-08-31,"","",0,2009-08-31 17:39,"","",1795400,"","","In the Getting Started guide, a blog controller is created that has a blogRepository property.
<pre>
/**
 * @var \F3\Blog\Domain\Repository\BlogRepository
 * @inject
 */
protected $blogRepository;</pre>

When the code is run the blogRepository property is null. The blogRepository object isn't being injected, which in turn gives a ""Call to a member function findAll() on a non-object"" error.

I'm posting this issue here cause no one seems to be monitoring the getting started issue tracker"
4426,TYPO3.Flow,Feature,"",Resolved,Should have,Provide Windows compatible version of the FLOW3 Command Line Tool,Bastian Waidelich,Bastian Waidelich,2011-08-04 02:40,Core,1.0 beta 1,"","","",100,2009-09-03 07:50,"","",1781450,"","","FLOW3 distribution comes with an easy to use command line tool (see http://flow3.typo3.org/documentation/tutorials/getting-started/gettingstarted.kickstart/#gettingstarted.kickstart.commandlinetool).
For the good old Windows users we should supply a similar batch version of the script."
4441,TYPO3.Flow,Bug,"",Resolved,Should have,Route does not correctly replace domain objects in resolve(),Bastian Waidelich,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 4,2009-09-03,"","",100,2009-09-03 14:13,"","",1796550,"","","At the end of \F3\FLOW3\MVC\Web\Routing\Route::resolve() remaining objects are transformed into respective UUIDs.
But there are two issues with that:

*1. values are replaced directly instead of creating an array:*
<pre>
$route->resolves(array('someObject' => $someObject));
</pre>
expected: @?someObject[__identity]=XXXX-XXXX-XXXX-XXXX@ 
actual: @?someObject=XXXX-XXXX-XXXX-XXXX@

-

*2. This does not work for multi dimensional arrays:*
<pre>
$route->resolves(array('foo' => array('someObject' => $someObject)));
</pre>
expected: @?foo[someObject][__identity]=XXXX-XXXX-XXXX-XXXX@
actual: _Exception(!)_

-
 
This might be a chance to _forwardport_ something from extbase. There we have
<pre>
protected function convertDomainObjectsToIdentityArrays(array $arguments) {
	foreach ($arguments as $argumentKey => $argumentValue) {
		if ($argumentValue instanceof Tx_Extbase_DomainObject_AbstractEntity) {
			$arguments[$argumentKey] = array('uid' => $argumentValue->getUid());
		} elseif (is_array($argumentValue)) {
			$arguments[$argumentKey] = $this->convertDomainObjectsToIdentityArrays($argumentValue);
		}
	}
	return $arguments;
}
</pre>
in the new UriBuilder.

Patch follows"
4442,TYPO3.Fluid,Task,"",Resolved,Should have,Rename TagBuilder->render() to TagBuilder->build(),Bastian Waidelich,Bastian Waidelich,2010-10-20 05:44,Core,"",2009-09-03,"","",100,2009-09-03 15:36,"","",21150,"","",The render() method might be a bit misleading. The default name for the main method of a Builder is... build().
4443,TYPO3.Flow,Bug,"",Resolved,Should have,Mapping to plain arrays results in empty arrays,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Property,1.0 alpha 4,2009-09-03,"","",100,2009-09-03 17:29,"","",1796500,"","","When mapping an array or object to a plain array, the target array is unchanged, because it is not passed by reference automatically, like objects are."
4445,TYPO3.Flow,Feature,"",Resolved,Should have,setfilepermissions.sh should check if parent directories are accessible,Robert Lemke,Karsten Dambekalns,2010-10-20 05:39,Core,1.0 alpha 7,2009-09-04,"","",100,2009-09-04 04:31,"","",1800000,"","","A very common grinch is the access rights of parent directories: If FLOW3 is installed in /var/www/foo/bar/FLOW3, all of these directories need to be executable for the command line or web user. If this is not the case, the index.php won't even be able to include the bootsrap script etc.

We could warn the user about this fact while he runs the setfilepermissions script: it should check if all parent directories are also accessible by the given users (if that is possible)."
4454,TYPO3.Flow,Bug,"",Resolved,Must have,FileMonitor does not detect new files,Robert Lemke,Robert Lemke,2010-10-20 05:39,Monitor,1.0 alpha 4,2009-09-04,"","",100,2009-09-04 10:20,"","",1796450,"","","If the FileMonitor monitors a directory (registered with monitorDirectory()) it should detect new files. However, it doesn't.
As soon as the FileMonitor's cache is flushed, the new files are detected though."
4457,TYPO3.Flow,Feature,"",Resolved,Should have,Improve UriBuilder,Bastian Waidelich,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 4,2009-09-04,"","",100,2009-09-04 13:37,"","",1796400,"","","As discussed in the mailing lists, the current UriBuilder is not really flexible and extensible.
Besides it does not follow the FLOW3 CGL (""URIBuilder"" should be ""UriBuilder"", ""URIFor()"" => ""uriFor()"").

In Extbase the UriBuilder is already rewritten (See #3981). These changes need to be ""forward ported"" to FLOW3.

Patch follows.
"
4458,TYPO3.Fluid,Feature,"",Resolved,Could have,Add CycleViewHelper,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,"",2009-09-04,"","",100,2009-09-04 14:08,"","",2599650,"","","A cycle view helper is useful for iterating through a predefined set of values in loops. E.g.:
<pre>
<f:cycle values=""{0: 'odd', 1: 'even'}"" as=""zebraClass"">
	<li class=""{zebraClass}"">{foo}</li>
</f:cycle>
</pre>

Patch follows."
4459,TYPO3.Fluid,Feature,"",Resolved,Could have,Add PaddingViewHelper,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,"",2009-09-04,"","",100,2009-09-04 14:10,"","",2599600,"","","A PaddingViewHelper can be useful to format strings, especially in text/xml templates. It is a wrapper for PHPs str_pad function and can be used like this:
<pre>
<f:format.padding padLength=""10"" padString=""-="">TYPO3</f:format.padding>
</pre>
->
<pre>
TYPO3-=-=-
</pre>

Patch follows."
4460,TYPO3.Fluid,Feature,"",Resolved,Should have,Add GroupedForViewHelper,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,"",2009-09-04,"","",100,2009-09-04 14:27,"","",2599550,"","","Provide a view helper that allows to iterate through values and group the result by a given key.
This might look like:
<pre>
<f:groupedFor each=""{fruits}"" as=""fruitsOfThisColor"" groupBy=""color"" groupKey=""theColor"">
	<h3>{theColor}:</h3>
	<f:for each=""{fruitsOfThisColor}"" as=""fruit"">
		{fruit.name}<br />
	</f:for>
</f:groupedFor>
</pre>

Patch follows."
4469,TYPO3.Flow,Feature,"",Resolved,Should have,Implement a central command line controller,Robert Lemke,Bastian Waidelich,2011-06-28 06:34,Core,1.0 beta 1,2009-09-07,"","",100,2009-09-07 03:04,"","",1781400,"","","Currently FLOW3 provides a command line interface through the flow3.sh bash script which has a fixed support for certain commands. This logic of this script should be extracted and improved so that we'll end up with very lean flow3.sh and flow3.bat scripts which just pass the command line arguments to a FLOW3CLI.php script.

The FLOW3CLI should allow for simple registration of additional commands so that third party packages can also take advantage of the interface. In the long run this script could also provide an interactive shell which allows for executing the available commands."
4472,TYPO3.Fluid,Feature,"",Closed,Won't have this time,View helper namespaces should be configurable,Bastian Waidelich,"",2010-10-20 05:44,Core,"",2009-09-07,"","",0,2009-09-07 05:29,"","",2599500,"","","Currently custom view helper namespaces can be defined _in_ the templates like
@{namespace ns=\New\Namespace}@

IMO it would be great to be able to configure the namespace in your package/extension configurations. That way you could easily replace custom or even fluid view helpers with your own implementation without touching the original package/extension.

Maybe we could even implement a fallback mechanism:
<pre>
MyPackage:
  fluid:
    namespaces:
      f:
        F3\MyOtherPackage\ViewHelpers
        F3\Fluid\ViewHelpers
      blog:
        F3\MyOtherPackage\ViewHelpers
</pre>

Now @<f:link.action />@ would try to instantiate @\F3\MyOtherPackage\ViewHelpers\Link\ActionViewHelper.php@ and if nout found use @\F3\Fluid\ViewHelpers\Link\ActionViewHelper.php@

If that fallback mechanism is too complex, it might be a possibility to override only single view helpers..
AFAIK, in FLOW3 this is already possible by adding something like
<pre>
F3\Fluid\ViewHelpers\Link\ActionViewHelper:
  className: F3\MyOtherPackage\ViewHelpers\Link\ActionViewHelper
</pre>

to @Objects.yaml@. But I'm not sure if that would be the right approach here..


"
4487,TYPO3.Flow,Bug,"",Resolved,Should have,New Documentation for Xampp,ziyad saeed,Irene Höppner,2010-10-20 05:39,- Documentation -,1.0 alpha 5,2009-09-08,"","",0,2009-09-08 06:57,"","",1797200,"","",The version of xampp available already comes with php 5.3. The documentation need to remove lot of information regarding installing php 5.3
4488,TYPO3.Fluid,Bug,"",Resolved,Must have,SubmitViewHelper ignores name/value attributes,Morton Jonuschat,Bastian Waidelich,2010-10-20 05:44,"","",2009-09-08,"","",100,2009-09-08 08:05,"","",2599450,"","","The Fluid / Form SubmitViewHelper ignores name and/or value attributes given in the tag.

Attached patch fixes this bug.
"
4489,TYPO3.Welcome,Bug,"",Resolved,Should have,FLOW3 welcome page is still wrong,ziyad saeed,Karsten Dambekalns,2010-10-20 05:48,"",1.0.0 alpha 5,2009-09-08,"","",100,2009-09-08 08:44,"","",2740000,"","","Now that alpha4 is released the welcome page for windows is still wrong.
It says that i need to cd into C:\wamp\www\flow3\Public.
The kickstart code it mentions need to be run inside the flow3 directory not inside the Public directory.
There is not public directory anyway. Its renamed to Web."
4492,TYPO3.Fluid,Bug,"",Resolved,Must have,ViewHelper render method arguments not initialized/passed correctly,Frans van der Veen,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-09-08,"","",100,2009-09-08 10:04,"","",2599400,"","","Hi,

Tx_Fluid_Core_ViewHelper_AbstractViewHelper::prepareArguments initializes arguments in the wrong order, or so it appears. This causes the arguments passed to the render() method not having any value.

First registerRenderMethodArguments is called (which set the flag isMethodParameter for the arguments), then initializeArguments is called, which if it has arguments with the same name will overwrite the arguments created by registerRenderMethodArguments.

You can test by changing the 'value' or 'name' parameter in a form.submit tag:
<f:form.submit value=""Gogogo!"" />

Solution: change the order in which initializeArguments and registerRenderMethodArguments() are called in Tx_Fluid_Core_ViewHelper_AbstractViewHelper::prepareArguments. 
(It appears to be working for the form.submit ViewHelper when I do so)

Regards,

Frans"
4518,TYPO3.Flow,Task,"",Resolved,Should have,Installation documentation patch,ziyad saeed,Karsten Dambekalns,2010-10-20 05:39,- Documentation -,1.0 alpha 5,2009-09-09,"","",100,2009-09-09 12:49,"","",21350,"","",Here is the patch for installation.xml
4551,TYPO3.Welcome,Bug,"",Resolved,Must have,Commandline-code for windows is not correct (has patch),Irene Höppner,Karsten Dambekalns,2010-10-20 05:48,"",1.0.0 alpha 5,2009-09-10,"","",100,2009-09-10 09:20,"","",2739950,"","",The welcome screen shows the wrong commandline commands for windows. The patch contains the correct commands.
4596,TYPO3.Flow,Bug,"",Resolved,Should have,DEVELOPMENT or Development,ziyad saeed,Karsten Dambekalns,2010-10-20 05:39,Core,1.0 alpha 5,2009-09-11,"","",100,2009-09-11 17:41,"","",1797150,"","","Flow3 defaults to production mode if you use DEVELOPMENT as the context.
the context should be case insensitive."
4602,TYPO3.Flow,Bug,"",Resolved,Must have,memcache doesn't work,Irene Höppner,Karsten Dambekalns,2010-10-20 05:39,Cache,1.0 alpha 5,2009-09-12,"","",100,2009-09-12 09:04,"","",1797100,"","","I tried to use memcache for parts of the cache.

Added the following configuration to Caches.yaml:

<pre>
Default:
  backend: F3\FLW3\Cache\Backend\MemcachedBackend
  backendOptions:
    defaultLifetime: 0
    Servers: [localhost:11211]
</pre>

This error occurs:
<pre>
Fatal error: Call to a member function getScriptPathAndFilename() on a non-object in C:\Programme\xampp\htdocs\f3\intranet\Packages\Framework\FLOW3\Classes\Cache\Backend\MemcachedBackend.php on line 175
</pre>

To check, wether the memcached-server is up and running, I used the following PHP-script:

<pre>
<?php

$memcache = new Memcache;
$memcache->connect('localhost', 11211) or die (""Could not connect"");

$version = $memcache->getVersion();
echo ""Server's version: "".$version.""<br/>\n"";

$tmp_object = new stdClass;
$tmp_object->str_attr = 'test';
$tmp_object->int_attr = 123;

$memcache->set('key', $tmp_object, false, 10) or die (""Failed to save data at the server"");
echo ""Store data in the cache (data will expire in 10 seconds)<br/>\n"";

$get_result = $memcache->get('key');
echo ""Data from the cache:<br/>\n"";

var_dump($get_result);

?>
</pre>

The result is:
<pre>
Server's version: 1.2.1
Store data in the cache (data will expire in 10 seconds)
Data from the cache:
object(stdClass)#3 (2) { [""str_attr""]=> string(4) ""test"" [""int_attr""]=> int(123) }
</pre> "
4606,TYPO3.Flow,Bug,"",Resolved,-- undefined --,Spelling error in FLOW3's Package.xml,Andreas Wagner,Karsten Dambekalns,2010-10-20 05:39,"",1.0 alpha 5,2009-09-12,"","",100,2009-09-12 16:56,"","",1797050,"","","The description in Packages/Framework/FLOW3/Meta/Package.xml reads

""FLOW3 is an enterprise PHP application framework making extensive use of software development paradrigms that had not been brought to PHP programming yet.""

There is an ""r"" too much in the word ""paradigms""."
4631,TYPO3.Flow,Bug,"",Resolved,Should have,Using non-domain-objects as arguments should also work.,Sebastian Kurfuerst,Sebastian Kurfuerst,2010-10-20 05:39,MVC,"",2009-09-15,"","",100,2009-09-15 07:33,"","",1781350,"","","It should be possible to have an Object bound to a form which does not have the @entity or @valueobject annotation.

Imagine a case when you have a complex form and want to bind a form-object to that - which should not be persisted in the database."
4638,TYPO3.Flow,Bug,"",Resolved,Should have,Refactor flash message implementation to use session scope,Sebastian Kurfuerst,Sebastian Kurfuerst,2010-10-20 05:39,"","",2009-09-15,"","",100,2009-09-15 09:24,"","",1781300,"","","We should move flash message handling from AbstractController to some separate object which is in the session scope and thus automatically persisted.
Additionally, this object can be put into the ControllerContext, so the API inside the Templates is nicer."
4648,TYPO3.Fluid,Feature,"",Resolved,Should have,Enhance the textbox viewhelpter to be capable of type=password,Nikolas Hagelstein,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-09-16,"","",100,2009-09-16 05:39,"","",2599350,"","","Currently it's not possible to use the textbox viewhelper to render a password (i.e. <input type=""password""...) textfield.
Due to possible changes of namespaces during develepment specifying it by ""hand"" is very error-prone thing.
"
4666,TYPO3.Flow,Bug,"",Resolved,Must have,Reflection service broken,Bastian Waidelich,Karsten Dambekalns,2010-10-20 05:39,Reflection,1.0 alpha 5,2009-09-17,"","",100,2009-09-17 04:30,"","",1797000,"","","Since r3183 FLOW3s reflection service seems to be broken.
in @F3\FLOW3\Reflection\Service::reflectEmergedClasses()@ we iterate through registered classes and call @buildClassSchemata()@ for all classes tagged as @entity@ or @valueobject@.
The problem @isClassTaggedWith($className, 'entity')@ will always return FALSE cause the Service is not initalized at that time."
4667,TYPO3.Fluid,Bug,"",Resolved,Should have,Error class magic only works for object properties....,Nikolas Hagelstein,"",2011-05-05 12:30,ViewHelpers,"",2009-09-17,"","",0,2009-09-17 04:56,"","",2599300,"","","Like:
<pre>
<f:form.textbox property=""whatever"" errorClass=""iFail"" />
</pre>
Should work for:
<pre>
<f:form.textbox name=""whatever"" errorClass=""iFail"" />
</pre>
as well."
4668,TYPO3.Flow,Feature,"",Rejected,Should have,Validation improvement,Nikolas Hagelstein,Karsten Dambekalns,2010-10-20 05:39,Validation,1.0 alpha 5,2009-09-17,"","",0,2009-09-17 05:23,"","",1796950,"","","Sometimes it makes sense to stop validation after the first failure.
E.g. 
@validation NotEmpty, EmailAddress

In this case it makes no sense to face the user with both errorMessages. 

Though this can be resolved with a custom ViewHelper it would be nice if there would be a suitable annotation.
"
4704,TYPO3.Fluid,Feature,"",New,Should have,Improve parsing exception messages,Bastian Waidelich,"",2012-07-11 13:00,Core,"",2009-09-20,"","",0,2009-09-20 10:30,"","",2599250,"","",Fluid Parsing Exceptions should contain the path and linenumber of the affected template for easier bug fixing.
4740,TYPO3.Flow,Bug,"",Resolved,Must have,Default session save path should be per environment,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Session,1.0 alpha 5,2009-09-23,"","",100,2009-09-23 07:25,"","",1796900,"","",After the resolution for #1663 there can be permission issues between CLI and Web due to the shared session directory.
4755,TYPO3.Flow,Bug,"",Resolved,Must have,findAll() does not return the just before added item.,Falk Kühnel,Karsten Dambekalns,2010-10-20 05:39,Persistence,1.0 alpha 5,2009-09-24,"","",100,2009-09-24 10:11,"","",1796850,"","","When adding an item to a repository and immediately thereafter calling the findAll() method, the just added items are not returned.

<pre>
$customer = $this->objectFactory->create('F3\Projects\Domain\Model\Customer');
$customer->setFirstName($this->rand_str(rand(5,32)));
$customer->setLastName($this->rand_str(rand(5,32)));
$this->customerRepository->add($customer);
$this->view->assign('customers', $this->customerRepository->findAll());
</pre>

Happens with revision 3915 on windows vista. Havent tried anything else."
4794,TYPO3.Fluid,Bug,"",Resolved,Must have,Translator view helper does not work when no BE user is logged in,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,"",2009-09-28,"","",100,2009-09-28 16:54,"","",2599200,"","",Tx_Fluid_ViewHelpers_TranslateViewHelper depends on $GLOBALS['LANG'] which is only available in BE mode (or in FE mode with logged in BE user)
4799,TYPO3.Flow,Bug,"",Resolved,Should have,"MAC, XAMPP and FLOW3",Falk Kühnel,Karsten Dambekalns,2010-10-20 05:39,- Documentation -,1.0 alpha 5,2009-09-29,"","",100,2009-09-29 03:23,"","",1796800,"","","With XAMP 1.7.2a on the MAC, FLOW3 is not running since the PHP parser complains about the declare statements in all the php files.

It seems to have to do with a faulty implementation of the zend string optimizer, but i am not sure.

Just leaving the info here so you might find it, if you run into it."
4824,TYPO3.Flow,Task,"",Resolved,Could have,Remove LoggerInterface::SEVERITY_* and use LOG_* instead,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Log,1.0 alpha 5,2009-09-30,"","",100,2009-09-30 06:01,"","",22150,"","",.
4835,TYPO3.Flow,Task,"",Resolved,Should have,Rename FlashMessages to FlashMessageContainer,Karsten Dambekalns,Robert Lemke,2010-10-20 05:39,MVC,1.0 alpha 5,2009-09-30,"","",100,2009-09-30 15:51,"","",22200,"","",... and adjust dependent code as needed.
4847,TYPO3.Kickstart,Bug,"",Resolved,Could have,Lowercase package name causes an unexplained exception when using kickstart package,Daniel Hofstetter,Karsten Dambekalns,2010-10-20 05:48,"",1.0.0 alpha 7,2009-10-01,"","",100,2009-10-01 10:51,"","",2740450,"","","I'm currently following the ""Getting started"" tutorial and while creating my first package, I used, by accident, ""blog"" as package name (instead of ""Blog"" as in the tutorial):
<pre>
./flow3 kickstart package blog
</pre>
This causes the following error:
<pre>
Uncaught FLOW3 Exception #1220722210: The package key ""blog"" is invalid
thrown in file /home/dho/projects/flowtutorial/Packages/Framework/FLOW3/Classes/Package/Manager.php
in line 238
</pre>
It would be helpful to mention what the criteria are for a valid key. 

I'm using the ""Getting started"" package with flow3 alpha 4."
4850,TYPO3.Flow,Bug,"",Resolved,Must have,errorAction() of the MVC ActionController doesn't work correct,Benjamin Albrecht old 2,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 6,2009-10-01,"","",100,2009-10-01 14:07,"","",1798700,"","","Line 350 of the file ActionController.php doesn't work.

There is the old class ""flashMessages"" in use.

<pre>
$this->flashMessages->add($errorFlashMessage);
</pre>

I've changed this line into
<pre>
$this->flashMessageContainer->add($errorFlashMessage);
</pre>

and the errorAction works again."
4855,TYPO3.Flow,Task,"",Closed,Should have,Investigate APC slam problem,Karsten Dambekalns,Karsten Dambekalns,2011-07-06 10:09,Cache,"",2009-10-02,"","",0,2009-10-02 04:01,"","",22250,"","","See http://t3.dotgnu.info/blog/php/user-cache-timebomb for the problem and http://pecl.php.net/bugs/bug.php?id=16814 as well as http://pecl.php.net/bugs/bug.php?id=16843 for the ""PHP solution"".

Do we need to consider the basic problem and change the way cache entries expire? Or is this solved by our site lock anyway (if it is enabled again)?"
4856,TYPO3.Flow,Bug,"",Resolved,Should have,Use of uninitialized $exception variable in APCBackend->set(),Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Cache,1.0 alpha 6,2009-10-02,"","",100,2009-10-02 04:44,"","",1798650,"","",.
4857,TYPO3.Flow,Bug,"",Resolved,Must have,ValidatorResolver tries to use data type as validator type,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Validation,1.0 alpha 6,2009-10-02,"","",100,2009-10-02 04:49,"","",1798600,"","","When buildMethodArgumentsValidatorConjunctions() iterates over method arguments, it tries to get a validator for each type. This works for simple types, but for objects the class name is used as validator directly. This is a) nonsense and b) causes circular dependency problems to begin with.

The problem is caused @$typeValidator = $this->createValidator($methodParameter['type']);@, since createValidator() expects to get either one of the internal validator shorthands or the fully qualified name of a validator - but not a data type!"
4859,TYPO3.Flow,Bug,"",Resolved,Should have,findOneBy*() in persistence repository does not limit result set size,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Persistence,1.0 alpha 6,2009-10-02,"","",100,2009-10-02 07:20,"","",1798550,"","","The @findOneBy*()@ methods should obviously limit the result set size to, well, 1."
4870,TYPO3.Flow,Bug,"",Resolved,Should have,Tests with RSAWalletServicePHP fail on Windows,David Bruehlmeier,Karsten Dambekalns,2010-10-20 05:39,Security,1.0 alpha 6,2009-10-02,"","",100,2009-10-02 14:56,"","",1798500,"","","<pre>
Error in encryptingAndDecryptingBasicallyWorks Detail
E:\Sources\FLOW3\Packages\Framework\FLOW3\Classes\Security\Cryptography\RSAWalletServicePHP.php:232
Warning: openssl_pkey_get_details() expects parameter 1 to be resource, boolean given in E:\Sources\FLOW3\Packages\Framework\FLOW3\Classes\Security\Cryptography\RSAWalletServicePHP.php line 232
Error in checkRSAEncryptedPasswordReturnsTrueForACorrectPassword Detail
E:\Sources\FLOW3\Packages\Framework\FLOW3\Classes\Security\Cryptography\RSAWalletServicePHP.php:232
Warning: openssl_pkey_get_details() expects parameter 1 to be resource, boolean given in E:\Sources\FLOW3\Packages\Framework\FLOW3\Classes\Security\Cryptography\RSAWalletServicePHP.php line 232
Error in checkRSAEncryptedPasswordReturnsFalseForAnIncorrectPassword Detail
E:\Sources\FLOW3\Packages\Framework\FLOW3\Classes\Security\Cryptography\RSAWalletServicePHP.php:232
Warning: openssl_pkey_get_details() expects parameter 1 to be resource, boolean given in E:\Sources\FLOW3\Packages\Framework\FLOW3\Classes\Security\Cryptography\RSAWalletServicePHP.php line 232
Error in decryptingWithAKeypairUUIDMarkedForPasswordUsageThrowsAnException Detail
E:\Sources\FLOW3\Packages\Framework\FLOW3\Classes\Security\Cryptography\RSAWalletServicePHP.php:232
Warning: openssl_pkey_get_details() expects parameter 1 to be resource, boolean given in E:\Sources\FLOW3\Packages\Framework\FLOW3\Classes\Security\Cryptography\RSAWalletServicePHP.php line 232
</pre>

My Setup
* Apache/2.2.12 (Win32) DAV/2 mod_ssl/2.2.12 OpenSSL/0.9.8k mod_autoindex_color PHP/5.3.0 mod_perl/2.0.4 Perl/v5.10.0 
* Windows NT SP3
"
4931,TYPO3.Flow,Task,"",Closed,Must have,Check correct behaviour of object replacement in persistence,Karsten Dambekalns,Karsten Dambekalns,2011-04-29 15:43,Persistence,"",2010-03-08,"",8.00,50,2009-10-07 09:06,"","",22600,8.00,"","When an object that is a persisted entity is cloned, we (through AOP) set a cloned flag -and drop the memorized clean state of the object-. Why is that flag still true after calling Repository->update() was the original question. It turns out we need to check the correct behaviour of the persistence in (at least) the following cases:

* cloned object is given to update(), then to add()
* cloned object is given to add(), then update()
* cloned object is given to replace(), what about doing this multiple times?
* the cloned object is given to update() and/or replace(), now the original is in turn added again

Part of the problem is to find out which of those scenarious should be allowed and what the correct behavior would be...

The involved data that is involved with this is (at least):

* FLOW3_Persistence_Entity_UUID
* -FLOW3_Persistence_cleanProperties-
* FLOW3_Persistence_clone

-Along the way we probably need to make sure the memorized clean properties are not thrown away when cloning, because after an update() (or replace()) call we need those properties for correct persistence (and because of my planned solution for #4317).-

Also make sure entities given to replace() get the new UUID also in their internals!"
4952,TYPO3.Flow,Bug,"",Resolved,Should have,Reflection cache of subclasses are not flushed if parent classes change,Robert Lemke,Robert Lemke,2010-10-20 05:39,Reflection,1.0 alpha 6,2009-10-08,"","",100,2009-10-08 08:27,"","",1798450,"","","If a parent class is changed (e.g. new properties are added, properties removed, new methods ...) the reflection cache must also be flushed for all classes inheriting this class directly or indirectly. That is not the case currently."
4960,TYPO3.Flow,Feature,"",Resolved,Must have,There should be a Request hash check when objects are modified,Sebastian Kurfuerst,Sebastian Kurfuerst,2010-10-20 05:39,Security,"",2009-10-09,"","",100,2009-10-09 08:50,"","",1781250,"","","h2. Scenario:

The developer programmed a form to edit a ""Customer"", and he can select one role from a dropdown list.
This field will have the following name: customer[role], and its expected value will be a UUID.

Now, if an attacker replaces this form field by some fields which are named like:
customer[role][__identity] = ...
customer[role][isAdministrator] = TRUE
... he is able to completely change related domain objects which is like SQL-Injections ""built right into the framework"". Nice, eh? :-)

h2. How to solve this issue?

The general idea: If an object is _modified_, make sure that the appropriate form fields have been rendered on the last request. Else, it might be an attack.

h2. Solution

We build a list of all form fields which can be submitted. This list is signed/hashed (with a private key), and the list and the hash of the list are sent in a parameter called __hmac to the server as well.
If the parameter __hmac is set, it verifies the signature and checks that all submitted fields are also inside the form field list. If this is the case, the parameter ""hmacVerified"" inside the Request object is set to TRUE.

Remember we only wanted to enable this feature when data was _modified_? That's why we modified the Argument to remember the _origin_ of the data (which could be directly from the client, from the persistence layer but unmodified, from the persistence layer and modified, and a new object).
If any argument has been mapped with the cases ""persistence layer and modified"" and ""new object"", we make sure the HMAC was validated correctly. If the HMAC was not validated correctly, an exception is thrown.

h2. How to disable it

For building public APIs, a new annotation @dontverifyrequesthash has been introduced. If you annotate your action with this annotation, no HMAC error will be thrown at all, but you have to care about such security issues yourself."
4967,TYPO3.Fluid,Bug,"",Closed,Must have,Missing Event type onchange,Markus Dreyer,Jochen Rau,2010-10-20 05:44,"","",2009-10-11,"","",0,2009-10-11 06:39,"","",2599150,"","",After Jochen added the event Handler tags in TagBasedViewHelper I noticed that the onchange Event is missing.
4968,TYPO3.Fluid,Feature,"",Resolved,Should have,Sorting by OptionLabel for Selectbox,Markus Dreyer,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,"",2009-10-11,"","",100,2009-10-11 06:50,"","",2599100,"","","I would like to have a sorting option for selectboxes.

sometihng like:

@$this->registerArgument('sortByOptionLabel', 'boolean', 'If true, List will be sorted by label.');@

and in getOptions

@if ($this->arguments->hasArgument('sortByOptionLabel') && $this->arguments['sortByOptionLabel'] === true) {@
@      asort($options);@
@}@
"
4972,TYPO3.Fluid,Bug,"",Closed,Should have,f:format.date does not respect locale.,Nikolas Hagelstein,"",2011-05-06 04:19,"","",2009-10-12,"","",0,2009-10-12 04:04,"","",2599050,"","","The fluid date helper does not respect the locale date format set by e.g. setlocale.
This issue is causef by the fact that the viewhelper makes use of PHP's DateTime object internally which isn't capable of locale time formats. Currently only ""strftime"" seems respect locales."
4984,TYPO3.Fluid,Feature,"",Resolved,Must have,"Add option ""selectAll"" to Select View Helper",Jochen Rau,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,"",2009-10-13,"","",100,2009-10-13 12:15,"","",2599000,"","","Add an option ""selectAll"" to the Select View Helper. If it is set, all options of a multiple selector are preselected by default."
5003,TYPO3.Fluid,Feature,"",Resolved,Should have,Parse output of view helper 'translate',Thomas Deinhamer,Sebastian Kurfuerst,2010-10-20 05:44,ViewHelpers,"",2009-10-15,"","",100,2009-10-15 18:00,"","",2598950,"","","Expecting you have this html/template source...

@<f:translate key=""any"">The quick brown {dog} jumps over the lazy {fox}.</f:translate>@

... the 'variables' in the brackets won't get replaced anymore.
Therefor it's very complicated to print text with inline variables,
which should then get translated.

Or is there any better approach?

Thanks!"
5020,TYPO3.Fluid,Bug,"",Resolved,Must have,SelectViewHelper produces invalid code,Jochen Rau,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,"",2009-10-17,"","",100,2009-10-17 07:48,"","",2598900,"","","The Select View Helper produces invalid code with strange output, if the value of the attribute ""options"" is empty. This is caused by the lack of at least one OPTION element.

""A SELECT element must contain at least one OPTION element.""
http://www.w3.org/TR/html4/interact/forms.html#h-17.6 "
5033,TYPO3.Fluid,Feature,"",Resolved,Must have,Improve Shorthand Syntax of ViewHelpers,Sebastian Kurfuerst,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-10-19,"","",100,2009-10-19 04:29,"","",2598850,"","","h1. Proposal for shorthand syntax

The goal of this RFC is to propose a re-done shorthand syntax for fluid after some real-world usage.

h2. Current situation

Currently, we refer to ""shorthand syntax"" as another way to call a ViewHelper.

Here, there is a basic example for this:
<pre>{f:bla.blubb(""unnamed argument"" a=""b"" c=""42"" d=""{object}"")}</pre>
This is equivalent to the following:
<pre><f:bla.blubb a=""b"" c=""42"" d=""{object}"">unnamed argument</f:bla.blubb></pre>

* Every argument needs to be quoted
* The first argument is the data inside the tag body, in case it is unnamed.
* Nesting of ViewHelpers is arbitrarily possible:
 <pre>{f:outer("" first VH: {f:bla()} second VH: {f:blubb()}"")}</pre>
 (also inside arguments of ViewHelpers, other VHs can be called)
* ViewHelpers can *not* be called inside arrays

Note: Right now, the shorthand syntax is functionally equivalent like the Tag-based ViewHelper syntax.

h2. Problems with current syntax

In the most common use-case, we write things like
<pre>{f:bla(argument=""{blubb}"" argument2=""{bla}"")}</pre>
There, two things feel strange:

* The ""{?}"" syntax feels weird
* It feels strange that the argument needs to be quoted
* There is no comma between the arguments, which feels strange to programmers
* Named arguments in many languages are delimited by :, and not by =. The a=""b"" syntax feels strange.

h2. Draft for new syntax

We remove the ""Shorthand Syntax"" as it has been described above, and instead extend the ""Object Access"" syntax.

The basic object access syntax looks like this:
<pre>{object} {object.bla.blubb}</pre>

Now, we start to *post-process* this value with a ViewHelper:
<pre>{object.bla->f:postProcess()}</pre>

This could also be chained
<pre>{object.bla->f:postProcess()->f:anotherPostProcess()}</pre>

Additionally, if the ViewHelper does NOT work on any object, the first part can be omitted:
<pre>{f:process()->f:postProcess()}</pre>

h3. Arguments

Arguments look like this:
<pre>{f:bla.blubb(arg1: 'literal string', arg2: 42, arg3: object1.bla, arg4:{a1: ""string""})}</pre>

* All arguments have a name
* The syntax is the same as in JSON arrays, just without the outer brackets
* All string arguments are NOT evaluated, but taken as *literal* strings.
* arg1 is a string (which will not be post-processed)
* arg2 is a number
* arg3 is an object accessor
* arg4 is an array

h2. Comparison

The new syntax has the following limitations:
* There is no equivalent of the following: {f:process(""bla"")}, i.e. there is no {""bla""->f:process()} and I would not introduce it.
* Is is NOT possible anymore to use ViewHelpers as arguments in other shorthand ViewHelpers (but I think this is not a problem, as you could use the XML-based syntax where this works)
* It is currently NOT possible to call ViewHelpers in arrays (but this has not been possible before either)

*Please discuss this with us in the TYPO3 5.0 General Mailing list on lists.typo3.org!*"
5047,TYPO3.Flow,Bug,"",Resolved,Must have,Validationresovler regex fails for more than one validator with options,Nikolas Hagelstein,Karsten Dambekalns,2010-10-20 05:39,Validation,1.0 alpha 6,2009-10-20,"","",100,2009-10-20 07:15,"","",1798400,"","","A validation consisting of 2 validations having options makes the regex fail.
E.g.: @validate $whatever stringLength(minimum=""5""), bla(abc=""123"")
Results in (not the options part):

array(1) {
  [0]=>
  array(5) {
    [0]=>
    string(41) ""stringLength(minimum=""5""), bla(abc=""123"")"" 
    [""validatorName""]=>.
    string(12) ""stringLength"" 
    [1]=>
    string(12) ""stringLength"" 
    [""validatorOptions""]=>
    string(27) ""minimum=""5""), bla(abc=""123"""" 
    [2]=>
    string(27) ""minimum=""5""), bla(abc=""123"""" 
  }
}

Changing
const PATTERN_MATCH_VALIDATORS = '/(?:^|,\s*)(?P<validatorName>[a-z0-9\\\\]+)\s*(?:\((?P<validatorOptions>.+)\))?/i';

To
const PATTERN_MATCH_VALIDATORS = '/(?:^|,\s*)(?P<validatorName>[a-z0-9\\\\]+)\s*(?:\((?P<validatorOptions>[^)]+)\))?/i';
Seems to solve this issue. Could anyone please confirm. Thought this might fail as well for something like ""bla(myoptions=""asfasF)""). 

see http://forge.typo3.org/issues/show/5046 as well.
"
5056,TYPO3.Fluid,Bug,"",Closed,-- undefined --,F3\Fluid\Core\RuntimeException thrown in file TemplateVariableContainer.php,Martin Eisengardt,"",2011-05-06 04:14,"","",2009-10-20,"","",0,2009-10-21 01:59,"","",2598800,"","","I tried to build some kind of tree by invoking a section/for recurse.

Template:
<f:section name=""children"">
	<f:for each=""{parent.children}"" as=""child"">
		{indent}
		Child: {child.name}
		- #{child.objectUuid}
		- <a href=""<f:uri.action action='deletenode' arguments=""{parent:parent,child:child}"" />"">Delete</a>
		- <a href=""<f:uri.action action='createnode' arguments=""{parent:child}"" />"">Create new child</a><br />
		<f:render partial=""admin_index_nodelist"" section=""children"" arguments=""{parent:child, indent:indent}"" />
	</f:for>
</f:section>

Tried to remove a variable ""child"" which is not stored in the context!
37 F3\Fluid\Core\ViewHelper\TemplateVariableContainer::remove(""child"")
36 F3\Fluid\ViewHelpers\ForViewHelper::render(array, ""child"", """", boolean)
35 call_user_func_array(array, array)
34 F3\Fluid\Core\Parser\SyntaxTree\ViewHelperNode::evaluate()
33 F3\Fluid\Core\Parser\SyntaxTree\AbstractNode::evaluateChildNodes()
32 F3\Fluid\Core\ViewHelper\AbstractViewHelper::renderChildren()
31 F3\Fluid\ViewHelpers\SectionViewHelper::render()
30 call_user_func_array(array, array)
29 F3\Fluid\Core\Parser\SyntaxTree\ViewHelperNode::evaluate()
28 F3\Fluid\Core\Parser\SyntaxTree\AbstractNode::evaluateChildNodes()
27 F3\Fluid\Core\Parser\SyntaxTree\RootNode::evaluate()
26 F3\Fluid\Core\Parser\ParsingState::render(F3\Fluid\Core\Rendering\RenderingContext)
25 F3\Fluid\View\TemplateView::renderPartial(""admin_index_nodelist"", ""children"", array)
24 F3\Fluid\ViewHelpers\RenderViewHelper::render(""children"", ""admin_index_nodelist"", array)
23 call_user_func_array(array, array)
22 F3\Fluid\Core\Parser\SyntaxTree\ViewHelperNode::evaluate()
21 F3\Fluid\Core\Parser\SyntaxTree\AbstractNode::evaluateChildNodes()
20 F3\Fluid\Core\Parser\SyntaxTree\RootNode::evaluate()
19 F3\Fluid\Core\Parser\ParsingState::render(F3\Fluid\Core\Rendering\RenderingContext)
18 F3\Fluid\View\TemplateView::render()
17 F3\FLOW3\MVC\Controller\ActionController::callActionMethod()
16 F3\FLOW3\MVC\Controller\ActionController::processRequest(F3\FLOW3\MVC\Web\Request, F3\FLOW3\MVC\Web\Response)
15 F3\FLOW3\MVC\Dispatcher::dispatch(F3\FLOW3\MVC\Web\Request, F3\FLOW3\MVC\Web\Response)
14 F3\FLOW3\MVC\Dispatcher_AOPProxy_Development::dispatch(F3\FLOW3\MVC\Web\Request, F3\FLOW3\MVC\Web\Response)
13 call_user_func_array(array, array)
12 F3\FLOW3\MVC\Dispatcher_AOPProxy_Development::FLOW3_AOP_Proxy_invokeJoinPoint(F3\FLOW3\AOP\JoinPoint)
11 F3\FLOW3\AOP\Advice\AdviceChain::proceed(F3\FLOW3\AOP\JoinPoint)
10 F3\FLOW3\Security\Aspect\RequestDispatchingAspect::blockIllegalRequests(F3\FLOW3\AOP\JoinPoint)
9 F3\FLOW3\AOP\Advice\AroundAdvice::invoke(F3\FLOW3\AOP\JoinPoint)
8 F3\FLOW3\AOP\Advice\AdviceChain::proceed(F3\FLOW3\AOP\JoinPoint)
7 F3\FLOW3\Security\Aspect\RequestDispatchingAspect::initializeSecurity(F3\FLOW3\AOP\JoinPoint)
6 F3\FLOW3\AOP\Advice\AroundAdvice::invoke(F3\FLOW3\AOP\JoinPoint)
5 F3\FLOW3\AOP\Advice\AdviceChain::proceed(F3\FLOW3\AOP\JoinPoint)
4 F3\FLOW3\MVC\Dispatcher_AOPProxy_Development::dispatch(F3\FLOW3\MVC\Web\Request, F3\FLOW3\MVC\Web\Response)
3 F3\FLOW3\MVC\Web\RequestHandler::handleRequest()
2 F3\FLOW3\Core\Bootstrap::run()
1 require(""Z:\ws\bgh-typo3\flow3\Packages\Framework\FLOW3\Scripts\FLOW3.php"")

Please include more helpful information!"
5068,TYPO3.Flow,Feature,"",Resolved,Should have,Implement validation for settings (or configuration in general),Robert Lemke,"",2012-06-18 06:37,Configuration,"",2009-10-21,"","",0,2009-10-21 08:21,"","",1781200,"","","Currently settings, which are typically defined in .yaml files, won't be validated by FLOW3. It would, however, be quite convenient for a developer if he could rely on validated settings.

One way to implement this would be by introducing annotations for yaml comments. The developer would then define the expected datatype and additional validators in his Settings.yaml template file and these rules would be enforced while settings are appplied by the Configuration Manager.

Example:
<pre>
Foo:

  /**
   * @type string
   * @validate StringLenth(minimum = ""10"")
   */
  title: ""The title of something""
</pre>
"
5069,TYPO3.Fluid,Bug,"",Resolved,Must have,Fluid Viewhelper link.email misses universal tag attributes,Morton Jonuschat,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,"",2009-10-21,"","",100,2009-10-21 08:36,"","",2598750,"","","The EmailViewHelper misses the initialization of the universal tag attributes. Due to this class and misc other tag attributes doesn't work with this viewhelper and an exception gets thrown instead.

This patch adds a call to initialize the universal tag attributes:

<pre>
--- /var/www/_websites/faa/typo3/sysext/fluid/Classes/ViewHelpers/Link/EmailViewHelper.php	2009-10-01 20:31:08.000000000 +0200
+++ EmailViewHelper.php	2009-10-21 14:33:43.000000000 +0200
@@ -51,6 +51,15 @@
 	 */
 	protected $tagName = 'a';
 
+        /**
+         * Arguments initialization
+         *
+         * @return void
+         */
+        public function initializeArguments() {
+                $this->registerUniversalTagAttributes();
+        }
+
 	/**
 	 * @param string $email The email address to be turned into a link.
 	 * @return string Rendered email link
</pre>"
5075,TYPO3.Fluid,Bug,"",Rejected,Must have,Fluid Viewhelper link.email misses universal tag attributes,Nikolas Hagelstein,"",2010-10-20 05:44,ViewHelpers,"",2009-10-21,"","",0,2009-10-21 11:37,"","",2598700,"","","see:
http://forge.typo3.org/issues/show/5069"
5077,TYPO3.Flow,Bug,"",Resolved,Should have,Getting started tutorial links to old flow3 release,Daniel Hofstetter,Karsten Dambekalns,2010-10-20 05:39,- Documentation -,"",2009-10-21,"","",100,2009-10-21 11:58,"","",1781150,"","","The ""Getting Started Distribution"" link in the downloads section in the sidebar of the ""Getting started tutorial"" links to the old alpha3 of flow3. The link should point to http://sourceforge.net/projects/flow3/files/GettingStarted/1.0.0-alpha5 instead."
5107,TYPO3.Fluid,Bug,"",Resolved,Must have,namespaces names cant have more than one letter,Fernando Arconada,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-10-25,"","",100,2009-10-25 13:10,"","",2598650,"","","namespaces names cant have more than one letter in partials called from the layout

- {namespace z=Tx_foor_ViewHelpers} works
- {namespace za=Tx_Mytube_ViewHelpers} throws exception :#1224254792: 
Namespace could not be resolved. This exception should never be thrown! 
27 Tx_Fluid_Core_Parser_TemplateParser::handler_objectAccessor
(Tx_Fluid_Core_Parser_ParsingState, ""z"", ""a:currentAction()"", """")
"
5108,TYPO3.Fluid,Bug,"",Resolved,Must have,Custom ViewHelper couldnt find validator of its own domain,Fernando Arconada,Sebastian Kurfuerst,2010-10-20 05:44,"","",2009-10-25,"","",100,2009-10-25 13:22,"","",2598600,"","","I've a model Tx_Mytube_Domain_Model_Video 

I have created a ViewHelper
<?php
class Tx_Mytube_ViewHelpers_VideoViewHelper extends 
Tx_Fluid_Core_ViewHelper_AbstractViewHelper {

        /**
	 * Renders the video player
	 *
	 * @param Tx_Mytube_Domain_Model_Video $video
	 * @return string the content of the rendered TypoScript object
	 */
          public function render(Tx_Mytube_Domain_Model_Video $video) {
                return ""AAAAAA"";
          }
          
}
?>

and a template

{namespace mytube=Tx_Mytube_ViewHelpers}
<mytube:video video=""{video}""/>

But i having an exception

#1237900534: No validator found for argument name ""video"" with type 
""Tx_Mytube_Domain_Model_Video"" in view helper 
""Tx_Mytube_ViewHelpers_VideoViewHelper"". "
5118,TYPO3.Fluid,Feature,"",Resolved,Must have,Allow ViewHelpers to be Cascading in Shorthand-Syntax,Steffen Ritter,Sebastian Kurfuerst,2010-10-20 05:44,Core,"",2009-10-26,"","",100,2009-10-26 08:58,"","",2598550,"","","If you want to do something like this:
<pre>
<f:if condition=""{h:isactive(current:singleLetter.uid,number:{h:counting(context:'newslettersLatest',increase:'true',show:'true')})}"">
</pre>

it is not possible since nesting of viewHelpers within shorthand syntax is not possible.

The attached patch adapts the regexes for letting this through and additionally parses the subViewHelpers correctly while working on the ""argument-array"" of the outer ViewHelper.

The attached patch ist against v4 fluid."
5135,TYPO3.Fluid,Task,"",Resolved,Should have,Make method names CGL conform in TemplateParser,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:44,Core,1.0.0 alpha 6,2009-10-27,"","",100,2009-10-27 06:16,"","",23150,"","",The TemplateParser class has a few methods named @handler_*()@ which violates the CGL.
5136,TYPO3.Fluid,Task,"",Resolved,Should have,"Cleanup in unit tests: class_exists, comments and license",Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:44,"",1.0.0 alpha 6,2009-10-27,"","",100,2009-10-27 06:19,"","",23200,"","",A lot of the unit tests contain the TYPO3 4.x license boilerplate and claim to use GPL v2. There are some extra docblocks scattered around and some tests use checks for @class_exists()@ around @require_once()@.
5137,TYPO3.Fluid,Bug,"",Resolved,Must have,ResourceViewHelper not usable with new shorthand syntax,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:44,ViewHelpers,1.0.0 alpha 6,2009-10-27,"","",100,2009-10-27 06:23,"","",2604050,"","","Since the resource to be included has no parameter in the view helper, one cannot use shorthand syntax with it."
5138,TYPO3.Fluid,Bug,"",Resolved,Must have,ResourceViewHelper uses hardcoded path to mirrored resources,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:44,ViewHelpers,1.0.0 alpha 6,2009-10-27,"","",100,2009-10-27 06:26,"","",2604000,"","","The path to the public resource mirror can be configured in FLOW3, so the ResourceViewHelper must follow suit."
5149,TYPO3.Flow,Feature,"",Resolved,Should have,Support counting objects in persistence queries,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Persistence,1.0 alpha 7,2009-10-27,"","",100,2009-10-27 12:04,"","",1799950,"","","To count results currently something like this is needed:
<pre>
function findAllCount() {
  $query = createQuery;
  $videos = $query->execute();
  return count($videos);
}
</pre>

We need something like:
<pre>
function findAllCount() {
  $query = createQuery;
  return $query->count();
}
</pre>

See #4991 for the original request on Extbase."
5150,TYPO3.Fluid,Bug,"",Resolved,Should have,Rewrite ViewHelpers to support new inline notation,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:44,Core,"",2009-10-27,"","",0,2009-10-27 12:14,"","",2598500,"","","With the new syntax for the Fluid inline notation (aka ""shorthand syntax"") implemented with r3333 we introduced a breaking change:
While
<pre>
{f:format.crop('{blog.title}' maxChars=30)}
</pre>

can be transformed to the new syntax like:
<pre>
{blog.title -> f:format.crop(maxChars: 30)}
</pre>

... there currently is no equivalent for:
<pre>
{f:format.crop('static string' maxChars=30)}
</pre>

because we do not allow the syntax to be applied to static strings.
Obviously you can work around this by using the good old tag syntax, but IMO we should just allow:

<pre>
{'static string' -> f:format.crop(maxChars: 30)}
</pre>

The alternative (as discussed with Karsten) would be to rework all affected view helpers so that you could specify the value like this:
<pre>
{f:format.crop(value: 'static string', maxChars: 30)}
</pre>

Anyways, after thinking about this again, I'm in favor of supporting the above.
There are some exceptions though:
e.g.
<pre>{'css/styles.css' -> f:uri.resource()}</pre>
looks pretty odd and I'd change it to
<pre>{f:uri.resource(path: 'css/styles.css')}</pre>

Affected view helpers:
* format.padding
* format.number
* format.currency
* format.crop
* format.date
* format.nl2br
* format.printf
* cObject (v4 only)
* translate (v4 only)
* html (v4 only)

Affected view helpers that IMO don't need support for inline notation:
* alias
* for / groupedFor
* cycle
* if / then / else
* security.ifGrantedAuthority / security.ifAccess (v5 only)
* be.container (v4 only)
* debug (v4 only)
* errors
* section
* form
* link.*"
5152,TYPO3.Flow,Feature,"",Resolved,Should have,Make package settings available in view,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:39,MVC,1.0 alpha 6,2009-10-27,"","",100,2009-10-27 14:08,"","",1798350,"","","to be able to write
<pre>
{settings.someOption}
</pre>
in your (Fluid) template, the settings should be assigned to the view after initialization."
5153,TYPO3.Flow,Bug,"",Resolved,Should have,Routing: RouterCacheAspect only converts objects in the first dimension of route values,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:39,MVC,"",2009-10-27,"","",100,2009-10-27 14:18,"","",1781100,"","","in @Classes/MVC/Web/Routing/Aspect/RouterCachingAspect.php@ we currently have
<pre>
foreach ($routeValues as $k => $v) {
	if (is_object($v)) {
		$routeValues[$k] = spl_object_hash($v);
	}
}
</pre>

But $routeValues could be multi-dimensional, so we'll have to convert objects recursively."
5158,TYPO3.Fluid,Feature,"",Closed,Should have,"Add ""true"" and ""false"" to Fluid syntax",Bastian Waidelich,Sebastian Kurfuerst,2013-06-05 04:40,Core,"",2009-10-28,"","",100,2009-10-28 06:58,"","",2598450,"","","Currently
<pre>
{f:uri.resource(path: 'somePath', absolute: true)}
</pre>
throws an exception, because the @true@ is ""translated"" into @{true}@ internally.
<pre>
{f:uri.resource(path: 'somePath', absolute: 'true')}
</pre>
and
<pre>
{f:uri.resource(path: 'somePath', absolute: 1)}
</pre>
is possible, but it would be nicer to add ""true"" and ""false"" as language constructs."
5171,TYPO3.Flow,Bug,"",Resolved,Should have,Property Mapper: different action required when identity query returned more than 1 object,Manuel Strausz,Karsten Dambekalns,2010-10-20 05:39,Property,1.0 alpha 7,2009-10-29,"","",100,2009-10-29 07:57,"","",1799900,"","","Currently, when \F3\FLOW3\Property\Mapper::findObjectByIdentityProperties finds more than 1 object, it returns FALSE, which is the same as if 0 objects where found. There is an error message added to the mapping results, but this doesn't appear anywhere since an exception is thrown first.
The transformToObject method then throws an exception that is worded like this: ""Querying the repository for the specified object was not successful.""
There should be either a more verbose exception message stating that there was an integrity violation problem detected while querying, or a message added to the system logger to at least give a hint towards the real problem.

Alternatively, only the first found object could be returned and just a warning added to the log.

Even if it should not be possible for more than 1 object with the same identity to exist in the persistence backend, we should still take this case into consideration.
"
5180,TYPO3.Flow,Bug,"",Resolved,Should have,"Documentation: Security Framework, 2 examples have a mistake.",Tommy Seus,Andreas Förthner,2010-10-20 05:39,Security,1.0 alpha 6,2009-10-30,"","",100,2009-10-29 19:50,"","",1798300,"","","I think I have found 2 errors in the documentation.

*Example roles definition in the FLOW3.yaml file*

@Customer:@

a Role without an Array ( [] ) didnt work.

@Invalid argument supplied for foreach

Packages/Framework/FLOW3/Classes/Security/ACL/PolicyService.php:
00265:   foreach ($this->roles[$role]  .....@


*Example for the ifAccess view helper*

<f:security.ifAccess resource=""someResource"">
  This is being shown in case you have access to the given resource
</f:if>

The closing tag is not correct.

--
greetings
Tommy"
5182,TYPO3.Flow,Bug,"",Resolved,Must have,Routing: @action should not be case sensitive,Bastian Waidelich,Karsten Dambekalns,2010-10-20 05:39,MVC,1.0 alpha 6,2009-10-30,"","",100,2009-10-30 08:22,"","",1798250,"","","With the default routing setup, following is (and should be) possible:
<pre>
http://localhost/TestInG/sTanDard/inDeX
</pre>
However
<pre>
http://localhost/testing/standard/Index
</pre>
throws an exception
<pre>
#1218473352: The action name must start with a lower case letter, ""Index"" does not match this criteria.
</pre>

That should not happen.
I suggest to lower case all MVC parameters in the Router already, so that the request contains the same keys independently from the spelling.
Patch follows"
5185,TYPO3.Flow,Bug,"",Resolved,Should have,ValidatorResolver fails to parse @validate annotations with complex options,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:39,Validation,1.0 alpha 6,2009-10-30,"","",100,2009-10-30 11:54,"","",1798200,"","","When options like @Bar(Quux=123, Pax=""a weird \""string\"" with *freaky* stuff"")@ are given, they are not parsed correctly..."
5237,TYPO3.Fluid,Bug,"",Resolved,Should have,fix v4's resource ViewHelper,Sebastian Kurfuerst,"",2010-10-20 05:44,"","",2009-11-05,"","",100,2009-11-05 05:32,"","",2598400,"","","[!!!][+BUGFIX] Fluid (ViewHelpers): FIxed the Resource ViewHelper to be in sync with FLOW3 again. This means that instead of writing <f:uri.resource>...</f:uri.resource>, you write <f:uri.resource path=""..."" /> or {f:uri.resource(path:'...')}."
5256,TYPO3.Fluid,Bug,"",Resolved,Should have,htmlspecialchars() applied inconsistently and of little use,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:44,Core,"",2009-11-06,"","",100,2009-11-06 09:25,"","",2598350,"","","Observations:
* When a value assigned to Fluid is put into a template, it remains untouched (i.e. angle brackets stay as they are and so forth).
* When a value is passed through a ViewHelper, it is by default run through @HtmlSpecialCharsPostProcessor@
** This can be disabled only by using a setting that is not part of the public API and subject to change

So, the processing of values is not consistent. But there is more:

I would expect to be able to use the values assigned as-is, unprocessed. An example are the templates used in the FLOW3 kickstarter, where angle brackets are completely legal and must not be run through @htmlspecialchars()@.

Therefore I propose the following:
* remove the @HtmlSpecialCharsPostProcessor@ (and possible the whole @ObjectAccessorPostProcessorInterface@ and related code)
* add a ViewHelper that can be used with inline syntax to apply escaping for HTML (e.g. like @{value->f:escapeForHtml}@)

That way the user can decide how to make use of the values."
5257,TYPO3.Fluid,Feature,"",Resolved,Should have,Allow generic post-processing of template content,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:44,Core,"",2009-11-06,"","",100,2009-11-06 09:25,"","",2598300,"","","Currently relative URLs to resources must be created using the resource viewhelper. It would be a lot nicer if that was not needed, and this triggered the idea of post processing values.
For the task at hand it would be sufficient to add the needed code to @evaluate()@ in @TextNode@, but that would not be compatible with Fluid for v4 and it seems to be better to come up with a more generic solution.

Thus the following is proposed:
* classes implementing a certain interface can be registered with Fluid
* each class can be registered to act on only certain types of syntax tree nodes
* after a template is parsed those processors are asked to do their work on the matching nodes

That would allow to plug in a processor to adjust resource URLs as well as apply HTML escaping on all text nodes (see #5256)"
5301,TYPO3.Fluid,Bug,"",Closed,Must have,Select with option multiple throws Fatal Error,Jochen Rau,Sebastian Kurfuerst,2010-10-20 05:44,ViewHelpers,"",2009-11-10,"","",0,2009-11-10 03:58,"","",2598250,"","","The following code results in a fatal error:

<f:form.select id=""categories"" property=""categories"" options=""{categories}"" multiple=""multiple"">

The error message is:

The form field name ""[]"" is invalid. Reason: ""[]"" used not as last argument."
5440,TYPO3.Flow,Task,"",Resolved,Should have,Security should have its own configuration file,Robert Lemke,Andreas Förthner,2010-10-20 05:40,Configuration,1.0 alpha 8,2009-11-19,"","",100,2009-11-19 10:40,"","",23900,"","","Currently all security related options are configured in the FLOW3.yaml configuration file. As this configuration will become more extensive in the future and justifies its own class, we should introduce setting files called ""Security.yaml"" and move all security related options to them.
"
5442,TYPO3.Flow,Feature,"",New,Should have,Destroy session / logout user on deleting an account,Robert Lemke,Andreas Förthner,2012-10-25 02:46,Security,"",2009-11-19,"","",0,2009-11-19 11:50,"","",1781050,"","","On calling remove() , the Account Repository should invalidate the session (or whatever is necessary) of the given account before deleting it."
5446,TYPO3.Flow,Feature,"",Resolved,Should have,Implement PDO based Cache Backend,Robert Lemke,Karsten Dambekalns,2010-10-20 05:40,Cache,1.0 alpha 7,2009-11-20,"","",100,2009-11-20 03:44,"","",1799850,"","","We need a cache backend which supports PDO compatible databases.

Hint: Look at TYPO3 4.3."
5480,TYPO3.Flow,Feature,"",Resolved,Should have,JoinPoint should provide a method hasException(),Robert Lemke,Robert Lemke,2010-10-20 05:40,AOP,1.0 alpha 7,2009-11-24,"","",100,2009-11-24 04:09,"","",1799800,"","",When implementing After advices it might be handy to test for a possible exception thrown by the target method. Therefore JoinPoint should provide a method hasException().
5481,TYPO3.Flow,Feature,"",Resolved,Should have,Implement meaningful logging for security / authentication,Robert Lemke,Robert Lemke,2010-10-20 05:40,Security,1.0 alpha 7,2009-11-24,"","",100,2009-11-24 04:14,"","",1799750,"","","Finding out what's wrong during the authentication process can be cumbersome due to its complexity. Therefore we need some meaningful logging which helps debugging new client code (or the security framework itself) and at the same time audit the authentication mechanism of an application.

Logging should be implemented as an aspect. -Advices should only be active if this is required by current logging threshold.-"
5484,TYPO3.Flow,Bug,"",Resolved,Must have,AOP proxy builder does not add some annotations to built proxy classes,Karsten Dambekalns,Karsten Dambekalns,2010-10-20 05:40,AOP,1.0 alpha 7,2009-11-24,"","",100,2009-11-24 06:20,"","",1799700,"","","The proxy classes retain @param annotations, but loose @return if no parameters exist and also any other annotations. That leads to problems with validation and possibly other things."
5485,TYPO3.Fluid,Feature,"",Rejected,Must have,"Missing operators ""==="", ""!=="" and ""!"" in fluid comparism mechanism",Steffen Ritter,"",2011-05-06 04:05,Core,"",2009-11-24,"","",0,2009-11-24 06:48,"","",2598200,"","","implement them :)

Attached patch adds the operators and furthermore adds a unit test to for all operators in different datatypes..."
5512,TYPO3.Fluid,Bug,"",Resolved,Could have,form view helper produces invalid XHTML output,Bastian Waidelich,Bastian Waidelich,2010-10-20 05:44,ViewHelpers,"",2009-11-26,"","",100,2009-11-26 07:53,"","",2598150,"","","By default the form view helper inserts hidden fields for referrer & hmac to the generated form at the very top.
I just found out, that this is not XHTML compliant as In XHTML 1.0 Strict mode all inputs have to be put in a block element.

I'd suggest to wrap the auto-generated hidden fields by
<pre>
<div style=""display: none""></div>
</pre>"
5576,TYPO3.Flow,Bug,"",Resolved,Must have,Cache Manager receives bloated configuration array,Robert Lemke,Robert Lemke,2010-10-20 05:40,Configuration,1.0 alpha 7,2009-11-30,"","",100,2009-11-30 07:24,"","",1799650,"","","The Configuration Manager gets the names and options caches configured in Caches.yaml by a setter methods. This array should only contain names of caches (cache identifiers) and their configuration options. In reality however this array contains additional information from *somewhere*:

<pre>
array(31) { [""Default""]=> array(3) { [""frontend""]=> string(40) ""F3\FLOW3\Cache\Frontend\VariableFrontend"" [""backend""]=> string(34) ""F3\FLOW3\Cache\Backend\FileBackend"" [""backendOptions""]=> array(1) { [""defaultLifetime""]=> int(0) } } [""FLOW3_AOP_ProxyClassCodes""]=> array(1) { [""frontend""]=> string(38) ""F3\FLOW3\Cache\Frontend\StringFrontend"" } [""FLOW3_AOP_ProxyBuildInformation""]=> array(0) { } [""FLOW3_AOP_TargetClassInformation""]=> array(0) { } [""FLOW3_Cache_ClassFiles""]=> array(0) { } [""FLOW3_Cache_ResourceFiles""]=> array(0) { } [""FLOW3_Configuration""]=> array(0) { } [""FLOW3_Core""]=> array(0) { } [""FLOW3_Monitor""]=> array(0) { } [""FLOW3_Reflection""]=> array(0) { } [""FLOW3_Resource_MetaData""]=> array(0) { } [""FLOW3_Resource_Status""]=> array(1) { [""frontend""]=> string(38) ""F3\FLOW3\Cache\Frontend\StringFrontend"" } [""FLOW3_Security_Policy""]=> array(0) { } [""FLOW3_Security_Cryptography_RSAWallet""]=> array(2) { [""backend""]=> string(34) ""F3\FLOW3\Cache\Backend\FileBackend"" [""backendOptions""]=> array(1) { [""defaultLifetime""]=> int(30) } } [""FLOW3_Object_Configurations""]=> array(0) { } [""FLOW3_MVC_Web_Routing_FindMatchResults""]=> array(2) { [""backend""]=> string(45) ""F3\FLOW3\Cache\Backend\TransientMemoryBackend"" [""backendOptions""]=> array(1) { [""defaultLifetime""]=> int(0) } } [""FLOW3_MVC_Web_Routing_Resolve""]=> array(3) { [""frontend""]=> string(38) ""F3\FLOW3\Cache\Frontend\StringFrontend"" [""backend""]=> string(45) ""F3\FLOW3\Cache\Backend\TransientMemoryBackend"" [""backendOptions""]=> array(1) { [""defaultLifetime""]=> int(0) } } [""Fluid_SyntaxTreeCache""]=> array(3) { [""frontend""]=> string(40) ""F3\FLOW3\Cache\Frontend\VariableFrontend"" [""backend""]=> string(45) ""F3\FLOW3\Cache\Backend\TransientMemoryBackend"" [""backendOptions""]=> array(1) { [""defaultLifetime""]=> int(0) } } [""FLOW3""]=> array(17) { [""Default""]=> array(3) { [""frontend""]=> string(40) ""F3\FLOW3\Cache\Frontend\VariableFrontend"" [""backend""]=> string(34) ""F3\FLOW3\Cache\Backend\FileBackend"" [""backendOptions""]=> array(1) { [""defaultLifetime""]=> int(0) } } [""FLOW3_AOP_ProxyClassCodes""]=> array(1) { [""frontend""]=> string(38) ""F3\FLOW3\Cache\Frontend\StringFrontend"" } [""FLOW3_AOP_ProxyBuildInformation""]=> array(0) { } [""FLOW3_AOP_TargetClassInformation""]=> array(0) { } [""FLOW3_Cache_ClassFiles""]=> array(0) { } [""FLOW3_Cache_ResourceFiles""]=> array(0) { } [""FLOW3_Configuration""]=> array(0) { } [""FLOW3_Core""]=> array(0) { } [""FLOW3_Monitor""]=> array(0) { } [""FLOW3_Reflection""]=> array(0) { } [""FLOW3_Resource_MetaData""]=> array(0) { } [""FLOW3_Resource_Status""]=> array(1) { [""frontend""]=> string(38) ""F3\FLOW3\Cache\Frontend\StringFrontend"" } [""FLOW3_Security_Policy""]=> array(0) { } [""FLOW3_Security_Cryptography_RSAWallet""]=> array(2) { [""backend""]=> string(34) ""F3\FLOW3\Cache\Backend\FileBackend"" [""backendOptions""]=> array(1) { [""defaultLifetime""]=> int(30) } } [""FLOW3_Object_Configurations""]=> array(0) { } [""FLOW3_MVC_Web_Routing_FindMatchResults""]=> array(2) { [""backend""]=> string(45) ""F3\FLOW3\Cache\Backend\TransientMemoryBackend"" [""backendOptions""]=> array(1) { [""defaultLifetime""]=> int(0) } } [""FLOW3_MVC_Web_Routing_Resolve""]=> array(3) { [""frontend""]=> string(38) ""F3\FLOW3\Cache\Frontend\StringFrontend"" [""backend""]=> string(45) ""F3\FLOW3\Cache\Backend\TransientMemoryBackend"" [""backendOptions""]=> array(1) { [""defaultLifetime""]=> int(0) } } } [""DocumentationBrowser""]=> array(0) { } [""ExtJS""]=> array(0) { } [""Fluid""]=> array(1) { [""Fluid_SyntaxTreeCache""]=> array(3) { [""frontend""]=> string(40) ""F3\FLOW3\Cache\Frontend\VariableFrontend"" [""backend""]=> string(45) ""F3\FLOW3\Cache\Backend\TransientMemoryBackend"" [""backendOptions""]=> array(1) { [""defaultLifetime""]=> int(0) } } } [""Kickstart""]=> array(0) { } [""PHP6""]=> array(0) { } [""PHPCR""]=> array(0) { } [""PHPUnit""]=> array(0) { } [""Party""]=> array(0) { } [""TYPO3CR""]=> array(0) { } [""Testing""]=> array(0) { } [""Welcome""]=> array(0) { } [""YAML""]=> array(0) { } }
</pre>"
5577,TYPO3.Flow,Feature,"",Resolved,Should have,Implement postprocessing and validation into the configuration manager,Robert Lemke,Robert Lemke,2010-10-20 05:40,Configuration,1.0 alpha 7,2009-11-30,"","",100,2009-11-30 07:28,"","",1799600,"","","The Configuration Manager should provides some kind of hooks to allow the different submodules of FLOW3 to postprocess and validate their configuration.

Currently this postprocessing is done directly in the Configuration Manager (where it doesn't belong) and validation is done during runtime in the sub modules (which is unnecessary because cached configuration doesn't need to be validated again)."
5579,TYPO3.Flow,Task,"",Resolved,Should have,Replace FLOW3.yaml file by a regular Settings.yaml file,Robert Lemke,Robert Lemke,2010-10-20 05:40,Configuration,1.0 alpha 7,2009-11-30,"","",100,2009-11-30 07:35,"","",24650,"","","Historically it made sense to have a dedicated FLOW3.yaml file. However, in reality it only contains regular settings of the FLOW3 package ? nothing really different from other settings.

The only differences between FLOW3 settings and other package's settings are:

* FLOW3 settings can only be defined in the FLOW3 package itself or in the global configuration directories ? not in any package's Configuration directory
* FLOW3 settings are loaded very early during the boot process, even before the Object Manager is initialized

For consistency and KISS reasons, the options defined in FLOW3.yaml should be moved to a regular Settings.yaml file."
5583,TYPO3.Fluid,Story,"",Closed,Should have,DateFormat View Helper doesn't respect locale setting,Susanne Moog,"",2011-05-06 04:19,ViewHelpers,"",2009-11-30,"","",0,2009-11-30 08:39,"","",2598100,"","","Hi [this is related to fluid, I don't know if this is the right bugtracker],

just found out that the format date viewhelper does not support local date settings (day or month names etc) because it uses the DateFormat object that does not care for the locale.

A short test case shows this:

dateTime->format('l, d. F Y'): Monday, 30. November 2009
strftime('%A, %d. %B %G'): Monday, 30. November 2009

setlocale(LC_ALL, 'de_DE.utf8');

dateTime->format('l, d. F Y'): Monday, 30. November 2009
strftime('%A, %d. %B %G'): Montag, 30. November 2009

(compare ""Monday"" and ""Montag"" in the last part)

Code:

$dateTime = new DateTime();
echo 'dateTime->format(\'l, d. F Y\'):';
echo $dateTime->format('l, d. F Y');
echo 'strftime(\'%A, %d. %B %G\'):';
echo strftime('%A, %d. %B %G');
echo ""\n"";
echo 'setlocale(LC_ALL, \'de_DE.utf8\')' . ""\n\n"";
setlocale(LC_ALL, 'de_DE.utf8');
echo 'dateTime->format(\'l, d. F Y\'):';
echo $dateTime->format('l, d. F Y');
echo 'strftime(\'%A, %d. %B %G\'):';
echo strftime('%A, %d. %B %G');


We could probably use strftime for locales other than en_US (or always?). If you think that reasonable I'll try making a patch at the weekend."
5589,TYPO3.Flow,Bug,"",Resolved,Should have,InitalizeActions typo in FLOW3 Manual,Zach Davis,Karsten Dambekalns,2010-10-20 05:40,- Documentation -,1.0 alpha 7,2009-11-30,"","",100,2009-11-30 13:06,"","",1799550,"","","The FLOW3 manual mentions the ""initializedAction()"" init method on action controllers, while the API docs contain ""initializeAction()"" (no 'd' in the latter).

The typo is here:

http://flow3.typo3.org/documentation/manuals/flow3/flow3.mvcframework/#d0e2242 -- search for ""initializedAction""

I believe it should be ""initializeAction"" as per:

http://flow3.typo3.org/fileadmin/API/FLOW3/F3/FLOW3/MVC/Controller/class-ActionController.html

"
5599,TYPO3.Flow,Bug,"",Resolved,Should have,Various typos in documentation,Michael Sauter,Karsten Dambekalns,2010-10-20 05:40,- Documentation -,1.0 alpha 7,2009-12-02,"","",100,2009-12-01 19:11,"","",1799500,"","","I found a couple of (really) minor bugs and typos while going through the docs ...

In chapter 5, example 5.16, the method ""someAction"" uses $greeter, but that should be $this->greeter.

In chapther 13.2, section ""More-factor authentication strategy"", the last sentence of the first paragraph should read ""This option is disabled by default and can be enabled with the following configuration:"" instead of ""This option is by disabled by default and can be enable with the following configuration:"".

In chapter 13.2, section ""Authentication mechanisms shipped with FLOW3"", in the last sentence in the first paragraph it should be ""please"" instead of ""pleas"".

In chapter 13.3, in the fifth paragraph it should be ""If you want, you could implement your own access decision manager."" instead of ""If you want, could implement your own access decision manager.""

In chapter 13.4, section ""Roles"", the second sentence should be ""A granted authority can be attached to an users security context, to determine which rights should be granted to her."" instead of ""A granted authority can be attached to an users security context, to determine the which rights should be granted to her."""
5612,TYPO3.Flow,Feature,"",Resolved,Should have,Property Mapper should be able to map to target if only a setter exists,Robert Lemke,Karsten Dambekalns,2010-10-20 05:40,Property,1.0 alpha 8,2009-12-03,"","",100,2009-12-03 03:51,"","",1803250,"","","The property mapper checks if it can set a certain property in the target by consulting the Class Schema of the target class. This assumes that a class property of the same name must exist in order to set a property.

However, we use the ObjectAccess API to ultimately set the property which does not require such class property. It could easily be that only a setter method exists which stores the property somewhere else and this should be sufficient to map the property.

Therefore the map function needs to be refactored to use information from ObjectAccess::isPropertySettable / isPropertyGettable instead of relying on the class schema."
5618,TYPO3.Welcome,Feature,"",Resolved,Should have,Proposal for new notice design on welcome screen,Christopher Hlubek,Christopher Hlubek,2010-10-20 05:48,"",1.0.0 alpha 7,2009-12-03,"","",100,2009-12-03 17:19,"","",2740050,"","","I think the notice/warning for enabling the development context should look nicer.

I can commit the finished CSS (see attached screenshot) if it's okay."
5636,TYPO3.Fluid,Task,Task #26658: Make Form ViewHelpers consistent,Under Review,Must have,Form_RadioViewHelper and CheckBoxViewHelper miss check for existing object before it is accessed.,Steffen Ritter,"",2013-11-22 11:14,"","",2009-12-05,"","",0,2009-12-05 12:13,"","",24700,"","","If you have an form for creating an Object currently this will fail with an exception.
The other FormViewHelper use the getValue() function to determine an property-value of object assigned to the form.
Since Checkbox/Radiobox has to compare against a value to decide if selected, they have to fetch the property-value on their own.

in getValue a check on $this->viewHelperVariableContainer->exists('Tx_Fluid_ViewHelpers_FormViewHelper', 'formObject') and an call to $this->addAdditionalIdentityPropertiesIfNeeded(); are performed before acessing the property. If you do so in RadioBox and Checkbox too, no exception anymore.

regards

Steffen"
5658,TYPO3.Flow,Task,"",Resolved,Must have,Inconsistent class names in sub namespaces (Part II),Robert Lemke,Robert Lemke,2010-10-20 05:40,"",1.0 alpha 7,2009-01-26,"","",100,2009-12-07 12:27,"","",24800,"","","From the refactoring before alpha1 there are still a few edge cases concerning the naming of classes which turned out to be disturbing. Especially the rule ""the main purpose of namespaces is categorization and ordering"" was a bit neglected by allowing these special cases.

<pre>
Currently allowed edge case           Future class name
-----------------------------------------------------------------------------------------
\F3\FLOW3\Object\Manager              \F3\FLOW3\Object\ObjectManager
\F3\Foo\Bar\Builder                   \F3\Foo\Bar\BarBuilder
\F3\FLOW3\Object\Factory              \F3\FLOW3\Object\Factory
</pre>

-To be discussed-:
* -Rename ""AbstractFoo"" to ""FooAbstract""-
* Rename ""InvalidFoo"" to ""InvalidFooException"" 

Scope of this ticket:
# Refactor class names which don't follow the above rules.
# Add the above rules to the CGL.
"
5659,TYPO3.Flow,Major Feature,"",Resolved,Must have,Implement content security,Robert Lemke,Andreas Förthner,2011-01-07 05:12,Security,"",2009-12-07,"","",0,2009-12-07 12:45,"","",1781000,"","","This ticket is a placeholder for all commits related to content security. Obviously this feature still needs to be described properly.

In general, content security will be handled by aspects affecting the persistence framework enforcing policies for all kinds of operations related to content (i.e. objects and their properties)."
5660,TYPO3.Flow,Feature,"",Resolved,Must have,Implement support for Object Converters,Robert Lemke,Robert Lemke,2010-10-20 05:40,Property,1.0 alpha 7,2009-12-07,"","",100,2009-12-07 13:01,"","",1799450,"","","Now finally the Property Mapper needs to support custom Object Converters (we previously called the Property Editors). We'll need them to convert a string to DateTime, a file upload array to a Resource object and probably a few more cases.

There should be an interface for Object Converters and all classes implementing this interface should automatically be registered as converters for the Property Mapper. Each converter can be responsible for one or more types (class names), but no two converters may be responsible for the same type."
5774,TYPO3.Flow,Feature,"",New,Should have,Package Manager should clear all cache entries tagged with %PACKAGE%,Robert Lemke,"",2010-10-20 05:39,Package,"",2009-12-17,"","",0,2009-12-17 10:52,"","",1780950,"","","Whenever a package is activate, deactivated or upgraded the Package Manager should flush all cache entries which are tagged with \F3\FLOW3\Cache\Frontend\FrontendInterface::TAG_PACKAGE."
5783,TYPO3.Fluid,Bug,"",Resolved,Must have,The AbstractViewHelper floods the syslog,Jochen Rau,Sebastian Kurfuerst,2010-10-20 05:44,Core,"",2010-06-18,2010-06-18,"",100,2009-12-17 18:11,"","",2598050,"","",See related issue #5605 in Extbase.
5822,TYPO3.Flow,Feature,"",Resolved,Must have,Implement proper resource management,Robert Lemke,Robert Lemke,2010-10-20 05:40,Resource,1.0 alpha 7,2009-12-21,"","",100,2009-12-21 10:55,"","",1799400,"","","The Resource sub package must be redone. It should support:

* automatic publishing of static package resources
* on-demand publication of persistent resources
* import of persistent resources
* upload of persistent resources (file upload)
* flexible publisher which eventually supports Content Delivery Networks"
5833,TYPO3.Kickstart,Bug,"",Resolved,Should have,Inflection viewhelper doesn't work anymore,Robert Lemke,Karsten Dambekalns,2010-10-20 05:48,"",1.0.0 alpha 7,2009-12-22,"","",100,2009-12-22 12:24,"","",2740400,"","","While building models (and also kickstarting other types of classes) the placeholders in the Fluid template are not replaced by their real value anymore:

<pre>
/**
 * A {k:inflect.humanizeCamelCase(""{modelName}"")}
 *
 * @version $Id: $
 * @license http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later
 * @scope prototype
 * @entity
 */
class Paper {

	/**
	 * The {k:inflect.humanizeCamelCase(""title"" lowercase=""true"")}
	 * @var string
	 */
	protected $title;
</pre>

Maybe the view helpers don't work with the current Fluid API anymore?"
5846,TYPO3.Flow,Feature,"",Resolved,Should have,Implement Account Factory,Robert Lemke,Robert Lemke,2010-10-20 05:40,Security,1.0 alpha 8,2010-03-10,"",1.00,100,2009-12-28 05:19,"","",1803200,"","","Currently the typical code for creating a password-based account looks like this:

<pre>
		$roles = array(
			$this->objectFactory->create('F3\FLOW3\Security\ACL\Role', 'Participant'),
		);

		$salt = substr(md5(uniqid(rand(), TRUE)), 0, rand(6, 10));

		$account = $this->objectFactory->create('F3\Party\Domain\Model\Account');
		$account->setAccountIdentifier($accountIdentifier);
		$account->setCredentialsSource(md5(md5($password) . $salt) . ',' . $salt);
		$account->setAuthenticationProviderName('DefaultProvider');
		$account->setRoles($roles);

		$newPerson->addAccount($account);
		$this->personRepository->add($newPerson);
</pre>

It is not very intuitive and probably error prone for newbies having to write that much code
in order to create an account. Another problem is that we rely on a third developer's ability
to create a secure salt.

We therefore should provide some kind of account factory which allows for easy creation of
typical accounts:

<pre>
   $newAccount = $accountFactory->createAccountWithPassword('identifier', 'password', array('role1', 'role2'));
</pre>

This would also be a good opportunity to move the Account model to the FLOW3 Security sub package because
it belongs more to security than to Party. The setParty() and getParty() methods should refer to a PartyInterface
rather than a specific implementation"
5849,TYPO3.Flow,Feature,"",Resolved,Should have,Rebuild proxy classes if security policy changes,Robert Lemke,Robert Lemke,2012-04-26 08:38,Monitor,1.1 beta 1,2009-12-28,"","",100,2009-12-28 07:16,"","",1780900,"","","We need to monitor the settings (or probably later called ""Policies.yaml"") file and rebuild the AOP proxy classes if it changes.
"
5851,TYPO3.Flow,Task,"",Resolved,Should have,Security Context Holder redundant?,Robert Lemke,Andreas Förthner,2010-10-20 05:40,Security,1.0 alpha 8,2009-12-28,"","",100,2009-12-28 13:31,"","",25250,"","","It's a bit inconvenient to get hold of the security context because you need to get the Security Context Holder injected first and ask it for the current Security Context.
Maybe we don't need the Security Context Holder at all - what other implementation could be imagined anyway?

If there's no other Context Holder implementation at sight we should remove it altogether and use the Security Context directly (which has a session scope)."
